// Code generated by hertz generator. DO NOT EDIT.

package router

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"

	coze "code.byted.org/flow/opencoze/backend/api/router/coze"
)

// GeneratedRegister registers routers generated by IDL.
func GeneratedRegister(r *server.Hertz) {
	// INSERT_POINT: DO NOT DELETE THIS LINE!
	coze.Register(r)
	type data struct {
		Code int32  `json:"code"`
		Msg  string `json:"msg"`
	}
	// TODO: remove me later
	// 不需要的接口，但是阻塞了测试，开源场景后续要下掉。

	// TODO This interface needs to be implemented on the workflow side in the later stage
	r.POST("/api/devops/debugger/v1/coze/testcase/casedata/mget", func(c context.Context, ctx *app.RequestContext) {
		ctx.JSON(200, map[string]interface{}{
			"code":      0,
			"hasNext":   false,
			"msg":       "",
			"nextToken": "",
		})
	})

	// r.POST("/api/bot/get_type_list", func(c context.Context, ctx *app.RequestContext) {
	// 	modelObj := map[string]interface{}{}
	// 	err := sonic.UnmarshalString(mockChatModelObject, &modelObj)
	// 	if err != nil {
	// 		ctx.JSON(500, map[string]interface{}{
	// 			"code": -1,
	// 			"msg":  err.Error(),
	// 		})
	// 		return
	// 	}
	// 	response := make(map[string]interface{})
	// 	response["code"] = 0
	// 	response["msg"] = "success"
	// 	response["data"] = map[string]interface{}{"model_list": []interface{}{modelObj}}
	// 	ctx.JSON(200, response)
	//
	// })

}
