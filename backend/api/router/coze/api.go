// Code generated by hertz generator. DO NOT EDIT.

package coze

import (
	coze "code.byted.org/flow/opencoze/backend/api/handler/coze"
	"github.com/cloudwego/hertz/pkg/app/server"
)

/*
 This file will register all the routes of the services in the master idl.
 And it will update automatically when you use the "update" command for the idl.
 So don't modify the contents of the file, or your code will be deleted when it is updated.
*/

// Register register routes based on the IDL 'api.${HTTP Method}' annotation.
func Register(r *server.Hertz) {

	root := r.Group("/", rootMw()...)
	{
		_api := root.Group("/api", _apiMw()...)
		{
			_draftbot := _api.Group("/draftbot", _draftbotMw()...)
			_draftbot.POST("/create", append(_draftbotcreateMw(), coze.DraftBotCreate)...)
		}
		{
			_knowledge := _api.Group("/knowledge", _knowledgeMw()...)
			_knowledge.POST("/create", append(_createdatasetMw(), coze.CreateDataset)...)
			_knowledge.POST("/delete", append(_deletedatasetMw(), coze.DeleteDataset)...)
			_knowledge.POST("/detail", append(_datasetdetailMw(), coze.DatasetDetail)...)
			_knowledge.POST("/list", append(_listdatasetMw(), coze.ListDataset)...)
			_knowledge.POST("/update", append(_updatedatasetMw(), coze.UpdateDataset)...)
			{
				_document := _knowledge.Group("/document", _documentMw()...)
				_document.POST("/create", append(_createdocumentMw(), coze.CreateDocument)...)
				_document.POST("/delete", append(_deletedocumentMw(), coze.DeleteDocument)...)
				_document.POST("/list", append(_listdocumentMw(), coze.ListDocument)...)
				_document.POST("/resegment", append(_resegmentMw(), coze.Resegment)...)
				_document.POST("/update", append(_updatedocumentMw(), coze.UpdateDocument)...)
				{
					_progress := _document.Group("/progress", _progressMw()...)
					_progress.POST("/get", append(_getdocumentprogressMw(), coze.GetDocumentProgress)...)
				}
			}
			{
				_photo := _knowledge.Group("/photo", _photoMw()...)
				_photo.POST("/caption", append(_updatephotocaptionMw(), coze.UpdatePhotoCaption)...)
				_photo.POST("/detail", append(_photodetailMw(), coze.PhotoDetail)...)
				_photo.POST("/list", append(_listphotoMw(), coze.ListPhoto)...)
			}
			{
				_slice := _knowledge.Group("/slice", _sliceMw()...)
				_slice.POST("/create", append(_createsliceMw(), coze.CreateSlice)...)
				_slice.POST("/delete", append(_deletesliceMw(), coze.DeleteSlice)...)
				_slice.POST("/list", append(_listsliceMw(), coze.ListSlice)...)
				_slice.POST("/update", append(_updatesliceMw(), coze.UpdateSlice)...)
			}
			{
				_table_schema := _knowledge.Group("/table_schema", _table_schemaMw()...)
				_table_schema.POST("/get", append(_gettableschemaMw(), coze.GetTableSchema)...)
				_table_schema.POST("/validate", append(_validatetableschemaMw(), coze.ValidateTableSchema)...)
			}
		}
		{
			_memory := _api.Group("/memory", _memoryMw()...)
			_memory.GET("/doc_table_info", append(_getdocumenttableinfoMw(), coze.GetDocumentTableInfo)...)
			_memory.GET("/sys_variable_conf", append(_getsysvariableconfMw(), coze.GetSysVariableConf)...)
			{
				_project := _memory.Group("/project", _projectMw()...)
				{
					_variable := _project.Group("/variable", _variableMw()...)
					_variable.GET("/meta_list", append(_getprojectvariablelistMw(), coze.GetProjectVariableList)...)
					_variable.POST("/meta_update", append(_updateprojectvariableMw(), coze.UpdateProjectVariable)...)
				}
			}
		}
		{
			_playground_api := _api.Group("/playground_api", _playground_apiMw()...)
			_playground_api.POST("/upsert_prompt_resource", append(_upsertpromptresourceMw(), coze.UpsertPromptResource)...)
			{
				_draftbot0 := _playground_api.Group("/draftbot", _draftbot0Mw()...)
				_draftbot0.POST("/get_draft_bot_info", append(_getdraftbotinfoMw(), coze.GetDraftBotInfo)...)
				_draftbot0.POST("/update_draft_bot_info", append(_updatedraftbotinfoMw(), coze.UpdateDraftBotInfo)...)
			}
		}
		{
			_plugin_api := _api.Group("/plugin_api", _plugin_apiMw()...)
			_plugin_api.POST("/create_api", append(_createapiMw(), coze.CreateAPI)...)
			_plugin_api.POST("/del_plugin", append(_delpluginMw(), coze.DelPlugin)...)
			_plugin_api.POST("/delete_api", append(_deleteapiMw(), coze.DeleteAPI)...)
			_plugin_api.POST("/delete_bot_default_params", append(_deletebotdefaultparamsMw(), coze.DeleteBotDefaultParams)...)
			_plugin_api.POST("/get_bot_default_params", append(_getbotdefaultparamsMw(), coze.GetBotDefaultParams)...)
			_plugin_api.POST("/get_playground_plugin_list", append(_getplaygroundpluginlistMw(), coze.GetPlaygroundPluginList)...)
			_plugin_api.POST("/get_plugin_apis", append(_getpluginapisMw(), coze.GetPluginAPIs)...)
			_plugin_api.POST("/get_plugin_info", append(_getplugininfoMw(), coze.GetPluginInfo)...)
			_plugin_api.POST("/get_updated_apis", append(_getupdatedapisMw(), coze.GetUpdatedAPIs)...)
			_plugin_api.POST("/publish_plugin", append(_publishpluginMw(), coze.PublishPlugin)...)
			_plugin_api.POST("/register_plugin_meta", append(_registerpluginmetaMw(), coze.RegisterPluginMeta)...)
			_plugin_api.POST("/update", append(_updatepluginMw(), coze.UpdatePlugin)...)
			_plugin_api.POST("/update_api", append(_updateapiMw(), coze.UpdateAPI)...)
			_plugin_api.POST("/update_bot_default_params", append(_updatebotdefaultparamsMw(), coze.UpdateBotDefaultParams)...)
			_plugin_api.POST("/update_plugin_meta", append(_updatepluginmetaMw(), coze.UpdatePluginMeta)...)
		}
	}
}
