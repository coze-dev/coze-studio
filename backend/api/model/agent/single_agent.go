// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package agent

import (
	"context"
	"fmt"

	"github.com/apache/thrift/lib/go/thrift"

	"code.byted.org/flow/opencoze/backend/api/model/ocean/cloud/developer_api"
	"code.byted.org/flow/opencoze/backend/api/model/ocean/cloud/playground"
)

type SingleAgentService interface {
	UpdateDraftBotInfoAgw(ctx context.Context, request *playground.UpdateDraftBotInfoAgwRequest) (r *playground.UpdateDraftBotInfoAgwResponse, err error)

	DraftBotCreate(ctx context.Context, request *developer_api.DraftBotCreateRequest) (r *developer_api.DraftBotCreateResponse, err error)

	GetDraftBotInfoAgw(ctx context.Context, request *playground.GetDraftBotInfoAgwRequest) (r *playground.GetDraftBotInfoAgwResponse, err error)
}

type SingleAgentServiceClient struct {
	c thrift.TClient
}

func NewSingleAgentServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *SingleAgentServiceClient {
	return &SingleAgentServiceClient{
		c: thrift.NewTStandardClient(f.GetProtocol(t), f.GetProtocol(t)),
	}
}

func NewSingleAgentServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *SingleAgentServiceClient {
	return &SingleAgentServiceClient{
		c: thrift.NewTStandardClient(iprot, oprot),
	}
}

func NewSingleAgentServiceClient(c thrift.TClient) *SingleAgentServiceClient {
	return &SingleAgentServiceClient{
		c: c,
	}
}

func (p *SingleAgentServiceClient) Client_() thrift.TClient {
	return p.c
}

func (p *SingleAgentServiceClient) UpdateDraftBotInfoAgw(ctx context.Context, request *playground.UpdateDraftBotInfoAgwRequest) (r *playground.UpdateDraftBotInfoAgwResponse, err error) {
	var _args SingleAgentServiceUpdateDraftBotInfoAgwArgs
	_args.Request = request
	var _result SingleAgentServiceUpdateDraftBotInfoAgwResult
	if err = p.Client_().Call(ctx, "UpdateDraftBotInfoAgw", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *SingleAgentServiceClient) DraftBotCreate(ctx context.Context, request *developer_api.DraftBotCreateRequest) (r *developer_api.DraftBotCreateResponse, err error) {
	var _args SingleAgentServiceDraftBotCreateArgs
	_args.Request = request
	var _result SingleAgentServiceDraftBotCreateResult
	if err = p.Client_().Call(ctx, "DraftBotCreate", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
func (p *SingleAgentServiceClient) GetDraftBotInfoAgw(ctx context.Context, request *playground.GetDraftBotInfoAgwRequest) (r *playground.GetDraftBotInfoAgwResponse, err error) {
	var _args SingleAgentServiceGetDraftBotInfoAgwArgs
	_args.Request = request
	var _result SingleAgentServiceGetDraftBotInfoAgwResult
	if err = p.Client_().Call(ctx, "GetDraftBotInfoAgw", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

type SingleAgentServiceProcessor struct {
	processorMap map[string]thrift.TProcessorFunction
	handler      SingleAgentService
}

func (p *SingleAgentServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
	p.processorMap[key] = processor
}

func (p *SingleAgentServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
	processor, ok = p.processorMap[key]
	return processor, ok
}

func (p *SingleAgentServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
	return p.processorMap
}

func NewSingleAgentServiceProcessor(handler SingleAgentService) *SingleAgentServiceProcessor {
	self := &SingleAgentServiceProcessor{handler: handler, processorMap: make(map[string]thrift.TProcessorFunction)}
	self.AddToProcessorMap("UpdateDraftBotInfoAgw", &singleAgentServiceProcessorUpdateDraftBotInfoAgw{handler: handler})
	self.AddToProcessorMap("DraftBotCreate", &singleAgentServiceProcessorDraftBotCreate{handler: handler})
	self.AddToProcessorMap("GetDraftBotInfoAgw", &singleAgentServiceProcessorGetDraftBotInfoAgw{handler: handler})
	return self
}
func (p *SingleAgentServiceProcessor) Process(ctx context.Context, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	name, _, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return false, err
	}
	if processor, ok := p.GetProcessorFunction(name); ok {
		return processor.Process(ctx, seqId, iprot, oprot)
	}
	iprot.Skip(thrift.STRUCT)
	iprot.ReadMessageEnd()
	x := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function "+name)
	oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
	x.Write(oprot)
	oprot.WriteMessageEnd()
	oprot.Flush(ctx)
	return false, x
}

type singleAgentServiceProcessorUpdateDraftBotInfoAgw struct {
	handler SingleAgentService
}

func (p *singleAgentServiceProcessorUpdateDraftBotInfoAgw) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := SingleAgentServiceUpdateDraftBotInfoAgwArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("UpdateDraftBotInfoAgw", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := SingleAgentServiceUpdateDraftBotInfoAgwResult{}
	var retval *playground.UpdateDraftBotInfoAgwResponse
	if retval, err2 = p.handler.UpdateDraftBotInfoAgw(ctx, args.Request); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing UpdateDraftBotInfoAgw: "+err2.Error())
		oprot.WriteMessageBegin("UpdateDraftBotInfoAgw", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("UpdateDraftBotInfoAgw", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type singleAgentServiceProcessorDraftBotCreate struct {
	handler SingleAgentService
}

func (p *singleAgentServiceProcessorDraftBotCreate) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := SingleAgentServiceDraftBotCreateArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("DraftBotCreate", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := SingleAgentServiceDraftBotCreateResult{}
	var retval *developer_api.DraftBotCreateResponse
	if retval, err2 = p.handler.DraftBotCreate(ctx, args.Request); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing DraftBotCreate: "+err2.Error())
		oprot.WriteMessageBegin("DraftBotCreate", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("DraftBotCreate", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type singleAgentServiceProcessorGetDraftBotInfoAgw struct {
	handler SingleAgentService
}

func (p *singleAgentServiceProcessorGetDraftBotInfoAgw) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := SingleAgentServiceGetDraftBotInfoAgwArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("GetDraftBotInfoAgw", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return false, err
	}

	iprot.ReadMessageEnd()
	var err2 error
	result := SingleAgentServiceGetDraftBotInfoAgwResult{}
	var retval *playground.GetDraftBotInfoAgwResponse
	if retval, err2 = p.handler.GetDraftBotInfoAgw(ctx, args.Request); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing GetDraftBotInfoAgw: "+err2.Error())
		oprot.WriteMessageBegin("GetDraftBotInfoAgw", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush(ctx)
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("GetDraftBotInfoAgw", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(ctx); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type SingleAgentServiceUpdateDraftBotInfoAgwArgs struct {
	Request *playground.UpdateDraftBotInfoAgwRequest `thrift:"request,1"`
}

func NewSingleAgentServiceUpdateDraftBotInfoAgwArgs() *SingleAgentServiceUpdateDraftBotInfoAgwArgs {
	return &SingleAgentServiceUpdateDraftBotInfoAgwArgs{}
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) InitDefault() {
}

var SingleAgentServiceUpdateDraftBotInfoAgwArgs_Request_DEFAULT *playground.UpdateDraftBotInfoAgwRequest

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) GetRequest() (v *playground.UpdateDraftBotInfoAgwRequest) {
	if !p.IsSetRequest() {
		return SingleAgentServiceUpdateDraftBotInfoAgwArgs_Request_DEFAULT
	}
	return p.Request
}

var fieldIDToName_SingleAgentServiceUpdateDraftBotInfoAgwArgs = map[int16]string{
	1: "request",
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) Read(iprot thrift.TProtocol) (err error) {
	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_SingleAgentServiceUpdateDraftBotInfoAgwArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := playground.NewUpdateDraftBotInfoAgwRequest()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Request = _field
	return nil
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateDraftBotInfoAgw_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("request", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Request.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SingleAgentServiceUpdateDraftBotInfoAgwArgs(%+v)", *p)

}

type SingleAgentServiceUpdateDraftBotInfoAgwResult struct {
	Success *playground.UpdateDraftBotInfoAgwResponse `thrift:"success,0,optional"`
}

func NewSingleAgentServiceUpdateDraftBotInfoAgwResult() *SingleAgentServiceUpdateDraftBotInfoAgwResult {
	return &SingleAgentServiceUpdateDraftBotInfoAgwResult{}
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) InitDefault() {
}

var SingleAgentServiceUpdateDraftBotInfoAgwResult_Success_DEFAULT *playground.UpdateDraftBotInfoAgwResponse

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) GetSuccess() (v *playground.UpdateDraftBotInfoAgwResponse) {
	if !p.IsSetSuccess() {
		return SingleAgentServiceUpdateDraftBotInfoAgwResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_SingleAgentServiceUpdateDraftBotInfoAgwResult = map[int16]string{
	0: "success",
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) Read(iprot thrift.TProtocol) (err error) {
	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_SingleAgentServiceUpdateDraftBotInfoAgwResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) ReadField0(iprot thrift.TProtocol) error {
	_field := playground.NewUpdateDraftBotInfoAgwResponse()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("UpdateDraftBotInfoAgw_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *SingleAgentServiceUpdateDraftBotInfoAgwResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SingleAgentServiceUpdateDraftBotInfoAgwResult(%+v)", *p)

}

type SingleAgentServiceDraftBotCreateArgs struct {
	Request *developer_api.DraftBotCreateRequest `thrift:"request,1"`
}

func NewSingleAgentServiceDraftBotCreateArgs() *SingleAgentServiceDraftBotCreateArgs {
	return &SingleAgentServiceDraftBotCreateArgs{}
}

func (p *SingleAgentServiceDraftBotCreateArgs) InitDefault() {
}

var SingleAgentServiceDraftBotCreateArgs_Request_DEFAULT *developer_api.DraftBotCreateRequest

func (p *SingleAgentServiceDraftBotCreateArgs) GetRequest() (v *developer_api.DraftBotCreateRequest) {
	if !p.IsSetRequest() {
		return SingleAgentServiceDraftBotCreateArgs_Request_DEFAULT
	}
	return p.Request
}

var fieldIDToName_SingleAgentServiceDraftBotCreateArgs = map[int16]string{
	1: "request",
}

func (p *SingleAgentServiceDraftBotCreateArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *SingleAgentServiceDraftBotCreateArgs) Read(iprot thrift.TProtocol) (err error) {
	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_SingleAgentServiceDraftBotCreateArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *SingleAgentServiceDraftBotCreateArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := developer_api.NewDraftBotCreateRequest()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Request = _field
	return nil
}

func (p *SingleAgentServiceDraftBotCreateArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("DraftBotCreate_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *SingleAgentServiceDraftBotCreateArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("request", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Request.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *SingleAgentServiceDraftBotCreateArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SingleAgentServiceDraftBotCreateArgs(%+v)", *p)

}

type SingleAgentServiceDraftBotCreateResult struct {
	Success *developer_api.DraftBotCreateResponse `thrift:"success,0,optional"`
}

func NewSingleAgentServiceDraftBotCreateResult() *SingleAgentServiceDraftBotCreateResult {
	return &SingleAgentServiceDraftBotCreateResult{}
}

func (p *SingleAgentServiceDraftBotCreateResult) InitDefault() {
}

var SingleAgentServiceDraftBotCreateResult_Success_DEFAULT *developer_api.DraftBotCreateResponse

func (p *SingleAgentServiceDraftBotCreateResult) GetSuccess() (v *developer_api.DraftBotCreateResponse) {
	if !p.IsSetSuccess() {
		return SingleAgentServiceDraftBotCreateResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_SingleAgentServiceDraftBotCreateResult = map[int16]string{
	0: "success",
}

func (p *SingleAgentServiceDraftBotCreateResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *SingleAgentServiceDraftBotCreateResult) Read(iprot thrift.TProtocol) (err error) {
	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_SingleAgentServiceDraftBotCreateResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *SingleAgentServiceDraftBotCreateResult) ReadField0(iprot thrift.TProtocol) error {
	_field := developer_api.NewDraftBotCreateResponse()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *SingleAgentServiceDraftBotCreateResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("DraftBotCreate_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *SingleAgentServiceDraftBotCreateResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *SingleAgentServiceDraftBotCreateResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SingleAgentServiceDraftBotCreateResult(%+v)", *p)

}

type SingleAgentServiceGetDraftBotInfoAgwArgs struct {
	Request *playground.GetDraftBotInfoAgwRequest `thrift:"request,1"`
}

func NewSingleAgentServiceGetDraftBotInfoAgwArgs() *SingleAgentServiceGetDraftBotInfoAgwArgs {
	return &SingleAgentServiceGetDraftBotInfoAgwArgs{}
}

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) InitDefault() {
}

var SingleAgentServiceGetDraftBotInfoAgwArgs_Request_DEFAULT *playground.GetDraftBotInfoAgwRequest

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) GetRequest() (v *playground.GetDraftBotInfoAgwRequest) {
	if !p.IsSetRequest() {
		return SingleAgentServiceGetDraftBotInfoAgwArgs_Request_DEFAULT
	}
	return p.Request
}

var fieldIDToName_SingleAgentServiceGetDraftBotInfoAgwArgs = map[int16]string{
	1: "request",
}

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) Read(iprot thrift.TProtocol) (err error) {
	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 1:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField1(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_SingleAgentServiceGetDraftBotInfoAgwArgs[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) ReadField1(iprot thrift.TProtocol) error {
	_field := playground.NewGetDraftBotInfoAgwRequest()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Request = _field
	return nil
}

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("GetDraftBotInfoAgw_args"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField1(oprot); err != nil {
			fieldId = 1
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err = oprot.WriteFieldBegin("request", thrift.STRUCT, 1); err != nil {
		goto WriteFieldBeginError
	}
	if err := p.Request.Write(oprot); err != nil {
		return err
	}
	if err = oprot.WriteFieldEnd(); err != nil {
		goto WriteFieldEndError
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 1 end error: ", p), err)
}

func (p *SingleAgentServiceGetDraftBotInfoAgwArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SingleAgentServiceGetDraftBotInfoAgwArgs(%+v)", *p)

}

type SingleAgentServiceGetDraftBotInfoAgwResult struct {
	Success *playground.GetDraftBotInfoAgwResponse `thrift:"success,0,optional"`
}

func NewSingleAgentServiceGetDraftBotInfoAgwResult() *SingleAgentServiceGetDraftBotInfoAgwResult {
	return &SingleAgentServiceGetDraftBotInfoAgwResult{}
}

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) InitDefault() {
}

var SingleAgentServiceGetDraftBotInfoAgwResult_Success_DEFAULT *playground.GetDraftBotInfoAgwResponse

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) GetSuccess() (v *playground.GetDraftBotInfoAgwResponse) {
	if !p.IsSetSuccess() {
		return SingleAgentServiceGetDraftBotInfoAgwResult_Success_DEFAULT
	}
	return p.Success
}

var fieldIDToName_SingleAgentServiceGetDraftBotInfoAgwResult = map[int16]string{
	0: "success",
}

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) Read(iprot thrift.TProtocol) (err error) {
	var fieldTypeId thrift.TType
	var fieldId int16

	if _, err = iprot.ReadStructBegin(); err != nil {
		goto ReadStructBeginError
	}

	for {
		_, fieldTypeId, fieldId, err = iprot.ReadFieldBegin()
		if err != nil {
			goto ReadFieldBeginError
		}
		if fieldTypeId == thrift.STOP {
			break
		}

		switch fieldId {
		case 0:
			if fieldTypeId == thrift.STRUCT {
				if err = p.ReadField0(iprot); err != nil {
					goto ReadFieldError
				}
			} else if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		default:
			if err = iprot.Skip(fieldTypeId); err != nil {
				goto SkipFieldError
			}
		}
		if err = iprot.ReadFieldEnd(); err != nil {
			goto ReadFieldEndError
		}
	}
	if err = iprot.ReadStructEnd(); err != nil {
		goto ReadStructEndError
	}

	return nil
ReadStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read struct begin error: ", p), err)
ReadFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d begin error: ", p, fieldId), err)
ReadFieldError:
	return thrift.PrependError(fmt.Sprintf("%T read field %d '%s' error: ", p, fieldId, fieldIDToName_SingleAgentServiceGetDraftBotInfoAgwResult[fieldId]), err)
SkipFieldError:
	return thrift.PrependError(fmt.Sprintf("%T field %d skip type %d error: ", p, fieldId, fieldTypeId), err)

ReadFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T read field end error", p), err)
ReadStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
}

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) ReadField0(iprot thrift.TProtocol) error {
	_field := playground.NewGetDraftBotInfoAgwResponse()
	if err := _field.Read(iprot); err != nil {
		return err
	}
	p.Success = _field
	return nil
}

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) Write(oprot thrift.TProtocol) (err error) {
	var fieldId int16
	if err = oprot.WriteStructBegin("GetDraftBotInfoAgw_result"); err != nil {
		goto WriteStructBeginError
	}
	if p != nil {
		if err = p.writeField0(oprot); err != nil {
			fieldId = 0
			goto WriteFieldError
		}
	}
	if err = oprot.WriteFieldStop(); err != nil {
		goto WriteFieldStopError
	}
	if err = oprot.WriteStructEnd(); err != nil {
		goto WriteStructEndError
	}
	return nil
WriteStructBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
WriteFieldError:
	return thrift.PrependError(fmt.Sprintf("%T write field %d error: ", p, fieldId), err)
WriteFieldStopError:
	return thrift.PrependError(fmt.Sprintf("%T write field stop error: ", p), err)
WriteStructEndError:
	return thrift.PrependError(fmt.Sprintf("%T write struct end error: ", p), err)
}

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err = oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			goto WriteFieldBeginError
		}
		if err := p.Success.Write(oprot); err != nil {
			return err
		}
		if err = oprot.WriteFieldEnd(); err != nil {
			goto WriteFieldEndError
		}
	}
	return nil
WriteFieldBeginError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 begin error: ", p), err)
WriteFieldEndError:
	return thrift.PrependError(fmt.Sprintf("%T write field 0 end error: ", p), err)
}

func (p *SingleAgentServiceGetDraftBotInfoAgwResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SingleAgentServiceGetDraftBotInfoAgwResult(%+v)", *p)

}
