/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as base from './base';
import * as common from './common';
import * as open_api from './open_api';

export type Int64 = string | number;

export enum APIStatus {
  Testing = 1,
  Online = 2,
}

export enum District {
  Release = 1,
  Inhouse = 2,
  PPE = 3,
}

export enum FieldType {
  String = 1,
  Int = 2,
  Array = 3,
  Float = 4,
  Object = 5,
}

export enum NameSpace {
  BotPlatform = 1,
  Plugin = 2,
  MarketPlace = 3,
  DataEngine = 4,
  Workflow = 5,
  DevOps = 6,
  CardBuilder = 7,
  Engine = 8,
}

export enum OpenAPISource {
  /** open API */
  Open = 1,
  /** coze */
  Coze = 2,
}

export enum PermissionScope {
  Workspace = 0,
  Account = 1,
  Enterprise = 2,
}

export enum PermissionType {
  /** normal permission */
  Normal = 0,
  /** channel usage */
  Connector = 1,
}

export enum PrincipleType {
  /** deprecated */
  PAT = 1,
  API = 2,
  PATAndAPI = 3,
  /** deprecated */
  BotID = 4,
  /** The limited viewership of space (space_id), migrated from record in the future */
  PerWorkspace = 5,
  /** Special limit viewership of higher than the default limit viewership of (will override the limit viewership of the global rate limit (API = 2))
Special limited viewership of specific user_id */
  SpecialUser = 100,
  /** Special limited viewership of specific space_id */
  SpecialWorkspace = 101,
  /** Special limited viewership of specific enterprise enterprise_id */
  SpecialEnterprise = 102,
}

/** Definition flow_bot_developer_backend open_api thrift */
export enum TrafficType {
  /** default traffic */
  Default = 0,
  /** Professional Edition */
  Professional = 1,
  /** Enterprise Edition */
  Enterprise = 2,
}

export enum VisibleStatus {
  Open = 1,
  Close = 2,
}

export interface APIItem {
  id?: string;
  /** interface psm */
  psm?: string;
  /** interface path */
  api_path?: string;
  /** open source configuration */
  source_config?: Array<SourceConfig>;
  /** namespace */
  name_space?: string;
  /** API Documentation */
  api_doc?: string;
  /** Limited viewership of the program */
  limit_rule?: Array<RequestLimitRule>;
  /** Field information */
  attribute_schema?: AttributeSchemaInfo;
  /** effective area */
  valid_district?: Array<District>;
  /** bound permission information */
  permission?: PermissionInfo;
  /** Current API status 1-pending 2-online */
  status?: APIStatus;
  /** API playground related configuration */
  api_playground?: ApiPlayground;
  /** HTTP method */
  http_method?: string;
}

export interface ApiPlayground {
  /** First-level directories such as Agents, Conversations, etc */
  category?: string;
  /** Interface name, such as Create Agent, etc */
  title?: string;
  /** URL key, the last item corresponding to the URL of the interface of the playground page */
  url_key?: string;
  /** Effective Region & & Effective Version */
  available_info?: Array<ApiPlaygroundAvailableInfo>;
  /** All versions of this interface */
  version_list?: Array<ApiPlaygroundVersionInfo>;
  /** All optional first-level directories */
  all_categories?: Array<string>;
}

export interface ApiPlaygroundAvailableInfo {
  /** Whether it takes effect */
  available?: boolean;
  /** version */
  version?: string;
  /** boe/ppe/inhouse/release */
  zone_name: string;
}

export interface ApiPlaygroundVersionInfo {
  version?: string;
  /** The time this version was created (seconds timestamp) */
  create_time_unix?: Int64;
}

export interface AttributeSchemaInfo {
  /** Field ID */
  field_id?: number;
  /** Is it optional? */
  optional_type?: boolean;
  name?: string;
  /** field type */
  field_type?: FieldType;
  /** If it is an array type, it returns an element, no field_id, no name, only type */
  children?: Array<AttributeSchemaInfo>;
  /** If it is an object type, a set of fields is returned here, with id and name. */
  object_struct?: Array<AttributeSchemaInfo>;
  /** Is it visible to the user? */
  visibility?: boolean;
  /** describe */
  description?: string;
  /** Primitive types, such as int fields divided into int32 and int64. */
  raw_type?: string;
}

export interface BindApiPermissionReq {
  permission_id: string;
  api_id: string;
  Base?: base.Base;
}

export interface BindApiPermissionResp {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}

export interface CreateAPIDocumentRequest {
  /** API id */
  id?: string;
  Base?: base.Base;
}

export interface CreateAPIDocumentResponse {
  code?: number;
  msg?: string;
  data?: string;
  BaseResp?: base.BaseResp;
}

export interface CreatePSMRequest {
  /** Namespace */
  ns_name?: string;
  /** psm */
  psm?: string;
  /** branch */
  branch?: string;
  Base?: base.Base;
}

export interface CreatePSMResponse {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}

/** Create rules of limited viewership - operation background API */
export interface CreateRateLimitOperationReq {
  rate_limit: open_api.RateLimitConf;
  Base?: base.Base;
}

export interface CreateRateLimitOperationResp {
  BaseResp?: base.BaseResp;
}

export interface DeletePermissionReq {
  permission_info: PermissionInfo;
  Base?: base.Base;
}

export interface DeletePermissionResp {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}

export interface GetAPIDetailByIdReq {
  api_id: string;
  Base?: base.Base;
}

export interface GetAPIDetailByIdResp {
  code?: number;
  msg?: string;
  data?: APIItem;
  BaseResp?: base.BaseResp;
}

export interface GetAPIListData {
  data?: Array<APIItem>;
  total?: number;
}

export interface GetAPIListRequest {
  /** What page? */
  page?: number;
  /** page capacity */
  page_size?: number;
  /** namespace */
  name_space?: string;
  /** interface psm */
  psm?: string;
  /** interface path */
  api_path?: string;
  /** method name */
  function_name?: string;
  /** Open Source */
  source?: OpenAPISource;
  /** API id */
  api_id?: string;
  /** effective area */
  valid_district?: Array<District>;
  /** state of the interface */
  status?: APIStatus;
  Base?: base.Base;
}

export interface GetAPIListResponse {
  code?: number;
  msg?: string;
  data?: GetAPIListData;
  BaseResp?: base.BaseResp;
}

export interface GetPermissionListByParentIdData {
  data?: Array<PermissionInfo>;
  total?: number;
}

export interface GetPermissionListByParentIdReq {
  /** If it is level 1, fill in 0. */
  parent_id: string;
  page_no?: number;
  page_size?: number;
  Base?: base.Base;
}

export interface GetPermissionListByParentIdResp {
  code?: number;
  msg?: string;
  data?: GetPermissionListData;
  BaseResp?: base.BaseResp;
}

export interface GetPermissionListData {
  data?: Array<PermissionInfo>;
  total?: number;
}

export interface GetPermissionListReq {
  key_name?: string;
  permission_id?: string;
  permission_type?: PermissionType;
  page_no?: number;
  page_size?: number;
  Base?: base.Base;
}

export interface GetPermissionListResp {
  code?: number;
  msg?: string;
  data?: GetPermissionListData;
  BaseResp?: base.BaseResp;
}

/** Limited viewership of the API
 It will only return the limited viewership of the operation background configuration, and the limited viewership of the equity promotion configuration will not return */
export interface GetRateLimitOperationReq {
  path: string;
  http_method: string;
  Base?: base.Base;
}

export interface GetRateLimitOperationResp {
  /** global current limiting */
  global_limit_list?: Array<open_api.RateLimitConf>;
  /** The limited viewership of base */
  base_limit_list?: Array<open_api.RateLimitConf>;
  /** The limited viewership of expansion */
  expand_limit_list?: Array<open_api.RateLimitConf>;
  BaseResp?: base.BaseResp;
}

export interface InitAttributeInfoData {
  data?: Array<AttributeSchemaInfo>;
}

export interface InitAttributeInfoReq {
  api_id?: string;
  Base?: base.Base;
}

export interface InitAttributeInfoResp {
  code?: number;
  msg?: string;
  data?: InitAttributeInfoData;
  BaseResp?: base.BaseResp;
}

export interface PermissionInfo {
  permission_id?: string;
  key?: string;
  description?: string;
  /** display name */
  display_name?: string;
  /** Sub permission spot */
  childrens?: Array<PermissionInfo>;
  /** Is the release visible? */
  release_status?: VisibleStatus;
  /** Is inhouse visible? */
  inhouse_status?: VisibleStatus;
  create_time?: string;
  update_time?: string;
  parent_id?: string;
  /** Is ppe visible? */
  ppe_status?: VisibleStatus;
  permission_type?: PermissionType;
  /** Is it a space-related resource permission? */
  permission_scope?: PermissionScope;
  /** Complete permission_key; new key field, break the original responsible node splicing to get the key relationship */
  full_permission_key?: string;
}

/** Delete rules of limited viewership - operation background api */
export interface RemoveRateLimitOperationReq {
  /** Create the ID obtained. */
  id: string;
  Base?: base.Base;
}

export interface RemoveRateLimitOperationResp {
  BaseResp?: base.BaseResp;
}

export interface RequestLimitRule {
  /** subject type */
  type?: PrincipleType;
  /** Interval time, unit s */
  duration?: number;
  /** limit the number of times */
  limit_count?: number;
  /** Regular/Professional/Enterprise logo */
  traffic_type?: TrafficType;
  /** When PrincipleType is a special limit viewership of, the special limit viewership of id that needs to be passed in (corresponding to user_id, space_id, org_id) */
  special_id?: string;
  /** Start time (only valid for limited viewership of special, in seconds) */
  start_time_unix?: Int64;
  /** End time (only valid for limited viewership of special, in seconds) */
  end_time_unix?: Int64;
  /** Note information, you can write key information, such as contact via Feishu, group number, etc */
  remark?: string;
}

export interface SetAPIRequestLimitRuleReq {
  api_id?: string;
  limit_rule?: Array<RequestLimitRule>;
  Base?: base.Base;
}

export interface SetAPIRequestLimitRuleResp {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}

export interface SetAttributeInfoReq {
  api_id?: string;
  attribute_schema?: Array<AttributeSchemaInfo>;
  Base?: base.Base;
}

export interface SetAttributeInfoResp {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}

export interface SourceConfig {
  source?: OpenAPISource;
  visible?: boolean;
}

export interface UpdateAPIDocRequest {
  /** API id */
  id?: string;
  /** document content */
  doc_content?: string;
  Base?: base.Base;
}

export interface UpdateAPIDocResponse {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}

export interface UpdateApiPlaygroundReq {
  api_id?: string;
  api_playground?: ApiPlayground;
}

export interface UpdateApiPlaygroundResp {
  code?: number;
  msg?: string;
  BaseResp?: base.BaseResp;
}

export interface UpdateAPIVisibleRequest {
  /** API id */
  id?: string;
  /** source */
  source?: OpenAPISource;
  /** On true Off false */
  open?: boolean;
  /** effective area */
  valid_district?: Array<District>;
  Base?: base.Base;
}

export interface UpdateAPIVisibleResponse {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}

/** Update rules of limited viewership - operation background API
 The entity id is not allowed to be changed. If you want to change it, create a new one on the platform and delete this one. */
export interface UpdateRateLimitOperationReq {
  id: string;
  /** Interval time, unit s */
  duration?: number;
  /** limit the number of times */
  limit_count?: number;
  /** Effective timestamp (seconds) */
  valid_time_start_unix?: Int64;
  /** Invalid timestamp (seconds) */
  valid_time_end_unix?: Int64;
  remark?: string;
  Base?: base.Base;
}

export interface UpdateRateLimitOperationResp {
  BaseResp?: base.BaseResp;
}

export interface UpsertPermissionReq {
  permission_info: PermissionInfo;
  Base?: base.Base;
}

export interface UpsertPermissionResp {
  code?: number;
  msg?: string;
  data?: common.EmptyData;
  BaseResp?: base.BaseResp;
}
/* eslint-enable */
