/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as bot_open_api from './bot_open_api';

export type Int64 = string | number;

export interface OpenAddSpaceMemberData {
  /** List of successfully added members */
  added_success_user_ids?: Array<string>;
  /** List of successfully invited members */
  invited_success_user_ids?: Array<string>;
  /** List of non-existent users */
  not_exist_user_ids?: Array<string>;
  /** Users who have already joined the space will not be processed */
  already_joined_user_ids?: Array<string>;
  /** Users who have already initiated the invitation will not be processed */
  already_invited_user_ids?: Array<string>;
}

export interface OpenAddSpaceMemberRequest {
  /** Space ID */
  workspace_id?: string;
  /** The maximum number of members to be added is 20. */
  users?: Array<OpenSpaceMember>;
}

export interface OpenAddSpaceMemberResponse {
  data?: OpenAddSpaceMemberData;
  code: Int64;
  msg: string;
}

export interface OpenGetBotInfoRequest {
  bot_id?: string;
  is_published?: boolean;
  /** Post to check the latest */
  connector_id?: string;
}

export interface OpenGetBotInfoResponse {
  data?: bot_open_api.BotInfo;
  code?: Int64;
  msg?: string;
}

export interface OpenRemoveSpaceMemberData {
  /** List of members successfully removed */
  removed_success_user_ids?: Array<string>;
  /** Users who are not in the space will not be processed */
  not_in_workspace_user_ids?: Array<string>;
  /** The space owner does not handle it */
  owner_not_support_remove_user_ids?: Array<string>;
}

export interface OpenRemoveSpaceMemberRequest {
  /** Space ID */
  workspace_id?: string;
  /** The maximum number of members to be removed is 5. */
  user_ids?: Array<string>;
}

export interface OpenRemoveSpaceMemberResponse {
  data?: OpenRemoveSpaceMemberData;
  code: Int64;
  msg: string;
}

export interface OpenSpace {
  /** Space ID */
  id?: string;
  /** space name */
  name?: string;
  /** Space icon url */
  icon_url?: string;
  /** Current user role, enumeration values: owner, admin, member */
  role_type?: string;
  /** Workspace type, enumeration value: personal, team */
  workspace_type?: string;
  /** Enterprise ID */
  enterprise_id?: string;
}

export interface OpenSpaceData {
  workspaces?: Array<OpenSpace>;
  /** Total number of spaces */
  total_count?: Int64;
}

/** * plagyground open api idl file
 * */
export interface OpenSpaceListRequest {
  page_num?: Int64;
  page_size?: Int64;
  enterprise_id?: string;
  user_id?: string;
  coze_account_id?: string;
}

export interface OpenSpaceListResponse {
  data?: OpenSpaceData;
  code: Int64;
  msg: string;
}

export interface OpenSpaceMember {
  /** user ID */
  user_id?: string;
  /** Nickname (do not pass when adding members) */
  user_nickname?: string;
  /** Username (do not pass when adding members) */
  user_unique_name?: string;
  /** Avatar (no need to pass when adding members) */
  avatar_url?: string;
  /** current user role */
  role_type?: string;
}

export interface OpenSpaceMemberListData {
  items?: Array<OpenSpaceMember>;
  /** Total number of space members */
  total_count?: Int64;
}

export interface OpenSpaceMemberListRequest {
  /** Space ID */
  workspace_id?: string;
  /** Number of pages, the default is 1. */
  page_num?: number;
  /** Page size, default 20, maximum 50 */
  page_size?: number;
}

export interface OpenSpaceMemberListResponse {
  data?: OpenSpaceMemberListData;
  code: Int64;
  msg: string;
}
/* eslint-enable */
