/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export type Int64 = string | number;

/** ComponentMappingType Component Mapping Types */
export enum ComponentMappingType {
  Undefined = 0,
  MockSet = 1,
}

/** ComponentType Supports component types */
export enum ComponentType {
  Undefined = 0,
  /** Coze Plugin */
  CozePlugin = 10000,
  /** Coze Tool */
  CozeTool = 10001,
  /** Coze Workflow */
  CozeWorkflow = 10002,
  /** Coze SubWorkflow, which is referenced in Workflow. */
  CozeSubWorkflow = 10003,
  /** LLM nodes in Coze workflow */
  CozeLLMNode = 10004,
  /** Coding nodes in a Coze workflow */
  CozeCodeNode = 10005,
  /** Knowledge nodes in Coze workflow */
  CozeKnowledgeNode = 10006,
  /** Tools nodes in Coze workflow */
  CozeToolNode = 10007,
  /** Coze workflow start node */
  CozeStartNode = 10008,
  /** Cozing variable nodes in workflow */
  CozeVariableNode = 10009,
  /** Coze virtual nodes to identify varibale dependent bots */
  CozeVariableBot = 20000,
  /** Coze virtual nodes are used to identify varibale dependent chats */
  CozeVariableChat = 20001,
}

export enum CozeChannel {
  /** Default to Coze, expand to other channels in the future */
  Coze = 0,
}

export enum DebugScene {
  /** Default play ground Debug scene */
  Debug = 0,
}

export enum OrderBy {
  UpdateTime = 1,
}

/** TrafficScene traffic request scenario */
export enum TrafficScene {
  Undefined = 0,
  /** Single Agent Debug Page */
  CozeSingleAgentDebug = 10000,
  /** Multi-Agent Debug Page */
  CozeMultiAgentDebug = 10001,
  /** Tool Debug Page */
  CozeToolDebug = 10002,
  /** Workflow debugging page */
  CozeWorkflowDebug = 10003,
}

/** BizCtx Business Context */
export interface BizCtx {
  /** connectorID */
  connectorID?: string;
  /** User ID under connector */
  connectorUID?: string;
  /** business scenario */
  trafficScene?: TrafficScene;
  /** Business Scenario Component ID, such as Bot Debug Page, where trafficSceneID is BotID */
  trafficCallerID?: string;
  /** Line of business SpaceID for access control */
  bizSpaceID?: string;
  /** Additional information */
  ext?: Record<string, string>;
}

/** Secondary structure of the ComponentSubject business component */
export interface ComponentSubject {
  /** Component IDs, such as Tool ID, Node ID, etc */
  componentID?: string;
  /** component type */
  componentType?: ComponentType;
  /** Parent component ID, e.g. Tool- > Plugin, Node- > Workflow */
  parentComponentID?: string;
  /** Parent component type */
  parentComponentType?: ComponentType;
}

export interface Creator {
  ID?: string;
  name?: string;
  avatarUrl?: string;
}
/* eslint-enable */
