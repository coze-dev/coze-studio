/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as infra from './infra';

export type Int64 = string | number;

/** MockHitStatus Mock */
export enum MockHitStatus {
  Undefined = 0,
  /** Mocked out */
  Success = 1,
  /** MockSet's Schema is not compatible */
  Incompatible = 2,
  /** MockSet has been deleted */
  Deleted = 3,
  /** No Rules in MockSet */
  EmptyRule = 4,
  /** No grey release strategy for Mock */
  NotHitGray = 5,
}

/** ========== Common Define  ===========  //
 RequestFilterType Request filter rule type */
export enum RequestFilterType {
  Undefined = 0,
  /** No request matching */
  ByPass = 1,
}

/** ResponseExpectType return value generation rule type */
export enum ResponseExpectType {
  Undefined = 0,
  /** The return type is JSON and schema validation is performed */
  JSON = 1,
}

/** MockRule Mock */
export interface MockRule {
  /** MockRule ID */
  id?: Int64;
  /** Bound MockSet ID */
  mockSetID?: Int64;
  /** name */
  name?: string;
  /** describe */
  description?: string;
  /** priority */
  priority?: Int64;
  /** request filtering rules */
  requestFilter?: RequestFilter;
  /** response rule */
  responseExpect?: ResponseExpect;
  /** creator */
  creator?: infra.Creator;
  /** creation time */
  createTimeInSec?: Int64;
  /** update time */
  updateTimeInSec?: Int64;
}

/** MockSet Entity Information */
export interface MockSet {
  /** Mockset id */
  id?: Int64;
  /** Mockset name */
  name?: string;
  /** describe */
  description?: string;
  /** Number of MockRules included */
  mockRuleQuantity?: number;
  /** creator */
  creator?: infra.Creator;
  /** creation time */
  createTimeInSec?: Int64;
  /** update time */
  updateTimeInSec?: Int64;
  /** Schema incompatible */
  schemaIncompatible?: boolean;
  mockSubject?: infra.ComponentSubject;
}

/** MockSetBinding MockSet binding information */
export interface MockSetBinding {
  /** The bound MockSetID, for the 0 era table does not go Mock */
  mockSetID?: Int64;
  /** bound component */
  mockSubject?: infra.ComponentSubject;
  /** business context */
  bizCtx?: infra.BizCtx;
}

/** RequestFilter request filtering rules */
export interface RequestFilter {
  /** Request filter rule type */
  requestFilterType?: RequestFilterType;
  /** request filtering rules */
  requestFilterRule?: string;
}

/** ResponseExpect response rules */
export interface ResponseExpect {
  /** response rule type */
  responseExpectType?: ResponseExpectType;
  /** response rule */
  responseExpectRule?: string;
}
/* eslint-enable */
