/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as base from './base';
import * as flow_devops_prompt_common from './flow_devops_prompt_common';
import * as release from './release';

export type Int64 = string | number;

export enum CheckPublishPromptConflictType {
  NoConflict = 0,
  /** Prompt for an update */
  ExistPromptUpdated = 1,
}

/** Prompt generation method */
export enum GeneratePromptType {
  Undefined = 0,
  /** Structured Template Framework */
  StructuredPromptGenerate = 1,
  /** one-step optimization */
  OneStepOptimize = 2,
  /** SP quick reflection optimization */
  FeedbackOptimize = 3,
}

/** Structured Template Framework Type */
export enum StructuredPromptType {
  Undefined = 0,
  /** Basic Template Framework */
  Basic = 1,
  /** CRISPE Template Framework */
  CRISPE = 2,
}

export interface CancelReleaseTaskRequest {
  /** Publish ticket id */
  release_task_id: Int64;
  base?: base.Base;
}

export interface CancelReleaseTaskResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ChatWithPromptBotRequest {
  /** user input */
  message?: flow_devops_prompt_common.Message;
  /** Historical conversation */
  contexts?: Array<flow_devops_prompt_common.Message>;
  /** Opening remarks/next round of iteration guidance */
  get_next_guide?: boolean;
  /** Last generated prompt */
  last_generated_prompt?: string;
  /** Prompt name */
  prompt_name?: string;
  /** Prompt description */
  prompt_desc?: string;
  base?: base.Base;
}

export interface ChatWithPromptBotResponse {
  item?: flow_devops_prompt_common.ReplyItem;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface CheckPublishPromptRequest {
  /** Prompt ID */
  prompt_id?: Int64;
  /** Space ID */
  space_id?: Int64;
  /** draft associated version */
  draft_base_version?: string;
  base?: base.Base;
}

export interface CheckPublishPromptResponse {
  /** conflict */
  conflict_type?: CheckPublishPromptConflictType;
  /** Updated prompts */
  prompt?: flow_devops_prompt_common.Prompt;
  /** new version candidate */
  candidate_version?: string;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ClonePromptRequest {
  /** Space ID */
  space_id?: Int64;
  /** PromptID */
  prompt_id?: Int64;
  /** source version */
  version?: string;
  /** New PromptKey */
  dest_prompt_key?: string;
  /** New display name */
  dest_display_name?: string;
  /** new description */
  dest_description?: string;
  base?: base.Base;
}

export interface ClonePromptResponse {
  dest_prompt_id?: Int64;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface CreatePromptRequest {
  /** Space ID */
  space_id?: Int64;
  /** Cue word type */
  prompt_type?: flow_devops_prompt_common.PromptType;
  /** Prompt name */
  display_name: string;
  /** Prompt unique key */
  prompt_key: string;
  /** Prompt description */
  description?: string;
  /** model */
  model_config?: flow_devops_prompt_common.ModelConfig;
  /** PromptText */
  prompt_text?: flow_devops_prompt_common.PromptText;
  /** Prompt input */
  prompt_input?: flow_devops_prompt_common.PromptInput;
  /** label */
  labels?: Array<Int64>;
  /** Tool Definition */
  tools?: Array<flow_devops_prompt_common.ToolCombine>;
  /** secret label */
  security_level?: flow_devops_prompt_common.SecurityLevel;
  tool_call_config?: flow_devops_prompt_common.ToolCallConfig;
  /** Types of template engines */
  template_type?: string;
  /** metadata */
  metadata?: Record<string, string>;
  /** Tag ID */
  tag_ids?: Array<Int64>;
  /** MCP service list */
  mcp_servers?: Array<flow_devops_prompt_common.MCPServerCombine>;
  base?: base.Base;
}

export interface CreatePromptResponse {
  /** Successful Creation Returns Prompt */
  prompt?: flow_devops_prompt_common.Prompt;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface CreateReleaseTaskRequest {
  /** Space ID */
  space_id: Int64;
  /** Publish Prompt List (Batch is not supported yet) */
  release_resources?: Array<flow_devops_prompt_common.ReleaseResource>;
  /** release environment */
  env: flow_devops_prompt_common.Env;
  /** launch lane */
  feature?: string;
  /** publish configuration */
  release_config?: flow_devops_prompt_common.ReleaseConfig;
  /** Post a note */
  comment?: string;
  /** Publish label */
  label?: string;
  base?: base.Base;
}

export interface CreateReleaseTaskResponse {
  /** Publish task id */
  release_task_id?: Int64;
  /** Change Control Validation Results */
  release_check_result?: release.CheckResult;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface DeletePromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** Space ID */
  space_id: Int64;
  base?: base.Base;
}

export interface DeletePromptResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface FulldosePromptGrayReleaseRequest {
  /** release order id */
  release_id: Int64;
  /** Space ID */
  space_id?: Int64;
  /** Prompt ID */
  prompt_id?: Int64;
  base?: base.Base;
}

export interface FulldosePromptGrayReleaseResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface GeneratePromptRequest {
  /** Prompt generation method */
  generate_prompt_type?: GeneratePromptType;
  /** Original prompt */
  original_prompt?: string;
  /** Prompt name */
  prompt_name?: string;
  /** Prompt description */
  prompt_desc?: string;
  /** PromptKey */
  prompt_key?: string;
  /** Space ID */
  space_id?: Int64;
  /** Prompt ID */
  prompt_id?: Int64;
  /** Whether to Try Again */
  is_retry?: boolean;
  /** Structured Template Framework Extra Parameters
Structured Template Framework Type */
  structured_prompt_type?: StructuredPromptType;
  /** Structured Forms (JSON) */
  structured_context?: string;
  /** SP Quick Reflection Optimization Extra Parameters
user input */
  user_message?: flow_devops_prompt_common.Message;
  /** model output */
  assistant_message?: flow_devops_prompt_common.Message;
  /** parameter content */
  variables?: Array<flow_devops_prompt_common.Variable>;
  /** user feedback problem */
  feedback?: string;
  base?: base.Base;
}

export interface GeneratePromptResponse {
  /** Streaming back the generated prompt */
  item?: flow_devops_prompt_common.ReplyItem;
  /** Generate record ID */
  record_id?: Int64;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface GetClipboardRequest {
  prompt_id?: Int64;
  space_id?: Int64;
  content_key?: string;
  /** Target version to paste */
  version?: string;
  base?: base.Base;
}

export interface GetClipboardResponse {
  content?: string;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface GetPromptReleaseRequest {
  /** release order id */
  release_id: Int64;
  /** Space ID */
  space_id?: Int64;
  /** Prompt ID */
  prompt_id?: Int64;
  base?: base.Base;
}

export interface GetPromptReleaseResponse {
  /** Publish configuration information */
  release_info?: flow_devops_prompt_common.ReleaseInfo;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface GetPromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** version */
  version?: string;
  /** Space ID */
  space_id?: Int64;
  /** Get a personal draft */
  personal_draft?: boolean;
  base?: base.Base;
}

export interface GetPromptResponse {
  /** Return to Prompt */
  prompt?: flow_devops_prompt_common.Prompt;
  /** Prompt List */
  sub_prompts?: Record<string, flow_devops_prompt_common.Prompt>;
  /** Expanded Full PromptText */
  full_prompt_text?: flow_devops_prompt_common.PromptText;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface GetReleaseTaskDetailRequest {
  /** Publish ticket id */
  release_task_id: Int64;
  base?: base.Base;
}

export interface GetReleaseTaskDetailResponse {
  /** Post ticket details (not returned if there are no changes) */
  release_task?: flow_devops_prompt_common.ReleaseTask;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListAvailableModelRequest {
  base?: base.Base;
}

export interface ListAvailableModelResponse {
  models?: Array<flow_devops_prompt_common.Model>;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListLabelRequest {
  label_type?: string;
  base?: base.Base;
}

export interface ListLabelResponse {
  labels?: Array<flow_devops_prompt_common.Label>;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListOfficialPromptRequest {
  page: number;
  page_size: number;
  /** Name/key prefix match */
  key_word?: string;
  /** label filter */
  labels?: Array<Int64>;
  base?: base.Base;
}

export interface ListOfficialPromptResponse {
  /** Prompt list */
  prompts?: Array<flow_devops_prompt_common.Prompt>;
  total?: number;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListPromptBasicOApiRequest {
  page: number;
  page_size: number;
  /** Name/key prefix match */
  key_word?: string;
  /** founder */
  creator?: string;
  /** Filter the initially created PromptType type */
  filter_prompt_types?: Array<flow_devops_prompt_common.PromptType>;
  /** For fornax authentication */
  Authorization?: string;
  base?: base.Base;
}

export interface ListPromptBasicOApiResponse {
  /** Prompt list */
  prompts?: Array<flow_devops_prompt_common.PromptBasic>;
  total?: number;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListPromptReleaseInfoRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** version */
  version?: string;
  /** environment */
  env?: flow_devops_prompt_common.Env;
  /** lane */
  feature?: string;
  /** release status */
  status?: flow_devops_prompt_common.ReleaseStatus;
  /** Publish label */
  label?: string;
  /** version information fuzzy query */
  version_like?: string;
  /** Start with null, scroll into NextCursor in Response */
  cursor?: Int64;
  page_size: Int64;
  base?: base.Base;
}

export interface ListPromptReleaseInfoResponse {
  infos?: Array<flow_devops_prompt_common.ReleaseInfo>;
  next_cursor?: Int64;
  has_more?: boolean;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListPromptRequest {
  /** Space ID */
  space_id?: Int64;
  page: number;
  page_size: number;
  /** Name/key prefix match */
  key_word?: string;
  /** founder */
  creator?: string;
  /** Filter the initially created PromptType type */
  filter_prompt_types?: Array<flow_devops_prompt_common.PromptType>;
  /** release status */
  publish_statuses?: Array<flow_devops_prompt_common.PublishStatus>;
  /** label filter */
  tag_ids?: Array<Int64>;
  /** sorting parameter */
  order_param?: flow_devops_prompt_common.OrderParam;
  /** creator list filter */
  creator_list?: Array<string>;
  base?: base.Base;
}

export interface ListPromptResponse {
  /** Prompt list */
  prompts?: Array<flow_devops_prompt_common.Prompt>;
  total?: number;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListPromptVersionRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** Start with null, scroll into NextCursor in Response */
  cursor?: Int64;
  /** Space ID */
  space_id?: Int64;
  /** Filter draft */
  filter_draft?: boolean;
  /** Number of pages, default 20 */
  page_size?: Int64;
  /** version information fuzzy query */
  version_like?: string;
  base?: base.Base;
}

export interface ListPromptVersionResponse {
  /** Prompt list */
  prompts?: Array<flow_devops_prompt_common.Prompt>;
  next_cursor?: Int64;
  has_more?: boolean;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListReleaseApproverRequest {
  /** Space ID */
  space_id?: Int64;
  base?: base.Base;
}

export interface ListReleaseApproverResponse {
  /** list of approvers */
  approvers?: Array<flow_devops_prompt_common.UserInfo>;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ListReleaseTaskRequest {
  /** Space ID */
  space_id?: Int64;
  /** PromptID */
  prompt_id?: Int64;
  /** release environment */
  env?: flow_devops_prompt_common.Env;
  /** launch lane */
  feature?: string;
  /** Page number (starting from 1) */
  page?: number;
  /** number of pages per page */
  page_size?: number;
  /** Publish label */
  label?: string;
  base?: base.Base;
}

export interface ListReleaseTaskResponse {
  /** Publish ticket list */
  release_tasks?: Array<flow_devops_prompt_common.ReleaseTask>;
  /** total */
  total?: Int64;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface MConvertURI2URLRequest {
  /** Space ID */
  space_id?: Int64;
  /** URI list */
  uris?: Array<string>;
  base?: base.Base;
}

export interface MConvertURI2URLResponse {
  /** URL list */
  url_map?: Record<string, string>;
  base_resp?: base.BaseResp;
}

export interface MGetPromptQuery {
  /** Prompt ID */
  prompt_id?: Int64;
  /** version */
  version?: string;
  /** PromptKey */
  prompt_key?: string;
  /** Publish label */
  release_label?: string;
}

export interface NotifyReleaseApproverRequest {
  /** Publish ticket id */
  release_task_id: Int64;
  /** Notification Approver List */
  notify_approvers?: Array<string>;
  base?: base.Base;
}

export interface NotifyReleaseApproverResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface OfflinePromptGrayReleaseRequest {
  /** release order id */
  release_id: Int64;
  /** Space ID */
  space_id?: Int64;
  /** Prompt ID */
  prompt_id?: Int64;
  base?: base.Base;
}

export interface OfflinePromptGrayReleaseResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface OfflinePromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** current version */
  version: string;
  /** environment */
  env: flow_devops_prompt_common.Env;
  /** lane */
  feature?: string;
  /** Space ID */
  space_id?: Int64;
  /** Publish label */
  label?: string;
  base?: base.Base;
}

export interface OfflinePromptResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface PublishPromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** version */
  version: string;
  /** release description */
  publish_description?: string;
  /** Space ID */
  space_id: Int64;
  /** Submit a personal draft */
  personal_draft?: boolean;
  /** draft associated version */
  draft_base_version?: string;
  base?: base.Base;
}

export interface PublishPromptResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ReleasePromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** version */
  version: string;
  /** environment */
  env: flow_devops_prompt_common.Env;
  /** lane */
  feature?: string;
  /** Space ID */
  space_id?: Int64;
  /** Grey release configuration (deprecated, no longer in effect) */
  gray_release_config?: flow_devops_prompt_common.GrayReleaseConfig;
  base?: base.Base;
}

export interface ReleasePromptResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface ReportEventRequest {
  report_event?: flow_devops_prompt_common.ReportEvent;
  base?: base.Base;
}

export interface ReportEventResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface RevertPromptByVersionRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** version */
  version: string;
  /** Space ID */
  space_id: Int64;
  /** Roll back personal draft */
  personal_draft?: boolean;
  base?: base.Base;
}

export interface RevertPromptByVersionResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface RollBackPreVersionPromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** current version */
  version: string;
  /** environment */
  env: flow_devops_prompt_common.Env;
  /** lane */
  feature?: string;
  /** Space ID */
  space_id?: Int64;
  base?: base.Base;
}

export interface RollBackPreVersionPromptResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface RollbackReleaseTaskRequest {
  /** Publish ticket id */
  release_task_id: Int64;
  base?: base.Base;
}

export interface RollbackReleaseTaskResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface SaveClipboardRequest {
  prompt_id?: Int64;
  space_id?: Int64;
  content?: string;
  /** copied source version */
  version?: string;
  base?: base.Base;
}

export interface SaveClipboardResponse {
  /** Clipboard key in the format _fornax_clipboard: xxx */
  content_key?: string;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface SavePromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** model */
  model_config?: flow_devops_prompt_common.ModelConfig;
  /** PromptText */
  prompt_text?: flow_devops_prompt_common.PromptText;
  /** Prompt input */
  prompt_input?: flow_devops_prompt_common.PromptInput;
  /** Old logic refers to modifying the target version */
  version?: string;
  /** Space ID */
  space_id: Int64;
  /** Prompt type */
  prompt_type?: flow_devops_prompt_common.PromptType;
  /** The new logic needs to pass the associated version of the draft, and the merged target version needs to be passed in when merging. */
  draft_base_version?: string;
  /** Tool Definition */
  tools?: Array<flow_devops_prompt_common.ToolCombine>;
  tool_call_config?: flow_devops_prompt_common.ToolCallConfig;
  /** Types of template engines */
  template_type?: string;
  /** metadata */
  metadata?: Record<string, string>;
  /** MCP service list */
  mcp_servers?: Array<flow_devops_prompt_common.MCPServerCombine>;
  base?: base.Base;
}

export interface SavePromptResponse {
  /** Save Successful Return Prompt */
  prompt?: flow_devops_prompt_common.Prompt;
  /** Prompt List */
  sub_prompts?: Record<string, flow_devops_prompt_common.Prompt>;
  /** Expanded Full PromptText */
  full_prompt_text?: flow_devops_prompt_common.PromptText;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface TriggerReleaseSubtaskRequest {
  /** Publish ticket id */
  release_task_id: Int64;
  /** Subtask key */
  subtask_key: string;
  /** trigger action */
  trigger_operation: flow_devops_prompt_common.TriggerOperation;
  /** Remarks (required when approval is rejected) */
  comment?: string;
  base?: base.Base;
}

export interface TriggerReleaseSubtaskResponse {
  /** Change Control Validation Results */
  release_check_result?: release.CheckResult;
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface UpdateGenerateRecordRequest {
  /** Generate record ID */
  record_id?: Int64;
  /** PromptID */
  prompt_id?: Int64;
  /** Space ID */
  space_id?: Int64;
  /** Do you like it? */
  is_liked?: boolean;
  /** Do you want to step on it? */
  is_disliked?: boolean;
  /** Whether to accept */
  is_accepted?: boolean;
  /** Whether to interrupt Cancel */
  is_canceled?: boolean;
  base?: base.Base;
}

export interface UpdateGenerateRecordResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface UpdatePromptReleaseRequest {
  /** release order id */
  release_id: Int64;
  /** Grey release configuration */
  gray_release_config?: flow_devops_prompt_common.GrayReleaseConfig;
  /** Space ID */
  space_id?: Int64;
  /** Prompt ID */
  prompt_id?: Int64;
  base?: base.Base;
}

export interface UpdatePromptReleaseResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}

export interface UpdatePromptRequest {
  /** Prompt ID */
  prompt_id: Int64;
  /** Prompt name */
  display_name?: string;
  /** Prompt description */
  description?: string;
  /** Space ID */
  space_id?: Int64;
  /** label */
  labels?: Array<Int64>;
  /** secret label */
  security_level?: flow_devops_prompt_common.SecurityLevel;
  /** Secret label downgrade reason */
  downgrade_reason?: string;
  /** tag id list */
  tag_ids?: Array<Int64>;
  base?: base.Base;
}

export interface UpdatePromptResponse {
  code?: number;
  msg?: string;
  base_resp?: base.BaseResp;
}
/* eslint-enable */
