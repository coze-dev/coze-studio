/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as flow_devops_prompt_common from './flow_devops_prompt_common';

export type Int64 = string | number;

export enum MCPStatus {
  /** undefined */
  Undefined = 0,
  /** Normal */
  Normal = 1,
  /** Deactivated */
  Disabled = 2,
}

export interface Content {
  type?: string;
  text?: string;
}

export interface Function {
  name?: string;
  description?: string;
  input_schema?: string;
}

export interface MCPExecuteConfig {
  /** Dynamic accessPointID - > key - > value */
  headers?: Record<string, Record<string, string>>;
  /** Dynamic request parameter accessPointID - > key - > value */
  params?: Record<string, Record<string, string>>;
  /** Generic Dynamic Request Header */
  common_headers?: Record<string, string>;
  /** general dynamic parameter */
  common_params?: Record<string, string>;
}

export interface MCPServer {
  /** primary key ID */
  id?: Int64;
  /** Space ID */
  space_id?: Int64;
  /** service name */
  name?: string;
  /** Is it an official service? */
  is_official?: boolean;
  /** service description */
  description?: string;
  /** Source type, ByteFaaS or other */
  source_type?: string;
  /** label */
  labels?: Array<flow_devops_prompt_common.Label>;
  /** List of access points for the service */
  mcp_server_access_points?: Array<MCPServerAccessPoint>;
  /** founder */
  creator?: string;
  /** creation time */
  create_time_ms?: Int64;
  /** update time */
  update_time_ms?: Int64;
  /** Whether to support publishing with prompt, it has been abandoned, no consumption and no change */
  is_publish_supported?: boolean;
  /** service status */
  status?: MCPStatus;
  /** MCP corresponding document or details page */
  detail_page_url?: string;
}

export interface MCPServerAccessPoint {
  /** primary key ID */
  id?: Int64;
  /** Space ID */
  space_id?: Int64;
  /** Associated MCP Server ID */
  mcp_server_id?: Int64;
  /** Environment, BOE/PPE/ONLINE */
  env?: string;
  /** lane */
  lane?: string;
  /** Service Mode, SSE or STDIO */
  transport_mode?: string;
  /** interface address */
  server_url?: string;
  /** The json schema of the tool */
  tools?: Array<Function>;
  /** address verification status */
  validation_status?: string;
  /** Last address verification time */
  last_validation_time_ms?: Int64;
  /** Latest operation time */
  lastest_op_time_ms?: Int64;
  /** creation time */
  create_time_ms?: Int64;
  /** update time */
  update_time_ms?: Int64;
  /** Interface PSM */
  server_psm?: string;
  /** configuration */
  config?: flow_devops_prompt_common.AccessPointConfig;
  /** service status */
  status?: MCPStatus;
  /** Whether to support publishing with prompt */
  is_publish_supported?: boolean;
}
/* eslint-enable */
