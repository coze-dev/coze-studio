/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as datasetv2 from './datasetv2';

export type Int64 = string | number;

/** Model family, especially for different model access providers */
export enum ModelClass {
  Undefined = 0,
  /** gpt */
  GPT = 1,
  /** Byte */
  SEED = 2,
  /** google */
  Gemini = 3,
  /** Amazon */
  Claude = 4,
  /** ERNIE Bot */
  Ernie = 5,
  /** baichuan */
  Baichuan = 6,
  /** Ali */
  Qwen = 7,
  /** Zhipu */
  GML = 8,
  /** deep search */
  DeepSeek = 9,
}

export enum Provider {
  /** GPT OpenAPI Platform */
  GPTOpenAPI = 1,
  /** Volcano Ark */
  Maas = 2,
  /** Temporarily specific seed from bot_engine access */
  BotEngine = 3,
  /** Merlin Platform */
  Merlin = 4,
  /** Merlin-seed platform */
  MerlinSeed = 5,
}

export enum Role {
  System = 1,
  User = 2,
  Assistant = 3,
  Tool = 4,
}

export enum TenantType {
  /** Byte */
  ByteDance = 0,
  /** Dcar */
  Dcar = 1,
}

export interface ArgsSchema {
  key?: string;
  support_content_types?: Array<string>;
  /** Serialized jsonSchema string, for example: "{\" type\ ":\" object\ ",\" properties \": {\" name \": {\" type\ ":\" string \"}, \" age \": {\" type\ ":\" integer \"}, \" isStudent \": {\" type\ ":\" boolean \"}}, \" required \": [\" name\ ",\" age\ ",\" isStudent\ "]}" */
  json_schema?: string;
}

export interface Audio {
  /** mp3/wav, etc */
  format?: string;
  url?: string;
}

export interface BaseInfo {
  created_by?: UserInfo;
  updated_by?: UserInfo;
  created_at?: Int64;
  updated_at?: Int64;
  deleted_at?: Int64;
}

export interface Content {
  content_type?: string;
  format?: datasetv2.FieldDisplayFormat;
  text?: string;
  /** image content */
  image?: Image;
  /** When the graphic is mixed, the graphic content */
  multi_part?: Array<Content>;
  audio?: Audio;
}

export interface Image {
  name?: string;
  url?: string;
  uri?: string;
  thumb_url?: string;
}

export interface Message {
  role?: Role;
  content?: Content;
  ext?: Record<string, string>;
}

/** model configuration data */
export interface ModelConfig {
  /** Model ID */
  id?: Int64;
  /** Model name */
  name?: string;
  /** Model series */
  model_class?: ModelClass;
  temperature?: number;
  max_tokens?: number;
  top_k?: number;
  top_p?: number;
  json_mode?: boolean;
  /** deprecated */
  function_call_mode?: boolean;
  presence_penalty?: number;
  frequency_penalty?: number;
  /** model provider */
  provider?: Provider;
  /** The model unique identifier of the model provider (for scenarios where saas cannot pass modelID) */
  provider_model_id?: string;
}

export interface OrderBy {
  /** sort field */
  field?: string;
  /** Whether to ascend, default reverse order */
  is_asc?: boolean;
}

export interface UserInfo {
  /** name */
  name?: string;
  /** English name */
  en_name?: string;
  /** user profile URL */
  avatar_url?: string;
  /** 72 * 72 avatar */
  avatar_thumb?: string;
  /** unique user ID within the app */
  open_id?: string;
  /** unique identifier within the user application developer */
  union_id?: string;
  /** Corporate identity */
  tenant_key?: string;
  /** The unique identity of the user within the tenant */
  user_id?: string;
  /** user email */
  email?: string;
  /** tenant */
  tenant?: TenantType;
}
/* eslint-enable */
