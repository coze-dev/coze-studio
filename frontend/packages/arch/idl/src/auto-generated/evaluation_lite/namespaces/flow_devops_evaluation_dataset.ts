/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as flow_devops_evaluation_entity from './flow_devops_evaluation_entity';
import * as flow_devops_evaluation_callback_common from './flow_devops_evaluation_callback_common';

export type Int64 = string | number;

export enum DatasetStatus {
  Unknown = 0,
  Normal = 1,
  Locked = 2,
}

export enum DatasetType {
  Unknown = 0,
  Chat = 1,
  KV = 2,
  FunctionCall = 3,
  MultiModalUnderstanding = 4,
}

export enum ProfessionalKnowledgeType {
  /** official */
  Official = 1,
  /** custom */
  Customize = 2,
}

/** # service CreateDataset */
export enum PublishOption {
  /** Use when evaluating dataset display (create and query, interface default) */
  Publish = 1,
  /** The evaluation task creates a dataset, which is not displayed to the public, and is only used for evaluation use cases and tasks */
  NotPublish = 2,
  /** SFT dataset display, the mode needs to be specified when creating, and the mode needs to be specified when querying */
  SFTPublish = 3,
  /** Dataset display, the mode needs to be specified when creating, and the mode needs to be specified when querying */
  DataProcessPublish = 4,
  /** Result set scenarios under evaluation services */
  EvalResultPublish = 5,
}

export enum ReplyType {
  /** Final result */
  ReplyTypeFinalAnswer = 0,
  /** tool call */
  ReplyTypeToolCall = 1,
}

export enum ResultState {
  Generated = 1,
  Selected = 2,
  Abandoned = 3,
}

/** # dataset info */
export enum RowGroupSource {
  Unknown = 0,
  ManualAdd = 1,
  RuntimeAutoRecord = 2,
}

export enum SecurityLevel {
  Unknown = 0,
  L4 = 4,
}

export enum StreamState {
  /** non-streaming */
  StreamStateNone = 1,
  /** Streaming starts (first packet) */
  StreamStateBegin = 2,
  /** streaming */
  StreamStateStreaming = 3,
  /** End of churn transfer (tail packet) */
  StreamStateEnd = 4,
}

export enum TaskState {
  /** Task state flow
initialization state */
  GenerateTaskInitState = 1,
  /** running state */
  GenerateTaskRunningState = 2,
  /** task completion status */
  GenerateTaskGenFinishedState = 3,
  /** The generated tasks are all annotated */
  GenerateTaskSelectCompletedState = 4,
  /** termination state */
  GenerateTaskStoppedState = 5,
  /** failure state */
  GenerateTaskFailedState = 6,
}

/** # service UpdateDataset */
export enum UpdateDatasetField {
  Name = 3,
  Desc = 4,
  Tag = 5,
}

/** common
############# DATASET ##############
 dataset
# Column */
export interface ColumnInfo {
  column_id?: Int64;
  /** len <= 256 */
  name: string;
  /** Field description */
  describe?: string;
  /** Whether columns are defined for the evaluation system */
  buildin?: boolean;
}

export interface DatasetInfo {
  dataset_id?: Int64;
  name: string;
  space_id: Int64;
  creator_id: Int64;
  desc: string;
  column_schema: Array<ColumnInfo>;
  dataset_status?: DatasetStatus;
  dataset_type?: DatasetType;
  tag?: Array<flow_devops_evaluation_entity.Tag>;
  create_time?: Int64;
  update_time?: Int64;
  /** Classification */
  security_level?: SecurityLevel;
  /** expiration time */
  expire_time?: Int64;
  publish_option?: PublishOption;
  /** Dataset capacity, default is 5k */
  row_group_capacity?: Int64;
  /** The bytes limit for text content in Cell, default is 3,2000 */
  max_cell_content_length?: Int64;
  /** Whether to allow export */
  not_allow_export?: boolean;
}

/** ############# ROW GROUP ############## */
export interface Row {
  row_id?: Int64;
  cells?: Array<string>;
  cells_v2?: Array<flow_devops_evaluation_callback_common.Content>;
}

export interface RowGroup {
  row_group_id?: Int64;
  group_name?: string;
  /** Add specify tags when creating */
  tags?: Array<string>;
  rows: Array<Row>;
}
/* eslint-enable */
