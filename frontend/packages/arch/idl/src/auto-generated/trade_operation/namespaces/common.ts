/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export type Int64 = string | number;

export enum AccountStatus {
  Available = 1,
  Unavailable = 2,
}

/** protocol status */
export enum AgreementStatus {
  /** deactivate */
  Closed = 0,
  /** effective */
  InEffect = 1,
}

export enum AmountType {
  /** It can be expanded to price-break discounts, sku quantity discounts, etc in the future. */
  Unknown = 0,
  ChargeAmount = 1,
}

/** Equity type. Aligned with benefit_common. Used here for business tier use. */
export enum BenefitType {
  /** overseas */
  SubsMessageCredit = 1,
  UserFreeChat = 2,
  TopUpMessageCredit = 3,
  BonusMessageCredit = 4,
  /** 40 -59 free times */
  Freetimes = 40,
  /** number of free reviews */
  EvaluateFree = 41,
  /** Workflow test runs free times */
  WorkflowTestRunFree = 42,
  /** App test runs for free */
  AppTestRunFree = 43,
  /** Plugin test run free times */
  PluginRunFree = 44,
  /** API runs for free */
  APIRunFree = 45,
  /** Number of free SDK runs */
  SDKRunFree = 46,
  /** 60 - 99 limited viewership of
The limited viewership of model RPM */
  RateLimitModelRPM = 60,
  /** Input limited viewership of TPM */
  RateLimitModelInputTPM = 61,
  /** Output TPM limited viewership of model */
  RateLimitModelOutputTPM = 62,
  /** Input limited viewership of TPM */
  RateLimitModelInputTPMBasic = 63,
  /** Output TPM limited viewership of base model */
  RateLimitModelOutputTPMBasic = 64,
  /** Plugin running limited viewership of QPS */
  PluginRunQPS = 65,
  /** The limited viewership of Plugin runtime */
  PluginRunParallel = 66,
  /** image node
Workflow limited viewership of QPS */
  WorkflowRunQPS = 67,
  /** The limited viewership of Workflow */
  WorkflowRunParallel = 68,
  /** API running QPS limited viewership of */
  APIRunQPS = 70,
  /** The limited viewership of voice QPS */
  VoiceQPS = 71,
  /** The limited viewership of speech concurrency */
  VoiceParallel = 72,
  /** 100-109 resource points
total number of resource points */
  ResourcePoint = 100,
  /** Free resource points, abandoned */
  FreeResourcePoint = 101,
  /** Resource points purchased by Volcano */
  VolcProResourcePoint = 102,
  /** periodic resource point */
  PeriodicResourcePoint = 103,
  /** channel decreasing resource point */
  ChannelResourcePoint = 104,
  /** trial resource point */
  CutAndTryResourcePoint = 109,
  /** 110-129 Fornax
Trace usage */
  TraceAmount = 111,
  /** Trace storage time */
  TraceStorageDuration = 112,
  /** 130-149 WorkSpace
Total Space */
  SpaceAmount = 131,
  /** Space capacity */
  SpacePeopleNumber = 132,
  /** Number of Collaborators in Space */
  SpaceCollaboratorNumber = 133,
  /** Number of Collaborating Entities in Space */
  SpaceCollabEntityNumber = 134,
  /** 150-169 Operation and maintenance
log storage duration */
  LogStorageDuration = 151,
  /** log export */
  LogExport = 152,
  /** 170-179 Knowledge Base
knowledge base capacity */
  Capacity = 170,
  /** 180-199 voice
Total number of timbre clones */
  VoiceCloneNumber = 180,
  /** Number of tone clone bases */
  VoiceCloneNumberBasic = 181,
  /** 200-219 Tenant related
maximum number of seats */
  SeatNumberLimit = 200,
  /** base number of seats */
  SeatNumberBasic = 201,
  /** Remove watermark */
  RemoveWatermark = 220,
  /** 240-269 configuration
Use with peace of mind */
  ConfidenceUsing = 240,
}

export enum BenefitUseMode {
  /** Use according to quota */
  ByQuota = 1,
  /** Unlimited use */
  Unlimited = 2,
  /** Not Available */
  UnAvailable = 10,
}

export enum ChargeableEntityType {
  Unknown = 0,
  Agent = 1,
  Model = 10,
  ModelTPM = 11,
  Plugin = 20,
  Imageflow = 21,
  Voice = 30,
  RealTime = 40,
  Knowledge = 50,
  Seat = 60,
}

/** Payment side rejection status */
export enum ChargebackPayStatus {
  /** unknown */
  Unknown = 0,
  /** chargebacks occur */
  Chargeback = 1,
  /** Refused return */
  ChargebackReverse = 2,
}

/** chargeback status */
export enum ChargebackStatus {
  /** unknown */
  Unknown = 0,
  /** chargebacks occur */
  Chargeback = 1,
  /** Refused return */
  ChargebackReverse = 2,
}

export enum ChargeScene {
  Unknown = 0,
  Token = 1,
  Credit = 2,
}

export enum CozeAccountType {
  /** unknown */
  Unknown = 0,
  /** Organization account */
  Organization = 1,
  /** personal account */
  Personal = 2,
}

export enum CreditChangeType {
  TopUp = 1,
  Bonus = 2,
  /** Agent */
  BotConsume = 3,
  WorkflowConsume = 4,
  EvaluateConsume = 5,
  /** application */
  ProjectConsume = 6,
  /** Button Compass */
  FornaxConsume = 7,
  /** Intelligent Voice */
  IntelligentVoiceConsume = 8,
  Expired = 20,
}

export enum CreditType {
  /** overseas */
  Premium = 1,
  TopUp = 2,
  Bonus = 3,
  /** domestic
Free Resource Points */
  FreePoint = 100,
  /** Recharge resource point */
  TopUpPonit = 101,
}

export enum DiscountCalculationType {
  Unknown = 0,
  Multiplication = 1,
  Subtraction = 2,
}

export enum InstanceLimitStatus {
  /** unrestricted */
  UnLimited = 1,
  /** Limited (in arrears) */
  Limited = 2,
}

export enum InstanceStatus {
  /** Created, it will not return to this state in theory */
  InstanceStatusCreating = 0,
  /** Running */
  Running = 1,
  /** The creation failed, and the state will not be returned in theory */
  InstanceStatusFailed = 2,
  /** unsubscribe recycling */
  UnsubsRecycled = 3,
  /** expiration shutdown */
  ExpiredClosed = 4,
  /** Recycling at maturity */
  ExpiredRecycled = 5,
  /** shutdown due */
  InstanceStatusOverdueShutdown = 6,
  /** Arrears recovery */
  InstanceStatusOverdueRecycled = 7,
  /** unsubscribe shutdown */
  InstanceStatusTerminatedShutdown = 8,
}

/** Order reverse state */
export enum OrderReverseStatus {
  /** unknown */
  Unknown = 0,
  /** Refund is in progress. */
  RefundProcessing = 1,
  /** Refund was successful. */
  RefundSuccess = 2,
  /** Refund failed. */
  RefundFailed = 3,
  /** chargebacks occur */
  Chargeback = 11,
  /** Refused return */
  ChargebackReverse = 12,
}

/** Order status */
export enum OrderStatus {
  /** initialization */
  Init = 0,
  /** success */
  Success = 1,
  /** fail */
  Failed = 2,
  /** close */
  Closed = 3,
}

/** Order type */
export enum OrderType {
  /** unknown */
  Unknown = 0,
  /** Token recharge */
  TokenCharge = 1,
  /** Token automatic recharge */
  TokenAutoCharge = 2,
  /** MessageCredit subscription */
  SubMessageCredit = 11,
  /** MessageCredit recharge */
  MessageCredit = 12,
  /** Template purchase */
  PurchaseTemplate = 21,
}

/** payment status */
export enum PayStatus {
  /** Initial status, outstanding payment */
  Init = 0,
  /** The payment was successful, this is the final status. */
  Success = 1,
  /** Payment failure or closure, this is the final state */
  Closed = 2,
}

/** Payment side refund status */
export enum RefundByType {
  /** business platform initiation */
  ByBizPlatform = 0,
  /** user initiated */
  ByUser = 1,
}

/** Payment side refund status */
export enum RefundPayStatus {
  /** Refund is in progress. */
  Processing = 0,
  /** Refund was successful. */
  Success = 1,
  /** Refund failed. */
  Failed = 2,
}

/** Refund status */
export enum RefundStatus {
  /** Refund is in progress. */
  Processing = 0,
  /** Refund was successful. */
  Success = 1,
  /** Refund failed. */
  Failed = 2,
}

export enum ResourcePackageType {
  /** Model TPM */
  ModelTPM = 1,
  /** timbre clone */
  VoiceClone = 21,
}

export enum ResourceUsageStrategy {
  /** Unlimited */
  UnLimit = 1,
  /** restriction */
  Forbidden = 2,
  /** Pass the quota verification */
  ByQuota = 3,
}

/** business scenario */
export enum Scene {
  /** unknown */
  Unknown = 0,
  /** Token recharge */
  TokenCharge = 1,
  /** Token automatic recharge */
  TokenAutoCharge = 2,
  /** MessageCredit subscription */
  SubMessageCredit = 11,
  /** MessageCredit recharge */
  MessageCredit = 12,
  /** Template purchase */
  PurchaseTemplate = 21,
  /** timbre clone */
  VoiceClone = 100,
  /** Tone Clone Storage */
  VoiceCloneStorage = 101,
}

export enum SubscriptionRenewalType {
  Unknown = 0,
  /** Manual renewal */
  ManualRenewal = 1,
  /** Automatic renewal */
  AutoRenewal = 2,
  /** No renewal due Renewal */
  DontRenewal = 3,
}

export enum SubscriptionStatus {
  /** initialization */
  Init = 0,
  /** pending payment */
  Pending = 1,
  /** Subscribing */
  SUBSCRIBED = 2,
  /** Cancelled */
  CANCELED = 3,
  /** terminated */
  REVOKE = 4,
  /** Closed */
  Closed = 5,
  /** Expired */
  Expired = 6,
  /** arrears */
  InDebt = 7,
}

export enum SubscriptionType {
  MessageCredit = 0,
}

/** subscription SKU level */
export enum SubsMsgCreditLevel {
  Free = 0,
  PremiumLite = 10,
  Premium = 15,
  PremiumPlus = 20,
}

export enum SubsSKUType {
  /** Automatic renewal */
  AutoRenew = 0,
  /** one-time subscription */
  OneOff = 1,
}

export enum TradeSourceType {
  /** unknown */
  Unknown = 0,
  Bot = 1,
}

export enum UserLevel {
  /** The free version. */
  Free = 0,
  /** overseas
PremiumLite */
  PremiumLite = 10,
  /** Premium */
  Premium = 15,
  PremiumPlus = 20,
  /** domestic
V1 Volcano Pro */
  V1ProInstance = 100,
  /** Personal flagship version */
  ProPersonal = 110,
  /** Team Edition */
  Team = 120,
  /** Enterprise Edition */
  Enterprise = 130,
}

export enum VolcanoUserType {
  Unknown = 0,
  RootUser = 1,
  BasicUser = 2,
}

export enum VolcInstanceType {
  /** Normal version */
  Normal = 1,
  /** channel version */
  Channel = 2,
}

export interface ChannelInfo {
  /** Channel ID */
  channel_id: string;
  /** channel name */
  channel_name: string;
  /** Channel icon */
  icon_url: string;
}

export interface CommonCounter {
  /** When Strategy == ByQuota, it indicates the amount used, and returns 0 if there is no relevant usage data for the equity. */
  used?: number;
  /** When Strategy == ByQuota, the usage limit is indicated */
  total?: number;
  /** resource usage strategy */
  strategy?: ResourceUsageStrategy;
  /** Start time in seconds */
  start_at?: Int64;
  /** End time in seconds */
  end_at?: Int64;
}
/* eslint-enable */
