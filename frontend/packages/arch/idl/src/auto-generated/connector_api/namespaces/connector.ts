/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as base from './base';

export type Int64 = string | number;

export enum ConnectorPublicType {
  Unknown = 0,
  Private = 1,
  Public = 2,
}

export enum ManageAccountConnectorAction {
  /** Add channel */
  Add = 0,
  /** Remove channel */
  Remove = 1,
}

export enum MiniProgramDomainAction {
  /** Add domain name */
  Add = 0,
  /** Remove domain name */
  Remove = 1,
}

export enum SpaceConnectorType {
  /** Custom channels within the team */
  Team = 1,
  /** All public channels */
  Public = 2,
  /** official channel */
  Official = 3,
  /** Installed public channels */
  InstalledPublic = 4,
}

export interface AccountConnector {
  /** Publishing Platform connector_id */
  id?: string;
  /** publishing platform name */
  name?: string;
  /** publishing platform icon */
  icon_url?: string;
  /** Publish platform icon URI (updates may be posted back) */
  icon_uri?: string;
  /** Publish Platform Description */
  desc?: string;
  /** 0-Agent, 1-Application */
  agent_type?: Array<Int64>;
  /** Channel Type, 1 Custom Channel, 2. Open Channel, 3. Official Channel */
  connector_type?: SpaceConnectorType;
  /** The number of spaces that have been added to the channel under the account */
  added_space_count?: Int64;
  /** Number of spaces under the account */
  total_space_count?: Int64;
  /** When viewing by space, show whether channels are added to that space */
  is_added_to_space?: boolean;
  /** Has it been added to the account? */
  is_added_to_account?: boolean;
  /** Installation is not allowed */
  cannot_install?: boolean;
  /** Details page link */
  detail_url?: string;
}

export interface BindSpaceConnectorRequest {
  connector_id_list?: Array<string>;
  space_id?: string;
  /** uninstall */
  uninstall?: boolean;
  /** space list */
  space_id_list?: Array<string>;
  /** Organization account ID */
  account_id?: string;
  /** Support channels Open all and close all buttons in the space under the organization account */
  operate_all_space?: boolean;
}

export interface BindSpaceConnectorResponse {
  /** Key: connector_id, value: whether successful */
  manage_result?: Record<string, boolean>;
  code?: number;
  msg?: string;
}

export interface ConnectorMetaInfo {
  /** Publishing Platform connector_id */
  id?: string;
  /** publishing platform name */
  name?: string;
  /** publishing platform icon */
  icon_url?: string;
  /** Publish platform icon URI (updates may be posted back) */
  icon_uri?: string;
  /** Publish Platform Description */
  desc?: string;
  /** public type */
  public_type?: ConnectorPublicType;
  /** Token is returned when fetching the list */
  callback_url?: string;
  /** publishing space */
  space_id_list?: Array<string>;
  /** Callback The token used to verify the signature */
  callback_token?: string;
  /** OAuth configuration */
  oauth_config?: string;
  /** creation time */
  create_time?: Int64;
  /** OAuth application id */
  oauth_app_id?: string;
  /** Whether to add to the account */
  is_added_to_account?: boolean;
}

export interface CopyLinkAreaInfo {
  link_list?: Array<CopyLinkItem>;
  /** Link area title text */
  title_text?: string;
  /** Description under the title of the link area */
  description?: string;
  /** The step number only displays the specified step number and does not affect the display order of the SchemaArea. */
  step_order?: Int64;
}

export interface CopyLinkItem {
  /** Copy link name */
  title?: string;
  link?: string;
}

export interface CreateConnectorRequest {
  connector_title?: string;
  connector_desc?: string;
  connector_icon_uri?: string;
  oauth_app_id?: string;
  callback_url?: string;
  space_id_list?: Array<string>;
  account_id?: string;
}

export interface CreateConnectorResponse {
  code?: number;
  msg?: string;
  callback_token?: string;
}

export interface CreatePreviewVersionRequest {
  agent_id: string;
  /** 0-botï¼Œ1-project */
  agent_type: Int64;
  connector_ids?: Array<string>;
  'COZE-WX-TEMPLATE-ID'?: number;
  'COZE-DY-TEMPLATE-ID'?: number;
  Base?: base.Base;
}

export interface CreatePreviewVersionResponse {
  /** key: connector_id, value: link */
  preview_link_map?: Record<Int64, string>;
  BaseResp?: base.BaseResp;
}

export interface DeleteConnectorRequest {
  id?: string;
}

export interface DeleteConnectorResponse {
  code?: number;
  msg?: string;
}

export interface FormSchemaItem {
  /** Submit field key */
  name?: string;
  /** Display field name */
  title?: string;
  /** 'Input '|' InputNumber '|' Select '|' Radio '|' Checkbox '; Rendering Component */
  component?: string;
  /** Options [], when used for'Select '|' Radio '|' Checkbox ' */
  enums?: Array<Options>;
  /** 'String '|' number '|' boolean '; field type (there are currently no array/object scenarios, so array/object is not considered for now) */
  type?: string;
  /** validation rule */
  rules?: Array<FormSchemaRule>;
  /** hint */
  placeholder?: string;
}

export interface FormSchemaRule {
  /** String maximum length */
  max?: number;
  /** String minimum length */
  min?: number;
  /** String exact length */
  len?: number;
  /** regular */
  pattern?: string;
  /** Prompt information when checking errors, go to starling configuration */
  message?: string;
  /** Is it required? */
  required?: boolean;
}

export interface GetAccountConnectorListRequest {
  page_token?: string;
  page_size?: number;
  /** channel search term */
  search_word?: string;
  space_id?: string;
  connector_type?: SpaceConnectorType;
  /** Organization account ID */
  account_id?: string;
}

export interface GetAccountConnectorListResponse {
  data?: Array<AccountConnector>;
  has_more?: boolean;
  next_page_token?: string;
  code?: number;
  msg?: string;
}

export interface GetOauthConfigSchemaRequest {}

export interface GetOauthConfigSchemaResponse {
  oauth_schema?: OauthSchema;
  code?: number;
  msg?: string;
}

export interface GetPreviewConnectorRequest {
  Base?: base.Base;
}

export interface GetPreviewConnectorResponse {
  connector_list?: Array<string>;
  BaseResp?: base.BaseResp;
}

export interface GetSpaceConnectorStatusRequest {
  connector_id?: string;
  space_id_list?: Array<string>;
  /** Organization account ID */
  account_id?: string;
}

export interface GetSpaceConnectorStatusResponse {
  /** Key: space_id, value: bound status, 1-bound */
  bind_status_map?: Record<string, number>;
  code?: number;
  msg?: string;
}

export interface ListConnectorRequest {
  page_token?: string;
  page_size?: number;
  account_id?: string;
}

export interface ListConnectorResponse {
  data?: Array<ConnectorMetaInfo>;
  has_more?: boolean;
  next_page_token?: string;
  code?: number;
  msg?: string;
}

export interface ListMiniProgramDomainRequest {
  /** Enterprise ID */
  enterprise_id?: string;
  /** Channel ID */
  connector_id?: string;
  /** Search term */
  search_word?: string;
}

export interface ListMiniProgramDomainResponse {
  data?: Array<MiniProgramDomain>;
  code?: number;
  msg?: string;
}

export interface ListSpaceConnectorRequest {
  page_token?: string;
  page_size?: number;
  connector_type?: SpaceConnectorType;
  search_word?: string;
  space_id?: string;
}

export interface ListSpaceConnectorResponse {
  data?: Array<SpaceConnector>;
  has_more?: boolean;
  next_page_token?: string;
  code?: number;
  msg?: string;
}

export interface ManageAccountConnectorRequest {
  account_id?: string;
  connector_id_list?: Array<string>;
  /** Add or remove channels */
  action?: ManageAccountConnectorAction;
}

export interface ManageAccountConnectorResponse {
  /** Key: connector_id, value: whether successful */
  manage_result?: Record<string, boolean>;
  code?: number;
  msg?: string;
}

export interface MiniProgramDomain {
  id?: string;
  domain?: string;
  status?: number;
}

export interface OauthSchema {
  schema_area?: SchemaAreaInfo;
  copy_link_area?: CopyLinkAreaInfo;
  title_text?: string;
  start_text?: string;
}

export interface Options {
  label?: string;
  value?: string;
}

export interface SchemaAreaInfo {
  schema_list?: Array<FormSchemaItem>;
  /** Enter Information Area Title Text */
  title_text?: string;
  /** Enter information under the heading of the field */
  description?: string;
  /** The step number only displays the specified step number and does not affect the display order of the SchemaArea. */
  step_order?: Int64;
}

export interface SetMiniProgramDomainRequest {
  /** Enterprise ID */
  enterprise_id?: string;
  domain_list?: Array<string>;
  action?: MiniProgramDomainAction;
  /** Channel ID */
  connector_id?: string;
}

export interface SetMiniProgramDomainResponse {
  code?: number;
  msg?: string;
}

export interface SpaceConnector {
  /** Publishing Platform connector_id */
  id?: string;
  /** publishing platform name */
  name?: string;
  /** publishing platform icon */
  icon_url?: string;
  /** Publish platform icon URI (updates may be posted back) */
  icon_uri?: string;
  /** Publish Platform Description */
  desc?: string;
  /** Details page link */
  detail_url?: string;
  /** Has it been added? */
  is_added?: boolean;
  /** 0-Agent, 1-Application */
  agent_type?: Array<Int64>;
  /** Channel type, 1 custom channel within the team, 2. Open channel, 3. Official channel 4, installed open channel */
  connector_type?: SpaceConnectorType;
  /** Downloading is not allowed. */
  cannot_install?: boolean;
}

export interface UpdateConnectorRequest {
  id?: string;
  connector_title?: string;
  connector_desc?: string;
  connector_icon_uri?: string;
  oauth_app_id?: string;
  callback_url?: string;
  space_id_list?: Array<string>;
  account_id?: string;
}

export interface UpdateConnectorResponse {
  code?: number;
  msg?: string;
  callback_token?: string;
}

export interface UpdateMiniProgramDomainRequest {
  id: string;
  domain: string;
}

export interface UpdateMiniProgramDomainResponse {
  code?: number;
  msg?: string;
}

export interface UpdateOauthConfigRequest {
  /** Channel ID */
  connector_id?: string;
  /** OAuth configuration */
  oauth_config?: string;
}

export interface UpdateOauthConfigResponse {
  code?: number;
  msg?: string;
}
/* eslint-enable */
