/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export type Int64 = string | number;

/** BotVersionOperation type
 NEXT ID: 5 */
export enum BotVersionOperation {
  Undefined = 0,
  /** go online */
  Publish = 1,
  /** Modify content */
  Modify = 2,
  /** go offline */
  Offline = 3,
  /** Rollback */
  Rollback = 4,
}

export enum GrayFieldType {
  Undefined = 0,
  UID = 1,
  DID = 2,
  CustomKey = 3,
}

/** HistoryVersionStatus Description Version Status
 NEXT ID: 3 */
export enum HistoryVersionStatus {
  Undefined = 0,
  Valid = 1,
  InValid = 2,
}

/** HistoryVersionType Version record type
 NEXT ID: 6 */
export enum HistoryVersionType {
  Undefined = 0,
  /** submitted version */
  Commit = 1,
  /** online publishing */
  Online = 2,
  /** pre-release PPE */
  PrePublish = 3,
  /** grey release */
  Gray = 4,
  /** Rollback version */
  Rollback = 5,
}

/** PublishVersionType Current version Release type
 NEXT ID: 4 */
export enum PublishVersionType {
  Undefined = 0,
  /** Online official version */
  Online = 1,
  /** pre-release PPE */
  PrePublish = 2,
  /** grey release */
  Gray = 3,
}

export enum RuleStatus {
  UnDefined = 0,
  Online = 1,
  Offline = 2,
}

export enum VersionType {
  UnDefined = 0,
  XTtEnv = 1,
  VersionIdentifier = 2,
  Gray = 3,
}

/** Policies currently in effect */
export interface ActiveRule {
  /** Policy ID */
  rule_id?: string;
  /** Channel information */
  connector_info?: ConnectorInfo;
  /** creator name */
  creator_name?: string;
  /** creation time */
  create_time?: string;
  /** Version, commit version */
  version?: string;
  /** Pre/grey release type */
  version_type?: VersionType;
  /** Lane name, used when VersionType = XTtEnv */
  x_tt_env?: string;
  /** Version ID, used when VersionType=VersionIdentifier */
  version_identifier?: string;
  /** Bot version in exchange for committed version */
  bot_version?: string;
  /** [Deprecated] grey release id list, used when VersionType = Gray (grey release id list) */
  gray_id_list?: Array<string>;
  /** rule state */
  status?: RuleStatus;
  /** offline time */
  offline_time?: string;
  /** Operator name */
  operator_name?: string;
  /** Grey release configuration, used when VersionType = Gray (supports black and white list, grey release ratio) */
  gray_config?: GrayConfig;
}

export interface AllowedConnector {
  id?: string;
  has_published?: boolean;
}

/** AllowList
 NEXT ID: 3 */
export interface AllowList {
  /** compare fields */
  field?: GrayField;
  /** Compare field values */
  values?: Array<string>;
}

/** BlockList
 NEXT ID: 3 */
export interface BlockList {
  /** compare fields */
  field?: GrayField;
  /** Compare field values */
  values?: Array<string>;
}

/** BotHistoryVersion history
 NEXT ID: 14 */
export interface BotHistoryVersion {
  /** record id */
  history_id?: string;
  /** record type */
  history_version_type?: HistoryVersionType;
  /** creator information */
  creator?: Creator;
  /** creation time */
  create_time?: string;
  /** imprint */
  remark?: string;
  /** Channel information, the submitted version does not have this item. */
  connector_infos?: Array<ConnectorInfo>;
  /** bot release version number */
  bot_version?: string;
  /** The commit version number corresponding to the version */
  commit_version?: string;
  /** current version status */
  history_version_status?: HistoryVersionStatus;
  /** The env name of the pre-release PPE */
  x_tt_env?: string;
  /** [Deprecated] grey release id list */
  gray_id_list?: Array<string>;
  /** offline time */
  offline_time?: string;
  /** rule ID */
  rule_id?: string;
  /** The id at the time of publication, the commit operation is not available. */
  publish_id?: string;
  /** Grey release configuration, used when VersionType = Gray (supports black and white list, grey release ratio) */
  gray_config?: GrayConfig;
}

/** BotOperationHistory
 NEXT ID: 14 */
export interface BotOperationHistory {
  /** record id */
  history_id?: string;
  /** operation type */
  bot_version_operation?: BotVersionOperation;
  /** record type */
  history_version_type?: HistoryVersionType;
  /** Operator information */
  creator?: Creator;
  /** operating time */
  create_time?: string;
  /** imprint */
  remark?: string;
  /** Channel information, the submitted version does not have this item. */
  connector_infos?: Array<ConnectorInfo>;
  /** bot release version number */
  bot_version?: string;
  /** The commit version number corresponding to the version */
  commit_version?: string;
  /** Current effective status */
  history_version_status?: HistoryVersionStatus;
  /** The env name of the pre-release PPE */
  x_tt_env?: string;
  /** [Deprecated] grey release id list */
  gray_id_list?: Array<string>;
  /** rule ID */
  rule_id?: string;
  /** The id at the time of publication, the commit operation is not available. */
  publish_id?: string;
  /** Grey release configuration, used when VersionType = Gray (supports black and white list, grey release ratio) */
  gray_config?: GrayConfig;
}

/** BotPublishVersion Current release version information
 NEXT ID: 11 */
export interface BotPublishVersion {
  bot_id?: string;
  /** Channel information */
  connector_info?: ConnectorInfo;
  /** creator information */
  creator?: Creator;
  /** creation time */
  create_time?: string;
  /** imprint */
  remark?: string;
  /** release type */
  publish_version_type?: PublishVersionType;
  /** bot release version number */
  bot_version?: string;
  /** The commit version number corresponding to the version */
  commit_version?: string;
  /** PPE and grey release associated rule IDs */
  rule_id?: string;
  /** PPE pre-release, indicating lane names */
  x_tt_env?: string;
  /** [Deprecated] grey release id list, used when VersionType = Gray (grey release id list) */
  gray_id_list?: Array<string>;
  /** ID at time of publication */
  publish_id?: string;
  /** Whether to support rollback */
  support_rollback?: boolean;
  /** Grey release configuration, used when VersionType = Gray (supports black and white list, grey release ratio) */
  gray_config?: GrayConfig;
}

export interface ConnectorInfo {
  id?: string;
  /** channel name */
  name?: string;
  /** channel icon */
  icon?: string;
}

/** Creator User Information
 NEXT ID: 4 */
export interface Creator {
  id?: string;
  name?: string;
  avatar_url?: string;
}

/** GrayBucket percentage grey release configuration
 NEXT ID: 4 */
export interface GrayBucket {
  /** Grey release calculation field */
  field?: GrayField;
  /** Grey release ratio, take the size of [0, size] */
  in_gray?: number;
  /** Bucket size, default 10000 */
  size?: number;
}

/** GrayConfig grey release configuration
 The current order is BlockList - > AllowList - > Bucket's check order
 NEXT ID: 4 */
export interface GrayConfig {
  /** Representation misses in blockList */
  block_list?: BlockList;
  /** Hit and miss buckets in allowList */
  allow_list?: AllowList;
  /** Percent grey release configuration */
  bucket?: GrayBucket;
}

export interface GrayField {
  /** Grey release field type */
  type: GrayFieldType;
  /** Custom field json path */
  custom_field_path?: string;
}
/* eslint-enable */
