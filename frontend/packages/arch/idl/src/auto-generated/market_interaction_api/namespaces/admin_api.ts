/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as flow_marketplace_interaction_common from './flow_marketplace_interaction_common';

export type Int64 = string | number;

export enum TopPostStatus {
  InEffect = 1,
  NotBegun = 2,
  Finished = 3,
}

export interface AuthorInfo {
  id?: string;
  icon_url?: string;
  author_name?: string;
  author_type?: flow_marketplace_interaction_common.AuthorType;
  status?: flow_marketplace_interaction_common.UserStatus;
}

export interface Comment {
  id?: string;
  product_id?: string;
  product_name?: string;
  post_id?: string;
  author?: AuthorInfo;
  status?: flow_marketplace_interaction_common.CommentStatus;
  type?: flow_marketplace_interaction_common.CommentType;
  reply_count?: number;
  published_at?: string;
  post_status?: flow_marketplace_interaction_common.PostStatus;
  content?: string;
  resource?: Record<string, flow_marketplace_interaction_common.Resource>;
  /** The entity type of the product to which ProductEntityType belongs. When ItemType = Product, there are corresponding values: 1-bot product; 2-plug-in product; 6-application product; 21-bot template; 23-workflow template; 26-application template */
  product_entity_type?: number;
}

export interface DeleteTopPostRequest {
  id: string;
}

export interface DeleteTopPostResponse {
  code: number;
  message: string;
}

export interface Discussion {
  id?: string;
  status?: flow_marketplace_interaction_common.DiscussionStatus;
  item_type?: flow_marketplace_interaction_common.InteractionItemType;
  item_id?: string;
  /** Owned entity display name */
  item_show_name?: string;
  /** number of replies */
  comment_count?: string;
  /** number of posts */
  post_count?: string;
  /** The entity type of the product to which ProductEntityType belongs. When ItemType = Product, there are corresponding values: 1-bot product; 2-plug-in product; 6-application product; 21-bot template; 23-workflow template; 26-application template */
  product_entity_type?: number;
}

export interface GetCommentListData {
  comments?: Array<Comment>;
  total?: number;
}

export interface GetCommentListRequest {
  page_num: number;
  page_size: number;
  product_id?: string;
  comment_id?: string;
  author_name?: string;
  author_type?: flow_marketplace_interaction_common.AuthorType;
  author_id?: string;
  content_keyword?: string;
  post_id?: string;
  created_at_begin?: string;
  created_at_end?: string;
  status?: flow_marketplace_interaction_common.CommentStatus;
  type?: flow_marketplace_interaction_common.CommentType;
  root_id?: string;
  sort_type?: flow_marketplace_interaction_common.SortType;
}

export interface GetCommentListResponse {
  code: number;
  message: string;
  data?: GetCommentListData;
}

export interface GetDiscussionGlobalConfigData {
  status?: flow_marketplace_interaction_common.DiscussionGlobalStatus;
  audit_link?: string;
}

export interface GetDiscussionGlobalConfigRequest {}

export interface GetDiscussionGlobalConfigResponse {
  code: number;
  message: string;
  data?: GetDiscussionGlobalConfigData;
}

export interface GetDiscussionListData {
  discussions?: Array<Discussion>;
  total?: number;
}

export interface GetDiscussionListRequest {
  page_num?: number;
  page_size?: number;
  /** The entity type associated with the discussion board */
  item_type?: flow_marketplace_interaction_common.InteractionItemType;
  /** The associated entity name for searching */
  item_show_name?: string;
  /** associated entity ID */
  item_id?: string;
  status?: flow_marketplace_interaction_common.DiscussionStatus;
}

export interface GetDiscussionListResponse {
  code: number;
  message: string;
  data?: GetDiscussionListData;
}

export interface GetImgURLData {
  url?: string;
}

export interface GetImgURLRequest {
  Key?: string;
}

export interface GetImgURLResponse {
  code: number;
  message: string;
  data?: GetImgURLData;
}

export interface GetPostDetailData {
  post?: Post;
}

export interface GetPostDetailRequest {
  id: string;
}

export interface GetPostDetailResponse {
  code: number;
  message: string;
  data?: GetPostDetailData;
}

export interface GetPostLabelListData {
  labels?: Array<flow_marketplace_interaction_common.PostLabel>;
}

export interface GetPostLabelListRequest {}

export interface GetPostLabelListResponse {
  code: number;
  message: string;
  data?: GetPostLabelListData;
}

export interface GetPostListData {
  posts?: Array<Post>;
  total?: number;
}

export interface GetPostListRequest {
  page_num?: number;
  page_size?: number;
  /** sort type */
  sort_type?: flow_marketplace_interaction_common.SortType;
  /** Search term */
  keyword?: string;
  post_id?: string;
  item_id?: string;
  item_type?: flow_marketplace_interaction_common.InteractionItemType;
  author_id?: string;
  author_name?: string;
  /** Post Time Filter - Start Time */
  publish_begin_at?: string;
  /** Post Time Filter - End Time */
  publish_end_at?: string;
  status?: flow_marketplace_interaction_common.PostStatus;
  /** label */
  label_id?: string;
  /** Positive and Negative Score */
  min_evaluation_score?: number;
  max_evaluation_score?: number;
}

export interface GetPostListResponse {
  code: number;
  message: string;
  data?: GetPostListData;
}

export interface GetPreviewTopPostData {
  preview_top_post_id?: string;
  product_id?: string;
}

export interface GetPreviewTopPostRequest {
  id: string;
}

export interface GetPreviewTopPostResponse {
  code: number;
  message: string;
  data?: GetPreviewTopPostData;
}

export interface GetTopPostListData {
  posts?: Array<TopPost>;
  total?: number;
}

export interface GetTopPostListRequest {
  page_num?: number;
  page_size?: number;
  config_type?: flow_marketplace_interaction_common.ConfigType;
}

export interface GetTopPostListResponse {
  code: number;
  message: string;
  data?: GetTopPostListData;
}

export interface GetUploadTokenRequest {}

export interface GetUploadTokenResponse {
  code: number;
  message: string;
  data?: flow_marketplace_interaction_common.UploadTokenData;
}

export interface Post {
  id?: string;
  title?: string;
  status?: flow_marketplace_interaction_common.PostStatus;
  item_type?: flow_marketplace_interaction_common.InteractionItemType;
  item_id?: string;
  /** Owned entity display name */
  item_show_name?: string;
  author?: AuthorInfo;
  /** number of replies */
  comment_count?: number;
  /** release time */
  created_at?: string;
  label?: flow_marketplace_interaction_common.PostLabel;
  /** Content (list interface does not return, details interface returns) */
  content?: string;
  /** The resources involved in the post content (the list interface does not return, the details interface returns) */
  resource?: Record<string, flow_marketplace_interaction_common.Resource>;
  /** (The list interface does not return, the details interface returns) */
  conversation?: flow_marketplace_interaction_common.Conversation;
  pin_type?: flow_marketplace_interaction_common.PinType;
  /** The entity ID of the product to which it belongs. */
  product_entity_id?: string;
  /** Positive and negative ratings for posts, 50 is neutral, 0 is unrated, and 100 is the most positive */
  evaluation_score?: number;
  /** The entity type of the product to which ProductEntityType belongs. When ItemType = Product, there are corresponding values: 1-bot product; 2-plug-in product; 6-application product; 21-bot template; 23-workflow template; 26-application template */
  product_entity_type?: number;
}

export interface PublishPostData {
  id?: string;
  post_id?: string;
}

export interface PublishTopPostRequest {
  title: string;
  content: string;
  context_text: string;
  resource?: Record<string, flow_marketplace_interaction_common.Resource>;
}

export interface PublishTopPostResponse {
  code: number;
  message: string;
  data?: PublishPostData;
}

export interface SetDiscussionGlobalConfigRequest {
  discussion_status?: flow_marketplace_interaction_common.DiscussionGlobalStatus;
  date_range?: Array<string>;
  'X-Jwt-Token'?: string;
  'X-Bcgw-Username'?: string;
  /** Approval process ID, used to identify whether the process is online */
  process_id?: number;
}

export interface SetDiscussionGlobalConfigResponse {
  code: number;
  message: string;
}

export interface SetTopPostConfigRequest {
  id: string;
  config: TopPostConfig;
}

export interface SetTopPostConfigResponse {
  code: number;
  message: string;
}

export interface TopPost {
  id?: string;
  post_id?: string;
  title?: string;
  config?: TopPostConfig;
  status?: TopPostStatus;
  comment_count?: string;
}

export interface TopPostConfig {
  begin_time_second?: string;
  end_time_second?: string;
}

export interface UpdateCommentStatusData {
  failed?: Record<Int64, string>;
}

export interface UpdateCommentStatusRequest {
  ids: Array<string>;
  status: flow_marketplace_interaction_common.CommentStatus;
}

export interface UpdateCommentStatusResponse {
  code: number;
  message: string;
  data?: UpdateCommentStatusData;
}

export interface UpdateDiscussionStatusRequest {
  ids: Array<string>;
  status: flow_marketplace_interaction_common.DiscussionStatus;
}

export interface UpdateDiscussionStatusResponse {
  code: number;
  message: string;
}

export interface UpdatePostStatusRequest {
  ids: Array<string>;
  status: flow_marketplace_interaction_common.PostStatus;
}

export interface UpdatePostStatusResponse {
  code: number;
  message: string;
}

export interface UpdateTopPostRequest {
  post_id?: string;
  title?: string;
  content?: string;
  content_text?: string;
  resource?: Record<string, flow_marketplace_interaction_common.Resource>;
}

export interface UpdateTopPostResponse {
  code: number;
  message: string;
}

export interface UpsertUserStatusRequest {
  user_id: string;
  status: flow_marketplace_interaction_common.UserStatus;
}

export interface UpsertUserStatusResponse {
  code: number;
  message: string;
}
/* eslint-enable */
