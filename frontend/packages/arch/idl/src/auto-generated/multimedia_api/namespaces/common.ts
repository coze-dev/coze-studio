/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export type Int64 = string | number;

export enum AudioSpeechRespType {
  /** Returns base64 encoded audio data */
  Base64Data = 1,
  /** Return playable URL link */
  URL = 2,
}

export enum CreateRoomScene {
  Store = 1,
  /** debugging bench */
  Debug = 2,
  /** OpenAPI scenario */
  OpenAPI = 3,
  /** template scene */
  Template = 4,
}

export enum Language {
  zh = 0,
  en = 1,
  ja = 2,
  es = 3,
  id = 4,
  pt = 5,
}

export enum ModelType {
  BigModel = 0,
  SmallModel = 1,
}

export enum PermissionRoleType {
  User = 1,
  Space = 2,
  Connector = 3,
}

export enum PermissionType {
  VoiceSpeech = 1,
  VoiceClone = 2,
}

export enum RealtimeScene {
  /** Default scene */
  ExternalRTCOpenAPI = 0,
  /** Infield Store */
  InteralMarketplace = 1,
  /** Infield debugging */
  InternalDebug = 2,
}

export enum VoiceState {
  /** Initial state, uncloned tone */
  Init = 0,
  /** The sound is cloned and can be used. */
  Cloned = 10,
  /** Sound deleted */
  Deleted = 20,
  /** Timing to be assigned */
  Pending = 30,
}

export enum VoiceType {
  /** system tone */
  SystemVoice = 1,
  /** user timbre */
  UserVoice = 2,
}

export interface AudioInfo {
  /** Audio format, pcm, m4a must pass, others are optional */
  format?: string;
  /** Max 10M Binary Audio Bytes */
  audio_bytes?: Blob;
}

export interface DeviceInfo {
  device_id?: string;
  custom_consumer?: string;
}

export interface EmotionConfig {
  Emotion?: string;
  EmotionScale?: number;
}

export interface EmotionInfo {
  emotion?: string;
  display_name?: string;
  emotion_scale_interval?: Interval;
}

export interface Interval {
  min?: number;
  max?: number;
  default?: number;
}

export interface LanguageInfo {
  language_code?: string;
  language_name?: string;
}

/** DTO for OpenAPI scenarios */
export interface OpenAPIVoiceData {
  /** unique tone code */
  voice_id?: string;
  /** timbre name */
  name?: string;
  /** Is the system tone? */
  is_system_voice?: boolean;
  /** Timbre preview text */
  preview_text?: string;
  /** Tone Preview Audio */
  preview_audio?: string;
  /** language name */
  language_name?: string;
  /** language code */
  language_code?: string;
  /** Remaining training times */
  available_training_times?: number;
  speaker_id?: string;
  /** model type */
  model_type?: string;
  /** timbre state */
  state?: string;
  /** List of supported emotions */
  support_emotions?: Array<EmotionInfo>;
  /** Created unix timestamp */
  create_time?: number;
  /** Update unix timestamp */
  update_time?: number;
}

export interface UserInfo {
  id?: string;
  name?: string;
  nickname?: string;
  avatar_url?: string;
}

/** DTO for RPC and CozeAPI scenarios */
export interface VoiceDetail {
  voice_id: string;
  space_id?: string;
  voice_name?: string;
  voice_desc?: string;
  icon_url?: string;
  /** Total number of trainings */
  total_training_times?: number;
  /** Remaining training times */
  available_training_times?: number;
  /** Timbre preview text */
  preview_text?: string;
  /** Tone Preview Audio */
  preview_audio?: string;
  /** language name */
  language_name?: string;
  /** language code */
  language_code?: string;
  /** usage scenario */
  scene?: string;
  /** Is it the system tone? */
  is_system_voice?: boolean;
  /** creator information */
  create_user_info?: UserInfo;
  speaker_id?: string;
  /** Has it been reproduced? */
  state?: VoiceState;
  vol_account_id?: string;
  icon_uri?: string;
  /** The last clone time, if there is no replica, the current value is empty */
  last_clone_time_unix?: number;
  /** Created unix timestamp */
  create_time?: number;
  /** Update unix timestamp */
  update_time?: number;
  /** Coze configuration ID, only for Coze */
  configuration_id?: Int64;
  /** Type of model */
  model_type?: ModelType;
  /** model provider */
  model_provider?: string;
  /** Is it a boutique sound? */
  is_fine_tune_voice?: boolean;
  /** List of supported emotions */
  support_emotions?: Array<EmotionInfo>;
  /** Does it support multi-emotion? */
  is_multi_emotion_voice?: boolean;
}
/* eslint-enable */
