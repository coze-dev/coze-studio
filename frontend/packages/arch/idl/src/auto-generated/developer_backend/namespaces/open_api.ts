/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as base from './base';
import * as benefit_common from './benefit_common';

export type Int64 = string | number;

/** aggregate dimension */
export enum AggregateDimension {
  Daily = 1,
  Weekly = 2,
  Monthly = 3,
  Quarterly = 4,
  Yearly = 5,
}

export enum ApiAppEventStatus {
  Unsubscribed = 1,
  Subscribed = 2,
}

export enum APISource {
  OpenAPI = 1,
  Coze = 2,
}

export enum AppType {
  Normal = 1,
  Connector = 2,
}

export enum ConnectorApiAppStatus {
  NotConfigured = 1,
  Configured = 2,
}

export enum CozeVersion {
  Inhouse = 1,
  Release = 2,
  Ppe = 3,
}

export enum DetailsType {
  api = 1,
  bot = 2,
}

/** Chart data to be returned */
export enum MeticsType {
  All = 1,
  TotalConsumption = 2,
  AverageConsumption = 3,
  TotalRequests = 4,
  TotalSuccessfulRequests = 5,
  AverageResponeseTime = 6,
  RequestSuccessRate = 7,
  ErrorCodeDistribution = 8,
}

export enum PermissionScope {
  Workspace = 0,
  Account = 1,
  Enterprise = 2,
}

export enum PermissionType {
  /** normal permission */
  Normal = 0,
  /** channel usage */
  Connector = 1,
}

export enum PlaygroundItemType {
  API = 1,
  WEBSDK = 2,
  RTCSDK = 3,
}

/** New requirements, after going online
 All throttling objects are in the path dimension */
export enum PrincipleType {
  /** The viewership of default limit
Deprecated, has no effect. There is no scene where a pat shares the limited viewership of all paths */
  PAT = 1,
  /** Global rate limit. The limited viewership of the entire path to ensure service stability is the upper limit of a service capability */
  API = 2,
  /** Per user rate limit. The limited viewership of each user, used for quotas */
  PATAndAPI = 3,
  /** Deprecated, useless */
  BotIDAndAPI = 4,
  /** The limited viewership of space (space_id), migrated from record in the future */
  PerWorkspace = 5,
  /** Special limit viewership of higher than the default limit viewership of (will override the limit viewership of the global rate limit (API = 2))
Special limited viewership of specific user_id */
  SpecialUser = 100,
  /** Special limited viewership of specific space_id */
  SpecialWorkspace = 101,
  /** Special limited viewership of specific enterprise enterprise_id */
  SpecialEnterprise = 102,
}

/** --- API data page display ---
 query time range enumeration */
export enum QueryRange {
  /** Last 7 days */
  Latest_7_Days = 1,
  /** Last 30 days */
  Latest_30_Days = 2,
  /** History so far */
  History = 3,
  /** today */
  Today = 4,
}

export enum RateLimitEntityType {
  /** Reserved for RateLimitType = 1 (Global), in fact the entity id is empty, which is useless */
  Global = 1,
  /** For RateLimitType = 2 (Base), there are three free/professional/enterprise entity types. */
  BenefitLevel = 2,
  CozeUID = 3,
  EnterpriseID = 4,
  /** Currently only the chat interface can be used. */
  SpaceID = 5,
}

/** limit viewership of */
export enum RateLimitType {
  /** Global current limit, independent of user */
  Global = 1,
  /** Global current limit, user irrelevant, rights and interests related (free/professional/enterprise 3 gears) */
  Base = 2,
  /** Expand capacity and limit current, user-related */
  Expand = 3,
}

export enum TrafficType {
  /** Default traffic: Normal version (personal free) */
  Default = 0,
  /** Professional Edition (Personal Payment) */
  Professional = 1,
  /** Enterprise Edition */
  Enterprise = 2,
}

export enum VisibleStatus {
  Pass = 1,
  Refuse = 2,
}

export interface AnalyticsData {
  /** Illustration -- Icon */
  pictures?: Record<string, Picture>;
  start_ms: Int64;
  end_ms: Int64;
}

export interface APIAnalyticsReq {
  query_range: QueryRange;
  metrics_type: MeticsType;
  dimension: AggregateDimension;
  Base?: base.Base;
}

export interface APIAnalyticsResp {
  code: number;
  msg: string;
  data: AnalyticsData;
  BaseResp?: base.BaseResp;
}

export interface ApiAppEvent {
  event_type: string;
  name: string;
  status: ApiAppEventStatus;
  desc?: string;
  doc?: string;
}

export interface ApiAppEventOpen {
  name?: string;
  description?: string;
  event_type?: string;
  api_app_id?: string;
}

export interface ApiAppOpen {
  id: string;
  type: string;
  connector_id?: string;
  verify_token: string;
  callback_url?: string;
  events?: Record<string, ApiAppEventOpen>;
}

export interface ApiAppOpenV2 {
  id: string;
  app_type: string;
  name?: string;
  connector_id?: string;
  verify_token: string;
  callback_url?: string;
}

export interface APIDetailsData {
  rows: Array<DetailRow>;
}

export interface APIDetailsReq {
  query_range: QueryRange;
  details_type: DetailsType;
  Base?: base.Base;
}

export interface APIDetailsResp {
  code: number;
  msg: string;
  data: APIDetailsData;
  BaseResp?: base.BaseResp;
}

export interface APIFileterInfo {
  path?: string;
  source?: APISource;
  visible_status?: VisibleStatus;
  version?: string;
}

export interface CheckVPCListReq {
  Base?: base.Base;
}

export interface CheckVPCListResp {
  BaseResp?: base.BaseResp;
}

export interface ConnectorApiApp {
  id: string;
  connector_id: string;
  connector_name: string;
  connector_icon_url?: string;
  status: ConnectorApiAppStatus;
  /** If it has not been configured, this one is not available. */
  verify_token?: string;
  callback_url?: string;
  events?: Array<ApiAppEvent>;
}

export interface ConsumeBenefitChangeReq {
  VolcResPushEvent?: VolcResPushEvent;
  Base?: base.Base;
}

export interface ConsumeBenefitChangeResp {
  BaseResp?: base.BaseResp;
}

/** Create a callback app */
export interface CreateApiAppOpenReq {
  /** Required */
  app_type?: string;
  /** The name of the callback application, app_type = normal */
  name?: string;
  /** app_type = connector */
  connector_id?: string;
  Base?: base.Base;
}

export interface CreateApiAppOpenResp {
  code?: Int64;
  msg?: string;
  data?: ApiAppOpenV2;
  BaseResp?: base.BaseResp;
}

export interface CreateApiAppReq {
  org_id?: string;
  app_type: AppType;
  name: string;
  /** app_type = connector */
  connector_id?: string;
  /** app_type = normal */
  callback_url?: string;
  /** 64-Bit characters must be passed when app_type = normal [a-zA-Z0-9] */
  verify_token?: string;
  Base?: base.Base;
}

export interface CreateApiAppResp {
  id?: string;
  verify_token?: string;
  BaseResp?: base.BaseResp;
}

/** Create rules of limited viewership */
export interface CreateRateLimitReq {
  /** ID does not need to be transmitted. */
  rate_limit: RateLimitConf;
  /** Idempotent key, if there are duplicates, will not report an error, will return the id that has been successfully created, but will not create multiple */
  uniq_key?: string;
  Base?: base.Base;
}

export interface CreateRateLimitResp {
  /** The id of the created limited viewership rule */
  id?: Int64;
  BaseResp?: base.BaseResp;
}

/** Remove callback configuration */
export interface DeleteApiAppOpenReq {
  api_app_id?: string;
  Base?: base.Base;
}

export interface DeleteApiAppOpenResp {
  code?: Int64;
  msg?: string;
  BaseResp?: base.BaseResp;
}

export interface DeleteApiAppReq {
  id: string;
  Base?: base.Base;
}

export interface DeleteApiAppResp {
  BaseResp?: base.BaseResp;
}

export interface DetailRow {
  total_token: string;
  single_token: string;
  last_used_time: string;
  request_count: string;
  request_success_count: string;
  cost_time: string;
  name: string;
}

export interface GetApiAppByConnectorIDReq {
  ConnectorID: Int64;
  Base?: base.Base;
}

export interface GetApiAppByConnectorIDResp {
  ApiApp?: ApiAppOpen;
  BaseResp?: base.BaseResp;
}

/** --- API callback capability ---
 Technical solution: 
 openapi
  Get list */
export interface GetApiAppListOpenReq {
  /** page number */
  page_token?: string;
  /** page size */
  page_size?: number;
  /** If you don't pass it on, you will return. */
  app_type?: string;
  Base?: base.Base;
}

export interface GetApiAppListOpenResp {
  code?: Int64;
  msg?: string;
  data?: GetApiAppListOpenRespData;
  BaseResp?: base.BaseResp;
}

export interface GetApiAppListOpenRespData {
  items?: Array<ApiAppOpenV2>;
  /** Paging token, the first page is empty, the next page is returned by the previous next_page_token */
  next_page_token?: string;
  /** Is there any more data? */
  has_more?: boolean;
}

export interface GetAPIVisibilityRequest {
  path?: string;
  source?: APISource;
  version?: string;
  http_method?: string;
  Base?: base.Base;
}

export interface GetAPIVisibilityResponse {
  visible_status?: VisibleStatus;
  limit_rule?: Array<RequestLimitRule>;
  BaseResp?: base.BaseResp;
}

export interface GetConnectorApiAppListReq {
  org_id?: string;
  page_token?: string;
  /** page size */
  page_size?: number;
  Base?: base.Base;
}

export interface GetConnectorApiAppListResp {
  api_apps?: Array<ConnectorApiApp>;
  next_page_token?: string;
  /** Is there any more data? */
  has_more?: boolean;
  BaseResp?: base.BaseResp;
}

/** --- API callback capability ---
 Technical solution: 
 API used on web pages */
export interface GetNormalApiAppListReq {
  org_id?: string;
  /** Paging token, the first page is empty, the next page is returned by the previous next_page_token */
  page_token?: string;
  /** page size */
  page_size?: number;
  Base?: base.Base;
}

export interface GetNormalApiAppListResp {
  api_apps?: Array<NormalApiApp>;
  next_page_token?: string;
  /** Is there any more data? */
  has_more?: boolean;
  BaseResp?: base.BaseResp;
}

/** Get authentication points for different authentication paths */
export interface GetPermissionByPathReq {
  path?: string;
  permission_type?: PermissionType;
}

export interface GetPermissionByPathResp {
  /** The format is Bot.chat stitched string. */
  permission_key?: string;
  BaseResp?: base.BaseResp;
}

export interface GetPermissionListData {
  data?: Array<PermissionInfo>;
}

/** Default full return */
export interface GetPermissionListReq {
  /** You can use key to match accurately, format Bot :: chat */
  key_list?: Array<string>;
  /** You can use id to match accurately. */
  permission_id_list?: Array<string>;
  /** You can choose to pass in "release" "inhouse" to select the version */
  version?: CozeVersion;
  permission_type?: PermissionType;
  /** Full permission key match. Format Bog :: chat, and will query the packet node at the same time. key_list used for v1 version query */
  full_key_list?: Array<string>;
  Base?: base.Base;
}

/** Get permission list v2, return aggregated by displayname */
export interface GetPermissionListReqV2 {
  /** You can use key to match accurately, format Bot :: chat */
  key_list?: Array<string>;
  /** You can use id to match accurately. */
  permission_id_list?: Array<string>;
  /** You can choose to pass in "release" "inhouse" to select the version */
  version?: CozeVersion;
  permission_type?: PermissionType;
  Base?: base.Base;
}

export interface GetPermissionListResp {
  code?: number;
  msg?: string;
  data?: GetPermissionListData;
  BaseResp?: base.BaseResp;
}

export interface GetPermissionListRespV2 {
  code?: number;
  msg?: string;
  data?: GetPermissionListData;
  BaseResp?: base.BaseResp;
}

export interface GetPlaygroundAllApiInfoReq {
  Base?: base.Base;
}

export interface GetPlaygroundAllApiInfoResp {
  /** Swagger openapi specification. Currently 3.0.3 */
  swagger_openapi_spec: string;
  BaseResp?: base.BaseResp;
}

export interface GetPlaygroundApiInfoReq {
  url_key: string;
  /** Workflow/dialog execution: return the parameters of the last practice run; dialog flow mode agent: return the parameters of the dialog flow start node */
  workflow_id?: string;
  Base?: base.Base;
}

export interface GetPlaygroundApiInfoResp {
  /** eg. https://api.coze.cn/v1/bot/create */
  url: string;
  /** eg. /v1/bot/create */
  path: string;
  /** eg. GET, POST */
  method: string;
  /** eg. editConversation */
  permission?: string;
  /** Swagger openapi specification. Currently 3.0.3 */
  swagger_openapi_spec: string;
  /** code example */
  code_example?: Array<PlaygroundCodeExample>;
  /** The stream/blob front end needs to know the response type before executing the request, so it will be returned here */
  response_type?: string;
  /** Workflow/dialog flow execution interface, if the argument includes worfklow, it will return: including parameters and corresponding values, json format */
  param_content?: string;
  /** True: Need to save the running result */
  need_save_run_history?: boolean;
  BaseResp?: base.BaseResp;
}

export interface GetPlaygroundItemListReq {
  Base?: base.Base;
}

export interface GetPlaygroundItemListResp {
  categories: Array<PlaygroundCategory>;
  BaseResp?: base.BaseResp;
}

export interface GetPlaygroundRunHistoryReq {
  /** interface path */
  path?: string;
  /** Interface method: POST/GET/... */
  method?: string;
  /** Organization account ID */
  org_id?: string;
  Base?: base.Base;
}

export interface GetPlaygroundRunHistoryResp {
  records?: Array<PlaygroundRunHistory>;
  BaseResp?: base.BaseResp;
}

export interface GetPlaygroundWebSdkInfoReq {
  version?: string;
  Base?: base.Base;
}

export interface GetPlaygroundWebSdkInfoResp {
  version: string;
  sample: Array<PlaygroundWebSdkCodeSample>;
  /** All versions */
  version_list?: Array<string>;
  /** Swagger specification, mainly returns configurable parameter information */
  swagger_spec?: string;
  BaseResp?: base.BaseResp;
}

export interface GetRateLimitReq {
  path: string;
  http_method: string;
  /** The relationship between filters is or */
  filters?: Array<RateLimitEntityFilter>;
  Base?: base.Base;
}

export interface GetRateLimitResp {
  rate_limit_list?: Array<RateLimitConf>;
  BaseResp?: base.BaseResp;
}

export interface GetSubscribedApiAppListReq {
  event_type: string;
  /** Choose one of the following three
Coze Account ID */
  coze_account_id?: Int64;
  /** Channel ID */
  connector_id?: Int64;
  /** Volcano Account ID */
  volcano_account_id?: Int64;
  Base?: base.Base;
}

export interface GetSubscribedApiAppListResp {
  items?: Array<ApiAppOpen>;
  BaseResp?: base.BaseResp;
}

/** subscribe list */
export interface ListSubscribedApiAppEventOpenReq {
  api_app_id?: string;
  page_token?: string;
  /** page size */
  page_size?: number;
  Base?: base.Base;
}

export interface ListSubscribedApiAppEventOpenResp {
  code?: Int64;
  msg?: string;
  data?: ListSubscribedApiAppEventOpenRespData;
  BaseResp?: base.BaseResp;
}

export interface ListSubscribedApiAppEventOpenRespData {
  items?: Array<ApiAppEventOpen>;
  next_page_token?: string;
  has_more?: boolean;
}

export interface NormalApiApp {
  id: string;
  verify_token: string;
  name: string;
  callback_url?: string;
  events?: Array<ApiAppEvent>;
}

export interface OauthQuickstartConfigReq {
  client_type?: string;
  Base?: base.Base;
}

export interface OauthQuickstartConfigResp {
  lang_config?: Array<OauthQuickstartLangConfig>;
  BaseResp?: base.BaseResp;
}

export interface OauthQuickstartLangConfig {
  /** The configuration of lang returned this time */
  lang?: string;
  /** user guide */
  instruction?: string;
  /** Download link (tos) */
  download_url?: string;
}

/** Override the limited viewership of writing rules (temporary interface, compatible with the operating platform) */
export interface OverwriteRateLimitReq {
  method: string;
  path: string;
  /** List of rules with limited viewership that overwrites */
  rate_limit_list: Array<RateLimitConf>;
  Base?: base.Base;
}

export interface OverwriteRateLimitResp {
  BaseResp?: base.BaseResp;
}

export interface PermissionInfo {
  permission_id?: string;
  key?: string;
  description?: string;
  display_name?: string;
  /** Sub permission spot */
  childrens?: Array<PermissionInfo>;
  /** Is the release visible? */
  release_status?: VisibleStatus;
  /** Is inhouse visible? */
  inhouse_status?: VisibleStatus;
  create_time?: string;
  update_time?: string;
  parent_id?: string;
  /** Is ppe visible? */
  ppe_status?: VisibleStatus;
  permission_type?: PermissionType;
  /** Is it a space-related resource permission? */
  permission_scope?: PermissionScope;
  permission_key?: string;
}

export interface PictrueData {
  /** plot data
X-axis data */
  x_value: Int64;
  /** y-axis data */
  y_value: number;
}

export interface Picture {
  picture_data: Array<PictrueData>;
  total: number;
  last_total: number;
}

export interface PlaygroundCategory {
  /** Agents, Chat, Conversation */
  title: string;
  icon_url: string;
  items: Array<PlaygroundItem>;
  /** Module Description */
  description?: string;
}

export interface PlaygroundCodeExample {
  /** curl, python, javascript */
  language: string;
  /** eg. Curl Request */
  title: string;
  /** Nunjucks template, if length is 0, greys out the language */
  examples: Array<string>;
  example_name: Array<string>;
}

export interface PlaygroundItem {
  /** copy displayed */
  title: string;
  /** The key used to request GetPlaygroundApiInfo (only valid for Type == API) */
  url_key: string;
  type: PlaygroundItemType;
}

export interface PlaygroundOpenApiDocReq {
  'x-arcosite-action'?: string;
  body?: Blob;
  'Content-Type'?: string;
  Base?: base.Base;
}

export interface PlaygroundOpenApiDocResp {
  body?: Blob;
  BaseResp?: base.BaseResp;
}

/** playground */
export interface PlaygroundRunHistory {
  log_id?: string;
  /** Run result status code */
  status_code?: number;
  /** Running parameters, JSON */
  request?: string;
  /** Running result, JSON */
  reponse?: string;
  /** running time */
  create_at?: Int64;
}

export interface PlaygroundWebSdkCodeSample {
  file_name: string;
  /** plain text */
  content: string;
}

export interface RateLimitConf {
  id?: Int64;
  path: string;
  http_method: string;
  limit_type: RateLimitType;
  entity_type: RateLimitEntityType;
  entity_id?: string;
  /** Interval time, unit s */
  duration?: number;
  /** Limit count, for entity_type = additional limit viewership of, limit count can be negative */
  limit_count?: number;
  /** Effective timestamp (seconds) */
  valid_time_start_unix?: Int64;
  /** Invalid timestamp (seconds) */
  valid_time_end_unix?: Int64;
  /** Required when created */
  source: string;
  /** Note information, you can write key information, such as contact via Feishu, group number, etc */
  remark?: string;
}

export interface RateLimitEntityFilter {
  limit_type: RateLimitType;
  /** If you don't pass it on, you won't filter it. */
  entity_type?: RateLimitEntityType;
  /** If you don't pass it on, you won't filter it. */
  entity_id?: string;
  /** If you don't pass it on, you won't filter it. */
  source?: string;
  /** Valid only for entity type = 2 (BenefitLevel) */
  user_level?: benefit_common.UserLevel;
}

/** Removing rules of limited viewership */
export interface RemoveRateLimitReq {
  /** Create the ID obtained. */
  id: Int64;
  /** Check whether the source is consistent, and report an error if it is inconsistent */
  source: string;
  Base?: base.Base;
}

export interface RemoveRateLimitResp {
  BaseResp?: base.BaseResp;
}

export interface RequestLimitRule {
  /** subject type */
  type?: PrincipleType;
  /** Interval time, unit s */
  duration?: number;
  /** limit the number of times */
  limit_count?: number;
  /** Regular/Professional/Enterprise logo */
  traffic_type?: TrafficType;
  /** When PrincipleType is a special limit viewership of, the special limit viewership of id that needs to be passed in (corresponding to user_id, space_id, org_id) */
  special_id?: string;
  /** Start time (only valid for limited viewership of special, in seconds) */
  start_time_unix?: Int64;
  /** End time (only valid for limited viewership of special, in seconds) */
  end_time_unix?: Int64;
  /** Note information, you can write key information, such as contact via Feishu, group number, etc */
  remark?: string;
}

export interface SavePlaygroundRunHistoryReq {
  /** interface path */
  path?: string;
  /** interface method */
  method?: string;
  /** debug log */
  record?: PlaygroundRunHistory;
  /** Organization account ID */
  org_id?: string;
  Base?: base.Base;
}

export interface SavePlaygroundRunHistoryResp {
  BaseResp?: base.BaseResp;
}

/** subscribe */
export interface SubscribeApiAppEventOpenReq {
  api_app_id?: string;
  event_types?: Array<string>;
  Base?: base.Base;
}

export interface SubscribeApiAppEventOpenResp {
  code?: Int64;
  msg?: string;
  BaseResp?: base.BaseResp;
}

export interface SubscribeApiAppEventReq {
  id: string;
  event_type: string;
  Base?: base.Base;
}

export interface SubscribeApiAppEventResp {
  BaseResp?: base.BaseResp;
}

/** Sync the latest OpenAPI definitions and interface descriptions from apihub
 ApiHub Address:  */
export interface SyncFromApiHubReq {
  raw_body?: Blob;
  Base?: base.Base;
}

export interface SyncFromApiHubResp {
  BaseResp?: base.BaseResp;
}

/** unsubscribe */
export interface UnsubscribeApiAppEventOpenReq {
  api_app_id?: string;
  event_types?: Array<string>;
  Base?: base.Base;
}

export interface UnsubscribeApiAppEventOpenResp {
  code?: Int64;
  msg?: string;
  BaseResp?: base.BaseResp;
}

export interface UnsubscribeApiAppEventReq {
  id: string;
  event_type: string;
  Base?: base.Base;
}

export interface UnsubscribeApiAppEventResp {
  BaseResp?: base.BaseResp;
}

/** Update callback app */
export interface UpdateApiAppOpenReq {
  api_app_id?: string;
  name?: string;
  callback_url?: string;
  Base?: base.Base;
}

export interface UpdateApiAppOpenResp {
  code?: Int64;
  msg?: string;
  BaseResp?: base.BaseResp;
}

export interface UpdateApiAppReq {
  id: string;
  callback_url?: string;
  name?: string;
  Base?: base.Base;
}

export interface UpdateApiAppResp {
  BaseResp?: base.BaseResp;
}

/** Update rules of limited viewership */
export interface UpdateRateLimitReq {
  id: Int64;
  /** Interval time, unit s */
  duration?: number;
  /** limit the number of times */
  limit_count?: number;
  /** Effective timestamp (seconds) */
  valid_time_start_unix?: Int64;
  /** Invalid timestamp (seconds) */
  valid_time_end_unix?: Int64;
  /** Check whether the source is consistent, and report an error if it is inconsistent */
  source: string;
  Base?: base.Base;
}

export interface UpdateRateLimitResp {
  BaseResp?: base.BaseResp;
}

export interface UserBenefitDetail {
  VolcAccountID?: Int64;
  /** Corresponding to "UserLevel in Package" */
  UserLevel?: Int64;
  /** Corresponding to "InstanceStatus in Package" */
  InstanceStatus?: Int64;
}

export interface VolcResPushEvent {
  /** 1: header. EventHeader EventHeader,//required field, and the serial number is fixed to 1 todo */he serial number is fixed to 1 todo */
  OldUserBenefit?: UserBenefitDetail;
  NewUserBenefit?: UserBenefitDetail;
}
/* eslint-enable */
