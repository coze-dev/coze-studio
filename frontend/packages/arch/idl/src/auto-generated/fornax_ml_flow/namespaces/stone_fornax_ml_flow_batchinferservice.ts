/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as base from './base';
import * as batch_infer from './batch_infer';

export type Int64 = string | number;

export interface GetBatchInferTaskReq {
  task_id?: string;
  userJwtToken?: string;
  /** Space ID */
  space_id?: string;
  base?: base.Base;
}

export interface GetBatchInferTaskResp {
  batchInferTask?: batch_infer.BatchInferTask;
  baseResp?: base.BaseResp;
}

export interface GetRecommendResourceReq {
  modelCardID?: string;
  userJwtToken?: string;
  /** Space ID */
  space_id?: string;
  base?: base.Base;
}

export interface GetRecommendResourceResp {
  /** Is there a recommended resource allocation? */
  exist?: boolean;
  /** cluster id */
  merlinClusterID?: string;
  /** GPU type */
  gpuv?: string;
  /** user group id */
  groupID?: string;
  /** Resource pool type */
  quotaPoolType?: batch_infer.MerlinQuotaPoolType;
  baseResp?: base.BaseResp;
}

export interface ListModelCardsReq {
  /** Required. Source of model card */
  provider?: batch_infer.Provider;
  /** Optional. model card name keyword. */
  nameKeyword?: string;
  /** Required. User jwt token. Authentication when calling APIs such as merlin */
  userJwtToken?: string;
  /** Required. PageSize. Maximum value is 100. */
  limit?: string;
  /** Required. Page turn offset. Fill in the initial value with 0, and this value += limit for each page turned. */
  offset?: string;
  /** Space ID */
  space_id?: string;
  base?: base.Base;
}

export interface ListModelCardsResp {
  total?: string;
  hasMore?: boolean;
  modelCards?: Array<batch_infer.ModelCard>;
  baseResp?: base.BaseResp;
}

export interface ParseModelConfigReq {
  provider?: batch_infer.Provider;
  seedHdfsAddress?: string;
  seedModelCardID?: string;
  userJwtToken?: string;
  /** Space ID */
  space_id?: string;
  base?: base.Base;
}

export interface ParseModelConfigResp {
  /** Merlin seed model configuration */
  modelParamConfigType?: string;
  tokenizerAddress?: string;
  networkConfig?: string;
  quantConfig?: string;
  checkpointHdfsPath?: string;
  baseResp?: base.BaseResp;
}
/* eslint-enable */
