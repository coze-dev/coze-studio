/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export type Int64 = string | number;

export enum DatasetIOTaskStatus {
  Undefined = 0,
  /** Initializing now. */
  Initializing = 1,
  /** Running now. */
  Running = 2,
  /** successfully completed */
  Done = 3,
  /** fail */
  Failed = 4,
  /** manual termination */
  Terminated = 5,
  /** Completed successfully, but with errors */
  DoneWithError = 6,
}

export enum DatasetIOType {
  Import = 1,
  Export = 2,
}

export enum FileFormat {
  JSONL = 1,
  Parquet = 2,
  CSV = 3,
  /** compressed format */
  ZIP = 100,
}

export enum StorageProvider {
  TOS = 1,
  HDFS = 2,
  VETOS = 3,
  ImageX = 4,
  /** Back-end test usage */
  LocalFS = 5,
}

/** DatasetIOTask dataset import export file task */
export interface DatasetIOTask {
  id: string;
  spaceID: string;
  datasetID: string;
  file: StorageFile;
  ioType: DatasetIOType;
  option?: DatasetIOTaskOption;
  /** Operational data, [10, 100] */
  status?: DatasetIOTaskStatus;
  progress?: DatasetIOTaskProgress;
  logs?: Array<TaskLog>;
  createdBy?: string;
  createdAt?: string;
  updatedBy?: string;
  updatedAt?: string;
  startedAt?: string;
  endedAt?: string;
}

export interface DatasetIOTaskOption {
  /** overlay dataset */
  overwriteDataset?: boolean;
  /** When exporting a file, overwrite an existing file */
  overwriteFile?: boolean;
}

export interface DatasetIOTaskProgress {
  /** Nullable, indicating the import progress of a specific file, the value is the file name */
  name?: string;
  /** total */
  total?: Int64;
  /** Number processed */
  processed?: Int64;
  /** Number of successfully processed */
  added?: Int64;
  /** The progress of each file, used when importing the source as a folder */
  fileProgresses?: Array<DatasetIOTaskProgress>;
}

export interface StorageFile {
  provider: StorageProvider;
  path: string;
  /** Data file format */
  format?: FileFormat;
  /** compressed package format */
  compressFormat?: FileFormat;
  /** Path to folder or zip, data file list, server level settings */
  files?: Array<string>;
}

export interface TaskLog {
  content: string;
  level: string;
  timestamp: string;
  hidden: boolean;
}
/* eslint-enable */
