/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export type Int64 = string | number;

export enum AuditResultEnum {
  /** not checked */
  Init = 1,
  /** mark qualified */
  Pass = 2,
  /** Failure to mark */
  Reject = 3,
}

export enum AuditStatus {
  /** Convicted of cheating */
  Fraud = 1,
  /** AIDP approved */
  Pass = 2,
  /** AIDP review disapproved */
  Fail = 3,
}

export enum AuditStatusEnum {
  /** No moderation operations involved */
  None = 0,
  /** passed */
  Pass = 1,
  /** Recycle */
  Recycle = 2,
  /** call back */
  Back = 3,
}

/** Subject Status: Uncollected, Received, Recycled */
export enum ItemStatus {
  /** Not received */
  Init = 1,
  /** Received */
  Received = 2,
  /** Recycled */
  Recycled = 3,
}

export enum MsgOpType {
  /** Submit of unknown type, it will not appear for the time being. Only use this field to get the bottom value. */
  Unknown = 0,
  /** The title is sent, which is equivalent to IsInit = true in the message. */
  InitItem = 1,
  /** After submission, it is passed, and the title flows to the rear node, which is equivalent to AuditNodeList [$x]. AuditStatus = 1. */
  PassSubmit = 2,
  /** After submission, it is typed back, and the title flows to the front node, which is equivalent to AuditNodeList [$x]. AuditStatus = 3. */
  BackSubmit = 3,
  /** Abandoned commit, equivalent to IsDiscard = true in the message */
  DiscardSubmit = 4,
  /** Submit after clicking invalid */
  AbandonSubmit = 5,
  /** Submit directly, which is equivalent to IsDirectSubmit = true in the message. */
  DirectSubmit = 6,
  /** Update the answer, which is equivalent to IsUpdate = true in the message. */
  UpdateAnswer = 7,
}

/** Node ID */
export enum NodeID {
  Invalid = 0,
  /** Labeling/preliminary review */
  Start = 1,
  /** end */
  End = 2,
  /** Standard mode - check */
  Check = 4,
  /** Standard Inspection Mode - Quality Inspection */
  QA = 5,
  /** Standard Inspection Mode - Acceptance */
  Accept = 6,
  /** QA/blind moderation - blind moderation */
  BlindCheck = 102,
  /** QA/blind moderation - QA */
  BlindQA = 104,
  /** QA/blind moderation pattern retention - merged annotation nodes (including annotation and blind moderation) */
  BlindCombinedLabel = 1001,
}

export enum PriceType {
  DEFAULT = 1,
  TYPEDOUBLE = 2,
}

export enum TaskMode {
  /** custom */
  Custom = 0,
  /** classic */
  Classical = 1,
  /** Blind moderation (standard) */
  BlindAudit = 12,
}

/** template type */
export enum TemplateType {
  /** App-side template
Video multiple options */
  VIDEO_MULTI_OPTIONS = 1,
  /** Video/image sidebyside */
  VIDEO_IMG_SBS = 2,
  /** video judgment */
  VIDEO_SINGLE_OPTIONS = 3,
  /** Image judgment */
  IMG_SINGLE_OPTIONS = 4,
  /** image multiple options */
  IMG_MULTI_OPTIONS = 5,
  /** picture pull frame */
  IMG_FRAME = 6,
  /** Text multi-option */
  TEXT_MULTI_OPTIONS = 7,
  /** video input */
  VIDEO_INPUT = 11,
  /** image input */
  IMG_INPUT = 12,
  /** SBS input */
  SBS_INPUT = 13,
  /** No answer for video input */
  VIDEO_INPUTANY = 14,
  /** No answer for image input */
  IMG_INPUTANY = 15,
  /** SBS input No answer */
  SBS_INPUTANY = 16,
  /** POI */
  POI = 21,
  DOUYIN_INPUT = 51,
  DOUYIN_INPUTANY = 52,
  /** More Results, More Judgments */
  DOUYIN_MULTI_OPTIONS = 53,
  /** PC side template
PC-side picture judgment */
  PC_IMG_SINGLE_OPTIONS = 101,
  /** Custom template type
Image Type */
  CUSTOM_IMAGE_TEMPLATE = 201,
  /** voice type */
  CUSTOM_VOICE_TEMPLATE = 202,
  /** Text Type */
  CUSTOM_TEXT_TEMPLATE = 203,
  /** video type */
  CUSTOM_VIDEO_TEMPLATE = 204,
  /** page type */
  CUSTOM_WEB_TEMPLATE = 205,
  /** TTS type template */
  CUSTOM_TTS_TEMPLATE = 206,
  /** Portfolio data categorization label template */
  CUSTOM_CLASS_TEMPLATE = 207,
  /** Geometric shape tag template */
  CUSTOM_GEOMETRY_TEMPLATE = 208,
  /** Text segmentation template */
  CUSTOM_TEXT_SPLIT_TEMPLATE = 209,
  /** point cloud template */
  CUSTOM_POINT_CLOUD_TEMPLATE = 210,
  /** EA Enterprise Library Template */
  CUSTOM_EA_ENTERPRISE_TEMPLATE = 211,
  /** POI template */
  CUSTOM_POI_TEMPLATE = 212,
  /** Feishu Cloud Document Template Types */
  CUSTOM_LARK_DOC_TEMPLATE = 213,
  /** PF template */
  CUSTOM_PF_TEMPLATE = 214,
  /** DCC template */
  DCC = 301,
  /** DCC New Template */
  DccNew = 302,
  /** Neeko Type Template */
  Neeko = 1000,
}

export interface AuditNodeInfo {
  /** Node name */
  Name?: string;
  /** operator */
  Operator?: string;
  /** submission time */
  SubmitTime?: Int64;
  /** Remarks (modification suggestions, etc.) */
  Comment?: string;
  /** Node ID */
  NodeID?: number;
  /** Audit results, qualified or unqualified or not selected */
  AuditResult?: AuditResultEnum;
  /** Review status, pass or call back */
  AuditStatus?: AuditStatusEnum;
}

export interface DispatcherNode {
  /** Node name */
  Name?: string;
  /** Node ID, visible NodeID */
  ID?: number;
}

export interface ExportMsg {
  /** AIDP Task Queue ID */
  TaskID?: Int64;
  /** Project ID */
  ProjectID?: Int64;
  /** title unique identifier */
  ObjectID?: string;
  /** pass-through information */
  Penetrate?: string;
  /** original data source */
  RawData?: string;
  /** Label the results and the original data source to avoid the log being truncated due to excessive size
Label results */
  Answer?: string;
  /** Audit & Inspection and other personnel information */
  AuditNodeList?: Array<AuditNodeInfo>;
  /** timestamp */
  Timestamp?: Int64;
  /** Next Node */
  ToNode?: DispatcherNode;
  /** previous node */
  FromNode?: DispatcherNode;
  /** Topic Bid Delivery Time */
  CreateTime?: Int64;
  /** title callback unique identifier */
  UUID?: string;
  /** Is it abandoned? */
  IsDiscard?: boolean;
  /** AIDP Topic ID */
  ItemID?: Int64;
  /** template type */
  TemplateType?: TemplateType;
  /** Template subtype ID, the backend only stores unaware specific values (currently only POI template types have it) */
  TemplateSubType?: Int64;
  /** task version */
  TaskVersion?: number;
  /** Is it an updated answer? */
  IsUpdate?: boolean;
  /** Is it a direct submission? */
  IsDirectSubmit?: boolean;
  /** Whether to create a title event for bid submission */
  IsInit?: boolean;
  /** message type */
  OpType?: MsgOpType;
}
/* eslint-enable */
