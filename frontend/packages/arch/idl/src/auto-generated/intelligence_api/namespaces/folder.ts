/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as common_struct from './common_struct';

export type Int64 = string | number;

export enum FolderObjectType {
  /** Agent */
  Intelligence = 1,
  /** project */
  App = 2,
  /** plugin */
  Plugin = 3,
  /** Workflow */
  Workflow = 4,
  /** Knowledge Base */
  Knowledge = 5,
  /** Card */
  Card = 6,
  /** cue word */
  Prompt = 7,
  /** database */
  Database = 8,
  /** timbre */
  Voice = 9,
}

export interface FolderCreateData {
  folder_id?: string;
}

export interface FolderCreateRequest {
  /** Space ID */
  space_id: string;
  /** Folder type */
  type: common_struct.FolderType;
  /** Folder name */
  name: string;
  /** describe */
  description?: string;
  /** Parent folder id */
  parent_folder_id?: string;
}

export interface FolderCreateResponse {
  data?: FolderCreateData;
  code: Int64;
  msg: string;
}

export interface FolderDeleteRequest {
  folder_id: string;
}

export interface FolderDeleteResponse {
  code: Int64;
  msg: string;
}

export interface FolderMoveRequest {
  folder_id: string;
  /** Folder to move to */
  parent_folder_id: string;
}

export interface FolderMoveResponse {
  code: Int64;
  msg: string;
}

export interface FolderUpdateRequest {
  folder_id: string;
  /** Name, if not passed on, it will not be updated. */
  name?: string;
  /** Description, if not passed on, it will not be updated. */
  description?: string;
}

export interface FolderUpdateResponse {
  code: Int64;
  msg: string;
}

export interface GetFolderInfoByIdsRequest {
  /** Space ID */
  space_id?: string;
  /** Up to 50 at a time */
  folder_ids?: Array<string>;
  /** Whether to get the path */
  get_path_info?: boolean;
}

export interface GetFolderInfoByIdsResponse {
  data?: Record<Int64, common_struct.FolderInfo>;
  code: Int64;
  msg: string;
}

export interface GetFolderTreeRequest {
  /** Space ID */
  space_id: string;
  /** Folder type */
  type: common_struct.FolderType;
}

export interface GetFolderTreeResponse {
  /** Folder tree structure */
  data?: Array<common_struct.FolderInfo>;
  code: Int64;
  msg: string;
}

export interface GetObjectFolderRefData {
  folder_id?: Int64;
}

export interface MoveObjectInfo {
  object_id?: string;
  object_type?: FolderObjectType;
}

export interface MoveObjectToFolderRequest {
  dest_folder_id: string;
  folder_space_id: string;
  /** List of moved resources, maximum length 50 */
  move_objects?: Array<MoveObjectInfo>;
}

export interface MoveObjectToFolderResponse {
  code: Int64;
  msg: string;
}
/* eslint-enable */
