/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as marketplace_common from './marketplace_common';

export type Int64 = string | number;

export enum BotModType {
  SingleAgent = 1,
  MultiAgent = 2,
}

export enum Component {
  UsePlugin = 1,
  UseWorkFlow = 2,
  UseKnowledge = 3,
  UseVoice = 4,
  UseCard = 5,
  UseImageWorkflow = 6,
}

export enum ContentType {
  Markdown = 1,
}

export enum FavoriteListSource {
  /** Created by users themselves */
  CreatedByMe = 1,
}

/** feedCard */
export enum FeedType {
  /** Recommended user feed */
  Recommend = 0,
  /** Product release feed */
  ProductPublish = 1,
  /** Product update feed */
  ProductUpdate = 2,
  /** Official news feed */
  OfficialMessage = 3,
}

export enum InputType {
  String = 1,
  Integer = 2,
  Boolean = 3,
  Double = 4,
  List = 5,
  Object = 6,
}

export enum Origin {
  PluginAdmin = 1,
  BotUser = 2,
  MarketplaceAdmin = 3,
  /** Report recall and remove from shelves */
  ReportAdmin = 4,
  /** Store channel removal */
  StoreChannel = 5,
}

export enum PluginParamTypeFormat {
  ImageUrl = 1,
}

export enum PluginType {
  /** default */
  CLoudPlugin = 0,
  LocalPlugin = 1,
}

export enum PriceType {
  Free = 1,
  Paid = 2,
}

export enum ProductDraftStatus {
  /** default */
  Default = 0,
  /** Under review. */
  Pending = 1,
  /** approved */
  Approved = 2,
  /** The review failed. */
  Rejected = 3,
  /** Abandoned */
  Abandoned = 4,
}

export enum ProductEntityType {
  Bot = 1,
  Plugin = 2,
  /** Workflow = 3 , */
  SocialScene = 4,
  Project = 6,
  /** History workflow, no more in the future (abandoned) */
  WorkflowTemplate = 13,
  /** Historical image stream template, no more in the future (obsolete) */
  ImageflowTemplate = 15,
  /** Template universal identification, only used to bind template-related configurations, not bind products */
  TemplateCommon = 20,
  /** Bot template */
  BotTemplate = 21,
  /** workflow template */
  WorkflowTemplateV2 = 23,
  /** Image stream template (this type has been offline and merged into workflow, but historical data will be preserved, and the front end will be treated as workflow display) */
  ImageflowTemplateV2 = 25,
  /** project template */
  ProjectTemplate = 26,
  /** Coze token products, theoretically there will only be one */
  CozeToken = 50,
  /** Subscribe to the traffic package of credit, theoretically there will only be one */
  MsgCredit = 55,
  /** There is only one subscription product in theory */
  SubsMsgCredit = 60,
  Common = 99,
  /** Special Topics (Compatible with previous designs) */
  Topic = 101,
}

export enum ProductListingPeriodType {
  /** The last time it hit the shelves was 7 days ago */
  CreatedBefore7D = 1,
  /** The last time it was on the shelves was within 7 days. */
  UpdatedIn7D = 2,
  /** First hit shelves within 7 days */
  CreatedIn7D = 3,
}

export enum ProductListSource {
  /** recommended list page */
  Recommend = 1,
  /** personalized recommendation */
  CustomizedRecommend = 2,
}

export enum ProductListType {
  ByAdmin = 1,
  ByUser = 2,
}

export enum ProductPaidType {
  Free = 0,
  Paid = 1,
}

export enum ProductPublishMode {
  OpenSource = 1,
  ClosedSource = 2,
}

export enum ProductShareScene {
  StoreShareBotConversation = 1,
  HomtShareBotConversation = 2,
}

export enum ProductShareType {
  BotConversation = 1,
}

export enum ProductStatus {
  /** It never hit the shelves. */
  NeverListed = 0,
  Listed = 1,
  Unlisted = 2,
  Banned = 3,
}

export enum ProductUnlistType {
  ByAdmin = 1,
  ByUser = 2,
}

export enum ResourceType {
  /** Resources used for project products/templates */
  Plugin = 1,
}

export enum SocialSceneRoleType {
  Host = 1,
  PresetBot = 2,
  Custom = 3,
}

export enum SortType {
  Heat = 1,
  Newest = 2,
  /** collection time */
  FavoriteTime = 3,
  /** Correlation, only for search scenarios */
  Relative = 4,
}

export enum SubscribeSKUType {
  /** Automatic renewal */
  AutoRenew = 0,
  /** one-time subscription */
  OneOff = 1,
}

export enum TaskStatus {
  Running = 1,
  Succeed = 2,
  Failed = 3,
}

export enum TopicStatus {
  /** After creating a topic, set 0 first. */
  Init = 0,
  Listed = 1,
  Unlisted = 2,
}

export enum UIPreviewType {
  /** UI preview type, defining alignment UI Builder, currently used in Project
web page */
  Web = 1,
  /** mobile end */
  Client = 2,
}

export enum UnitType {
  YEAR = 1,
  MONTH = 2,
  WEEK = 3,
  DAY = 4,
  HOUR = 5,
  MINUTE = 6,
}

export enum UserActionType {
  UsedProduct = 1,
  /** Go to the product details page */
  ViewedProduct = 2,
}

export enum UserProductSource {
  /** Listed products posted by the user */
  Listed = 1,
  /** Products that users have used (such as chatbots) */
  Used = 2,
  /** Products visited by users */
  Viewed = 3,
  /** User Favorite Items */
  Favorite = 4,
  /** Products liked by users */
  Like = 5,
}

export enum VerifyStatus {
  /** Not certified */
  Pending = 1,
  /** Certification successful */
  Succeed = 2,
  /** Authentication failed */
  Failed = 3,
  /** Authenticating */
  InProgress = 4,
}

export enum WorkflowNodeType {
  /** start */
  Start = 1,
  /** end */
  End = 2,
  /** Large model */
  LLM = 3,
  /** plugin */
  Api = 4,
  /** code */
  Code = 5,
  /** Knowledge Base */
  Dataset = 6,
  /** selector */
  If = 8,
  /** Workflow */
  SubWorkflow = 9,
  /** variable */
  Variable = 11,
  /** database */
  Database = 12,
  /** message */
  Message = 13,
}

export interface ChargeSKUExtra {
  quantity?: string;
  is_self_define?: boolean;
}

export interface CommercialSetting {
  commercial_type: ProductPaidType;
}

export interface FavoriteEntity {
  entity_id?: string;
  entity_type?: ProductEntityType;
  name?: string;
  icon_url?: string;
  description?: string;
  /** Abandoned, using UserInfo */
  seller?: SellerInfo;
  /** Use to jump to the bot edit page */
  space_id?: string;
  /** Does the user have permissions to the space where the entity is located? */
  has_space_permission?: boolean;
  /** collection time */
  favorite_at?: string;
  product_extra?: FavoriteProductExtra;
  user_info?: UserInfo;
  plugin_extra?: FavoritePluginExtra;
}

export interface FavoritePluginExtra {
  tools?: Array<PluginTool>;
}

export interface FavoriteProductExtra {
  product_id?: string;
  product_status?: ProductStatus;
}

/** Feed card */
export interface FeedCard {
  /** Required fields, feed type */
  feed_type?: FeedType;
  /** Required field, feed body */
  feed_content?: FeedContent;
  /** Optional fields, feed generation time, millisecond timestamp */
  create_time?: string;
  /** API layer required fields, feed push optional fields, user information */
  user_info?: UserInfo;
  /** API layer required field, feed push optional field, feed_id */
  id?: string;
}

/** Feed body, message & quote must pass one of the two */
export interface FeedContent {
  /** Optional field, title */
  title?: RichText;
  /** Optional field, body - message */
  message?: RichText;
  /** Optional field, body-reference area */
  quote?: FeedQuote;
}

/** reference area */
export interface FeedQuote {
  /** Optional field, merchandise card */
  product_card?: Array<ProductFeedInfo>;
}

export interface ImageInfo {
  uri?: string;
  url?: string;
}

export interface ImageUploadToken {
  access_key_id?: string;
  secret_access_key?: string;
  session_token?: string;
  expired_time?: string;
  current_time?: string;
  service_id?: string;
  upload_host?: string;
}

export interface OpeningDialog {
  /** Bot opening line */
  content?: string;
}

export interface PluginTool {
  id?: string;
  name?: string;
  description?: string;
}

export interface ProductEntity {
  entity_type: ProductEntityType;
  /** optional */
  entity_id?: string;
  /** optional */
  entity_version?: string;
}

export interface ProductFeedInfo {
  /** Required field, product id */
  id?: string;
  /** Required field, product name */
  name?: string;
  /** Required field, product icon */
  icon_url?: string;
  /** Required fields, product description */
  desc?: string;
  /** Required fields, asset type */
  entity_type?: ProductEntityType;
  /** Optional fields, number of users, for bot, project */
  user_count?: number;
  /** Optional field, number of conversations, for bot */
  chat_conversation_count?: number;
  /** Optional field, number of favorites, for bot */
  favorite_count?: number;
  /** Optional field, bots usage, for plugins */
  bots_use_cout?: number;
  /** Optional field, number of copies, for workflow & imageflow */
  duplicate_count?: number;
  /** Optional field, usage number, for project */
  use_count?: number;
}

/** Rich Text Type */
export interface RichText {
  /** Required field, rich text data type */
  content_type?: ContentType;
  /** Required fields, data content */
  text?: string;
}

export interface SellerInfo {
  user_id?: string;
  user_name?: string;
  avatar_url?: string;
}

export interface SKUAttrInfo {
  AttrKey?: string;
  AttrValue?: string;
}

export interface SKUEntity {
  sku_id?: string;
  attrs?: Array<SKUAttrInfo>;
  prices?: Array<marketplace_common.Price>;
  /** Subscription products will only be available. */
  subscription_info?: SubscriptionExtra;
  /** SKU name, for display */
  sku_title?: string;
}

/** auto-renew subscription */
export interface SubscriptionAutoRenewSKU {
  /** buying cycle */
  billing_period?: SubscriptionPeriod;
  /** The number of subscription cycles (trail period and intro period are also counted), in a Subscription Period. After the renewal exceeds this number of times, the renewal will not continue. 0 or no input means no limit. */
  billing_period_count?: number;
  /** Discount period */
  trial_period?: SubscriptionPeriod;
  /** Number of discount periods (minimum 1) */
  trial_period_count?: number;
  /** grace period */
  grade_period?: SubscriptionPeriod;
}

/** The sku information of subscription products needs to be separated from the sku of ordinary products. */
export interface SubscriptionExtra {
  subs_sku_type?: SubscribeSKUType;
  auto_renew_sku?: SubscriptionAutoRenewSKU;
  one_off_sku?: SubscriptionOneOffSKU;
  benefit_ids?: Array<Int64>;
  /** subscription level */
  subscription_level?: number;
}

/** one-time subscription */
export interface SubscriptionOneOffSKU {
  billig_period?: SubscriptionPeriod;
}

export interface SubscriptionPeriod {
  /** Time period unit, YEAR/MONTH/DAY/HOUR/MINUTE/WEEK */
  unit?: string;
  /** Time period length, unit is a unit */
  length?: number;
  unit_type?: UnitType;
}

export interface UserInfo {
  user_id?: string;
  user_name?: string;
  name?: string;
  avatar_url?: string;
  user_label?: UserLabel;
  follow_type?: marketplace_common.FollowType;
}

export interface UserLabel {
  label_id?: string;
  label_name?: string;
  icon_uri?: string;
  icon_url?: string;
  jump_link?: string;
}
/* eslint-enable */
