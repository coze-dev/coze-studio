/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as bot_operation_common from './bot_operation_common';
import * as common from './common';
import * as fulfill_common from './fulfill_common';

export type Int64 = string | number;

/** The status of issuing reward tasks */
export enum DistRewardTaskStatus {
  Unknown = 0,
  /** Under review. */
  InReview = 1,
  /** Rejected */
  Rejected = 2,
  /** Passed */
  Approved = 3,
  /** Withdrawn */
  Canceled = 4,
}

export enum DistRewardType {
  Unknonw = 0,
  /** AddMessageCreditsRewardStruct structure to be passed */
  MessageCredits = 1,
  /** It is not supported for the time being, and it will be migrated later. */
  CozeToken = 2,
  /** Refund application, reuse approval task */
  Refund = 3,
}

export interface AddCozeTokenStruct {
  amount: Int64;
}

export interface AddMessageCreditsRewardStruct {
  amount_per_day: Int64;
  active_days: Int64;
}

export interface AdminCancelDistRewardTaskRequest {
  /** primary key */
  id: string;
}

export interface AdminCancelDistRewardTaskResponse {
  code?: number;
  message?: string;
}

export interface AdminCreateDistRewardTaskRequest {
  /** To whom? */
  to_uid_list: Array<string>;
  /** Types of rewards issued */
  dist_reward_type: DistRewardType;
  /** The specific content of the reward will be issued. */
  reward_detail: RewardDetail;
  /** reason */
  reason: string;
}

export interface AdminCreateDistRewardTaskResponse {
  code?: number;
  message?: string;
  data?: AdminCreateDistRewardTaskResponseData;
}

export interface AdminCreateDistRewardTaskResponseData {
  /** Task primary key id */
  id?: string;
}

export interface AdminListDistRewardTaskFulfillmentRequest {
  /** Task primary key id */
  task_id: string;
}

export interface AdminListDistRewardTaskFulfillmentResponse {
  code?: number;
  message?: string;
  data?: AdminListDistRewardTaskFulfillmentResponseData;
}

export interface AdminListDistRewardTaskFulfillmentResponseData {
  /** performance order list */
  fulfillment_list?: Array<Fulfillment>;
}

export interface AdminListDistRewardTaskRequest {
  /** Page number, > = 1 */
  page: Int64;
  /** Number of pages, 1-200 */
  count: Int64;
  /** state */
  status_in?: Array<DistRewardTaskStatus>;
  /** Creation time start, seconds timestamp */
  created_at_begin?: Int64;
  /** Which uid did you send it to? */
  uid?: string;
  /** Whether to disable environmental isolation */
  disable_env?: boolean;
  dist_reward_type?: DistRewardType;
}

export interface AdminListDistRewardTaskResponse {
  code?: number;
  message?: string;
  data?: AdminListDistRewardTaskResponseData;
}

export interface AdminListDistRewardTaskResponseData {
  /** task list */
  task_list?: Array<DistRewardTask>;
  /** total */
  total?: Int64;
}

/** Dist Reward task entity */
export interface DistRewardTask {
  /** primary key */
  id?: string;
  /** Who created it? */
  op_user?: bot_operation_common.ByteDanceUser;
  /** Who approved it? */
  approval_user?: bot_operation_common.ByteDanceUser;
  /** Types of rewards issued */
  dist_reward_type?: DistRewardType;
  /** The specific content of the reward will be issued. */
  reward_detail?: RewardDetail;
  /** How many people are given in total? */
  user_count?: Int64;
  /** state */
  status?: DistRewardTaskStatus;
  /** reason */
  reason?: string;
  /** Creation time, seconds timestamp */
  created_at?: Int64;
  /** Approval instance code */
  approval_instance_code?: string;
  /** Data belongs to the environment, empty indicates the base environment, otherwise it is a multi-environment */
  env?: string;
  /** Uid, list */
  uid_list?: Array<string>;
}

export interface Fulfillment {
  /** primary key */
  id?: string;
  /** entity type */
  entity_type?: common.EntityType;
  /** state */
  status?: fulfill_common.FulfillmentStatus;
  /** Creation time, seconds timestamp */
  created_at?: Int64;
  /** Who was it sent to? */
  to_user?: bot_operation_common.PassportUser;
}

export interface RefundStruct {
  OrderID?: string;
  RefundAmount?: Int64;
  Currency?: string;
  Reason?: string;
  GoodsTypeDisplay?: string;
  OrderType?: bot_operation_common.OrderType;
  RefundSubsExpiryTime?: string;
  IsSkipCheck?: boolean;
}

export interface RewardDetail {
  /** DistRewardType for MessageCredits needs to pass this structure */
  add_message_credits_reward_struct?: AddMessageCreditsRewardStruct;
  /** DistRewardType is CozeToken, you need to pass this structure */
  add_coze_token_struct?: AddCozeTokenStruct;
  RefundStruct?: RefundStruct;
}
/* eslint-enable */
