/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as automation from './automation';
import * as flow_devops_fornaxob_fieldfilter from './flow_devops_fornaxob_fieldfilter';
import * as flow_devops_fornaxob_common from './flow_devops_fornaxob_common';

export type Int64 = string | number;

export interface ApplyStatusCallBackReq {
  workflowID: string;
  spaceID: string;
  status: string;
  'x-jwt-token'?: string;
}

export interface ApplyStatusCallBackResp {
  code?: Int64;
  message?: string;
}

export interface CreateTaskReq {
  space_id: string;
  task: automation.Task;
}

export interface CreateTaskResp {
  taskID?: string;
}

export interface DeleteTaskReq {
  task_id: string;
}

export interface DeleteTaskResp {}

export interface GetFilterOptionsReq {
  objectType: automation.ObjectType;
  /** When the parameter is not provided or false and builtInFilter is empty, the option corresponding to any builtinFilter of the object is returned
When the parameter is true and builtInFilter is empty, a list of supported builtinFilters is returned */
  apiV2?: boolean;
  builtInFilter?: automation.BuiltinSpanFilterType;
}

export interface GetFilterOptionsResp {
  options?: Array<automation.TagFilterOption>;
  objFilterOptions?: Array<automation.TagFilterOption>;
  builtInOptions?: Array<automation.BuiltinSpanFilterType>;
}

export interface GetTaskDetailReq {
  task_id: string;
  space_id: string;
}

export interface GetTaskDetailResp {
  task?: automation.Task;
}

export interface GetTaskStatusDetailReq {
  task_id: string;
}

export interface GetTaskStatusDetailResp {
  type?: automation.TaskType;
  spanToDatasetStatus?: automation.SpanToDatasetStat;
  SpanEvalRunStatus?: automation.SpanEvalStat;
  batchExecuteCaseStatus?: automation.BatchExecAutoUseCaseStat;
}

export interface ListBPMApproversReq {
  /** Permission group key */
  group_key: string;
}

export interface ListBPMApproversResp {
  approvers?: Array<string>;
  code?: Int64;
  message?: string;
}

export interface ListTasksBySpaceReq {
  space_id: string;
  taskID?: string;
  taskName?: string;
  taskType?: Array<automation.TaskType>;
  taskStatuses?: Array<automation.TaskStatusType>;
  createdBy?: string;
  /** Start with null, scroll to nextCursor in resp */
  cursor?: string;
  /** Default is 20. */
  pageSize?: string;
  /** The default is -1. If it is not 0, it means to return in reverse order of update time, otherwise it will be returned in reverse order of creation time. Scroll into nextUpdatedAt in resp. */
  updatedAtLTE?: string;
}

export interface ListTasksBySpaceResp {
  tasks?: Array<automation.Task>;
  nextCursor?: string;
  hasMore?: boolean;
  nextUpdatedAt?: string;
}

export interface Rule2TraceQueryReq {
  space_id: string;
  /** Filter criteria for automated tasks, the fields in them may not be used */
  rule?: automation.Rule;
}

export interface Rule2TraceQueryResp {
  filters?: Record<string, flow_devops_fornaxob_fieldfilter.FieldFilter>;
  platformType?: flow_devops_fornaxob_common.PlatformType;
}

export interface StopTaskReq {
  task_id: string;
}

export interface StopTaskResp {}

export interface TaskBatchExecCasesStatus {
  taskID: string;
  allCasesDeleted?: boolean;
  allCasesFinished?: boolean;
}

export interface TaskSpanToDatasetStatus {
  taskID: string;
  datasetDeleted?: boolean;
  datasetLimitHit?: boolean;
}

export interface UpdateTaskReq {
  task_id: string;
  task?: automation.Task;
}

export interface UpdateTaskResp {}
/* eslint-enable */
