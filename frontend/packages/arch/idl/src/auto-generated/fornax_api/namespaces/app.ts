/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as flow_devops_evaluation_entity from './flow_devops_evaluation_entity';
import * as flow_devops_evaluation_object from './flow_devops_evaluation_object';

export type Int64 = string | number;

export enum AppClientEnvType {
  Undefined = 0,
  AllEnv = 1,
  /** Return to PPE and Online clients */
  PPEAndOnline = 2,
  /** Return to BOE Client Only */
  BOEOnly = 3,
}

export enum AppClientType {
  Undefined = 0,
  TCE = 1,
}

export enum AppType {
  Undefined = 0,
  TCE = 1,
  CozeBot = 2,
}

export enum AppV2Type {
  Undefined = 0,
  PSM = 1,
  FullCodeFlow = 2,
}

export interface App {
  id?: string;
  spaceID?: string;
  /** Application type, such as TCE */
  type?: AppType;
  /** Unique in space. For apps of type TCE, its uid is psm; for apps of type coze_bot, its uid is BotID */
  uid?: string;
  /** The application of TCE type defaults to PSM and can be modified; the application of CozeBot type cannot be modified */
  name?: string;
  description?: string;
  ownerIDs?: Array<string>;
  /** Avatar, currently only displayed and used by cozeBot. */
  iconURL?: string;
  /** founder */
  createdBy?: string;
  /** Update Person */
  updatedBy?: string;
  /** creation time */
  createdAt?: string;
  /** update time */
  updatedAt?: string;
}

/** AppClient represents the client side that accesses the application data, typically a TCE service using the Fornax SDK. */
export interface AppClient {
  id?: Int64;
  spaceID?: Int64;
  appID?: Int64;
  /** TCE type client, whose value is PSM */
  appUID?: string;
  /** Lane env */
  env?: string;
  /** cluster */
  cluster?: string;
  /** TCE type client with a value of ${PSM}: ${env}: ${cluster} */
  identity?: string;
  labels?: Record<string, string>;
  /** founder */
  createdBy?: string;
  /** creation time */
  createdAt?: Int64;
  /** update time */
  updatedAt?: Int64;
}

export interface AppEvaluationInfo {
  callbackType: flow_devops_evaluation_entity.CallbackType;
  rpcCallbackObjectParams?: flow_devops_evaluation_object.RPCCallbackObjectParams;
  faasCallbackObjectParams?: flow_devops_evaluation_object.FaasCallbackObjectParams;
}

export interface AppV2 {
  id?: string;
  spaceID?: string;
  type?: AppV2Type;
  entityID?: string;
  name?: string;
  description?: string;
  version?: string;
  psm?: string;
  regions?: Array<string>;
  appEvaluationInfo?: AppEvaluationInfo;
  /** founder */
  createdBy?: string;
  /** Update Person */
  updatedBy?: string;
  /** creation time */
  createdAt?: string;
  /** update time */
  updatedAt?: string;
}

/** ClientEvaluationSetting client evaluation configuration */
export interface ClientEvaluationSetting {
  /** Whether to write to the dataset (enabled by default) */
  enableWriteToDataSet: boolean;
  /** Dataset ID */
  dataSetID?: string;
  /** sample rate */
  samplingRate?: number;
  /** upper limit of sampling */
  samplingLimit?: string;
  /** Sampling start time */
  fromMillis?: string;
  /** Sampling end time */
  toMillis?: string;
}
/* eslint-enable */
