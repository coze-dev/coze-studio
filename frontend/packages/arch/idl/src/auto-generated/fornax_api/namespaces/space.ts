/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as auth from './auth';

export type Int64 = string | number;

export enum GrayReleaseStrategy {
  /** Do not turn on grey release */
  None = 0,
  /** Instance grey release */
  InstanceGrayRelease = 1,
}

/** Spatial character type */
export enum SpaceRoleType {
  Undefined = 0,
  /** person in charge */
  Owner = 1,
  /** developer */
  Developer = 2,
  /** tester */
  Tester = 3,
}

/** space type */
export enum SpaceType {
  Undefined = 0,
  Personal = 1,
  Team = 2,
  /** official space */
  Official = 3,
}

export interface ByteTreeNode {
  id?: string;
  name?: string;
  i18nName?: string;
  path?: string;
  i18nPath?: string;
  levelID?: Int64;
  isLeaf?: boolean;
  type?: string;
}

export interface CozeBotFeatureConfig {
  enabled: boolean;
  botIDAllowList?: Array<Int64>;
}

/** Space configuration */
export interface FeatureConfig {
  /** Space ID of the enabled feature */
  EnabledSpaceIDList?: Array<Int64>;
  /** Is it fully turned on? */
  EnableAll?: boolean;
}

export interface ReleaseApprovalConfig {
  /** Whether to open the review */
  enable?: boolean;
  /** Grey release strategy */
  gray_release_strategy?: GrayReleaseStrategy;
}

/** space */
export interface Space {
  /** Space ID */
  id?: Int64;
  /** space name */
  name?: string;
  /** spatial description */
  description?: string;
  /** space type */
  space_type?: SpaceType;
  /** Space creator */
  creator?: string;
  /** creation time */
  create_tsms?: Int64;
  /** update time */
  update_tsms?: Int64;
  /** release moderation configuration */
  release_approval_config?: ReleaseApprovalConfig;
  /** Spatial sources */
  space_origin?: string;
  /** ByteTree Node ID */
  tree_node_id?: string;
  /** Specific configuration content */
  trace_config?: TraceConfig;
  /** List of service accounts under the space */
  accounts?: Array<auth.ServiceAccount>;
}

/** space member */
export interface SpaceMember {
  /** Space ID */
  space_id?: Int64;
  /** member */
  member?: auth.AuthPrincipal;
  /** Spatial character type */
  space_role_type?: SpaceRoleType;
}

/** observation configuration */
export interface TraceConfig {
  /** Whether to encrypt trace default false */
  trace_encrypt?: boolean;
  /** TTL days, the default is 7, the current legal value is 7/30/90 */
  ttl?: number;
}
/* eslint-enable */
