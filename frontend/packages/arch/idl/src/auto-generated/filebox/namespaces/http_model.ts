/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as base from './base';
import * as file from './file';

export type Int64 = string | number;

export interface FileListRequest {
  /** Query file type: 1-Images; 2-Document */
  file_type?: number;
  /** resource belongs to botId */
  bid: string;
  /** File name, fuzzy search */
  file_name?: string;
  /** Query start timestamp, in seconds */
  begin_time?: string;
  /** Query endtimestamp, in seconds */
  end_time?: string;
  /** The number of paginated pages, the default 0 is not passed. */
  page_num?: number;
  /** Paging size, no default 10 */
  page_size?: number;
  /** Channel ID */
  connector_id: string;
  Base?: base.Base;
}

export interface FileListResponse {
  /** Total number of eligible queries */
  total_count?: number;
  /** query result */
  list?: Array<FileVO>;
  /** After connecting to agw, the status_code and status_message in BaseResp will be injected */
  code: number;
  msg: string;
  BaseResp: base.BaseResp;
}

export interface FileVO {
  /** File resource official URL */
  MainURL?: string;
  /** [Picture only] thumbnail url */
  ThumbnailURL?: string;
  /** file name */
  FileName?: string;
  /** File URI (unique resource identifier) */
  Uri?: string;
  /** File id (unique device identifier) */
  FileID?: string;
  /** file format */
  Format?: string;
  /** File Type: 1-Images; 2-Document */
  Type?: number;
  /** file creation time */
  CreateTime?: string;
  /** file update time */
  UpdateTime?: string;
  /** File size - bytes */
  FileSize?: string;
}

export interface UploadFilesRequest {
  /** resource belongs to botId */
  bid: string;
  /** resource connectorId */
  cid: string;
  /** business type */
  biz_type: string;
  /** List of source file URLs */
  source_files?: Array<file.SourceFileInfo>;
  Base?: base.Base;
}

export interface UploadFilesResponse {
  /** number of successes */
  SuccessNum?: number;
  /** number of failures */
  FailNum?: number;
  /** Status after file upload */
  DestFiles?: Array<file.DestFileInfo>;
  /** After connecting to agw, the status_code and status_message in BaseResp will be injected */
  code: number;
  msg: string;
  BaseResp: base.BaseResp;
}
/* eslint-enable */
