/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

export type Int64 = string | number;

export enum ModelCacheType {
  PrefixCache = 1,
}

export enum ModelParamType {
  Float = 1,
  Int = 2,
  Boolean = 3,
  String = 4,
}

export enum ModelProvider {
  GptOpenApi = 1,
  GptEngine = 2,
  MaaS = 3,
  QianFan = 4,
  BytedLLMServer = 5,
}

export enum ModelTagKeyID {
  /** user rights and interests */
  UserRights = 1,
  /** model type */
  ModelType = 2,
  /** Model Features */
  ModelFeatures = 3,
  /** Model support function */
  ModelCapabilities = 4,
  /** Model application scenario */
  ModelScene = 5,
  /** custom label */
  CustomTag = 6,
  /** Model manufacturer */
  ModelManufacturer = 7,
  /** parameter quantity */
  ParameterQuantity = 8,
  /** Volcano Ark Tag */
  MaasTag = 9,
  /** Model series */
  ModelSeries = 10,
  /** offline date */
  OfflineDate = 11,
  /** replacement model */
  ReplaceModel = 12,
  /** changelog */
  UpdateLog = 13,
  /** Describe in one sentence */
  BriefDescription = 14,
  /** paid label */
  PaidTag = 15,
  /** model runtime capability */
  ModelAbility = 16,
}

export interface ModelEntity {
  /** Model ID */
  ModelID?: string;
  /** Model name */
  ModelName?: string;
  /** Model shunting rule */
  Targets?: Array<ModelRuleTarget>;
  biz?: number;
  /** creator */
  CreaterEmail?: string;
  /** Last Modifier */
  UpdaterEmail?: string;
  /** model creation time */
  CreateTime?: Int64;
  /** model modification time */
  UpdateTime?: Int64;
}

export interface ModelParameter {
  /** Configuration fields, such as max_tokens */
  name?: string;
  /** type */
  type?: ModelParamType;
  /** Is it required? */
  is_required?: boolean;
  /** Numerical type parameters, the minimum value allowed to be set */
  min?: string;
  /** Numerical type parameter, the maximum value allowed to be set */
  max?: string;
  /** Precision of float type parameters */
  precision?: number;
  /** Default values for different styles of parameters */
  default_value?: Record<string, string>;
  /** Enumeration values such as response_format support text, markdown, json */
  options?: Array<string>;
  /** Whether to automatically fix this parameter to the range [min, max], the default is false */
  auto_fix?: boolean;
}

export interface ModelRuleTarget {
  /** Model metadata ID to hit */
  ModelMetaID?: string;
  /** The traffic ratio interval in the dead begins */
  RangeStart?: Int64;
  /** The end of the traffic ratio interval in the dead */
  RangeEnd?: Int64;
  /** Comma splicing of the list of terrible usernames in */
  ConnectorUIDs?: Array<string>;
}
/* eslint-enable */
