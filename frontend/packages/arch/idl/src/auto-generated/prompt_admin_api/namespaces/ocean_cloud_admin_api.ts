/*
 * Copyright 2025 coze-dev Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import * as model_manage from './model_manage';
import * as copilot_common from './copilot_common';
import * as copilot from './copilot';

export type Int64 = string | number;

export enum BussinessType {
  /** model configuration */
  model_config = 1,
  /** Chain task configuration */
  chain_info = 2,
}

export enum DeployStatusEnum {
  /** success */
  Success = 1,
  /** In release */
  Onlining = 2,
  /** Approving */
  Approving = 3,
  /** fail */
  Failed = 4,
}

export enum EnumType {
  /** model version */
  model_version = 1,
  /** Model family */
  model_family = 2,
  /** Model scene */
  model_scene = 3,
  /** Model Execution Agent */
  model_proxy = 4,
  /** Model icon path */
  model_icon_path = 5,
}

export interface ApplyRoleData {
  /** Role name */
  role_name?: string;
  /** Description of role capabilities */
  role_desc?: string;
  /** Application link for role */
  role_apply_url?: string;
  /** role kani key */
  role_key?: string;
  /** Whether you already have the role, when the user already has it, you can grey out its related information to make the user unselectable */
  has_role?: boolean;
}

export interface BindSceneModelData {
  model_list?: Array<ModelData>;
  redirect_uri?: string;
}

export interface CancelOpBotsModelScheduleTaskReq {
  scheduleTaskId?: string;
}

export interface CancelOpBotsModelScheduleTaskResp {
  code?: number;
  msg?: string;
}

export interface CasLoginReq {
  callback?: string;
}

export interface CasLoginResp {}

export interface CommonEnumData {
  /** Key is the corresponding id, value is the Chinese description of id */
  enum_data?: Array<EnumData>;
  redirect_uri?: string;
}

export interface CreateChainInfoDeploymentRequest {
  Operator: string;
  TaskId: Int64;
  TaskName: string;
  OldVersion: Int64;
  NewVersion: Int64;
  Cookie: string;
  FromOversea?: boolean;
  AppOwner?: string;
}

export interface CreateChainInfoDeploymentResponse {
  code?: number;
  msg?: string;
  url: string;
}

export interface CreateModelDeploymentRequest {
  Operator: string;
  ModelId: Int64;
  ModelName?: string;
  OldModelMetas?: Array<model_manage.ModelRuleTarget>;
  NewModelMetas?: Array<model_manage.ModelRuleTarget>;
}

export interface CreateModelDeploymentResponse {
  code?: number;
  msg?: string;
  url: string;
}

export interface CreateModelEntityData {
  /** ID of the model */
  model_id: Int64;
  redirect_uri?: string;
}

export interface CreateModelEntityReq {
  /** Large model name model_arch */
  model_name: string;
  Referer?: string;
  /** model shunting */
  targets: Array<model_manage.ModelRuleTarget>;
  biz?: number;
  'Ocean-Jwt-Token'?: string;
}

export interface CreateModelEntityResp {
  code?: number;
  msg?: string;
  data: CreateModelEntityData;
}

export interface CreateModelMetaData {
  /** ID of the model */
  model_id: Int64;
  redirect_uri?: string;
}

export interface CreateModelMetaReq {
  /** Large model name model_arch */
  model_name: string;
  /** Classification where the big model is located */
  family: copilot_common.ModelFamily;
  Referer?: string;
  /** Version corresponding to the large model (currently only applicable to GPT) */
  version?: copilot_common.ModelVersion;
  /** Model description, minimum 5 bytes, maximum 2048 */
  desc: string;
  show_name?: string;
  icon?: string;
  /** Model capability description */
  capability?: copilot.Capability;
  /** Model capacity constraints */
  quota?: copilot.ModelQuota;
  /** Model timeouts and retries, etc */
  model_config?: copilot.ModelConf;
  /** Model template configuration */
  prompt_conf?: copilot.PromptConf;
  /** historical compatibility field */
  legacy_fields?: copilot.LegacyFields;
  /** model parameters */
  parameters?: Array<copilot.ModelParameter>;
  display_properties?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface CreateModelMetaResp {
  code?: number;
  msg?: string;
  data: CreateModelMetaData;
}

export interface CreateModelWithSceneData {
  SceneIDMap?: Partial<Record<copilot_common.ModelListScene, Int64>>;
  redirect_uri?: string;
}

export interface CreateModelWithSceneReq {
  /** Scene ID */
  scene: Array<copilot_common.ModelListScene>;
  /** Model ID */
  model_id: string;
  Referer?: string;
  /** Display name (expand a Starling field if you need to support i18n later) */
  show_name: string;
  /** sort */
  ranking: number;
  /** Icon, priority overrides icon_url under model_meta */
  icon?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface CreateModelWithSceneResp {
  code?: number;
  msg?: string;
  data: CreateModelWithSceneData;
}

export interface CreateOpsBotsModelShowFamilyRelatedModelReq {
  showFamilyId?: string;
  modelId?: string;
}

export interface CreateOpsBotsModelShowFamilyRelatedModelResp {
  code?: number;
  msg?: string;
}

export interface CreateOpsBotsModelShowFamilyReq {
  icon?: string;
  name?: string;
  ranking?: number;
}

export interface CreateOpsBotsModelShowFamilyResp {
  code?: number;
  msg?: string;
}

export interface DeleteModelMetaData {
  redirect_uri?: string;
}

export interface DeleteModelMetaReq {
  /** Model ID */
  model_id?: string;
  Referer?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface DeleteModelMetaResp {
  code?: number;
  msg?: string;
  data: DeleteModelMetaData;
}

export interface DeleteModelWithSceneData {
  redirect_uri?: string;
}

export interface DeleteModelWithSceneReq {
  scene: copilot_common.ModelListScene;
  model_id: string;
  Referer?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface DeleteModelWithSceneResp {
  code?: number;
  msg?: string;
  data: DeleteModelWithSceneData;
}

export interface DeleteOpsBotsModelShowFamilyRelatedModelReq {
  showFamilyId?: string;
  modelId?: string;
}

export interface DeleteOpsBotsModelShowFamilyRelatedModelResp {
  code?: number;
  msg?: string;
}

export interface DeleteOpsBotsModelShowFamilyReq {
  id?: string;
}

export interface DeleteOpsBotsModelShowFamilyResp {
  code?: number;
  msg?: string;
}

export interface DeploymentDetail {
  Id: string;
  Operator: string;
  BizType: BussinessType;
  Status: DeployStatusEnum;
  Url: string;
  Title: string;
  /** Business unique identifiers, such as model IDs */
  BizId: string;
  Remark?: string;
  extra?: Record<string, string>;
}

export interface EnumData {
  id?: number;
  value?: string;
}

export interface GetBindSceneModelReq {
  Referer?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface GetBindSceneModelResp {
  code?: number;
  msg?: string;
  data: BindSceneModelData;
}

export interface GetCommonEnumDataReq {
  /** enumeration value type */
  enum_type?: EnumType;
  Referer?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface GetCommonEnumDataResp {
  code?: number;
  msg?: string;
  data: CommonEnumData;
}

export interface GeteModelMetaTemplateResp {
  code?: number;
  msg?: string;
  data: ModelMetaTemplateData;
}

export interface GetModelListWithSceneData {
  /** List of models under the scene, in order according to the Ranking display in ascending order configured in the background */
  ModelList?: Array<ModelSceneData>;
  redirect_uri?: string;
}

export interface GetModelListWithSceneReq {
  scene: copilot_common.ModelListScene;
  /** Does the model need to be deleted? */
  has_delete_model?: boolean;
  Referer?: string;
  /** Fuzzy search based on model_name */
  model_name?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface GetModelListWithSceneResp {
  code?: number;
  msg?: string;
  data: GetModelListWithSceneData;
}

export interface GetModelMetaListData {
  model_list?: Array<ModelData>;
  next_cursor?: Int64;
  total?: Int64;
  redirect_uri?: string;
}

export interface GetModelMetaListReq {
  /** Model ID, pull the full amount without passing it on. */
  model_id?: string;
  Referer?: string;
  /** The specified state is not passed. The default is that all states are obtained (including deletion). */
  status?: Array<copilot_common.ModelStatus>;
  /** Fuzzy search based on model_name */
  model_name?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface GetModelMetaListResp {
  code?: number;
  msg?: string;
  data: GetModelMetaListData;
}

export interface GetModelMetaTemplateReq {
  Referer?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface GetOpBotsModelDetailData {
  modelId?: string;
  icon?: string;
  description?: string;
  showFamilyId?: string;
  modelParamList?: Array<model_manage.ModelParameter>;
  canUpdate?: boolean;
  modelMetaId?: string;
  iconUrl?: string;
  tokenLimit?: number;
  hotFlag?: number;
  showFamilyName?: string;
  paidTags?: Array<string>;
  modelRuntimeTag?: ModelRuntimeTag;
  sceneList?: Array<OpBotsModelModelScene>;
  ranking?: number;
  modelName?: string;
  modelArch?: string;
}

export interface GetOpBotsModelDetailReq {
  modelId?: string;
}

export interface GetOpBotsModelDetailResp {
  code?: number;
  msg?: string;
  data?: GetOpBotsModelDetailData;
}

export interface GetOpBotsModelListData {
  rowList?: Array<GetOpBotsModelListRow>;
  total?: number;
}

export interface GetOpBotsModelListReq {
  scene?: copilot_common.ModelListScene;
}

export interface GetOpBotsModelListResp {
  code?: number;
  msg?: string;
  data?: GetOpBotsModelListData;
}

export interface GetOpBotsModelListRow {
  modelId?: string;
  modelName?: string;
  icon?: string;
  iconUrl?: string;
  tokenLimit?: number;
  modelArch?: string;
  modelUpdatedAt?: string;
  sceneList?: Array<OpBotsModelModelScene>;
  ranking?: number;
}

export interface GetOpsBotsDefaultModelDetailData {
  modelId?: string;
  icon?: string;
  name?: string;
  iconUrl?: string;
  create_user?: string;
  create_at_unix?: string;
  create_user_avatar_url?: string;
}

export interface GetOpsBotsDefaultModelDetailReq {}

export interface GetOpsBotsDefaultModelDetailResp {
  code?: number;
  msg?: string;
  data?: GetOpsBotsDefaultModelDetailData;
}

export interface GetOpsBotsHotModelListData {
  rowList?: Array<GetOpsBotsHotModelListRow>;
  total?: number;
  showFamilyList?: Array<HotModelShowFamily>;
}

export interface GetOpsBotsHotModelListReq {}

export interface GetOpsBotsHotModelListResp {
  code?: number;
  msg?: string;
  data?: GetOpsBotsHotModelListData;
}

export interface GetOpsBotsHotModelListRow {
  modelId?: string;
  modelName?: string;
  icon?: string;
  iconUrl?: string;
  hotFlag?: number;
  showFamilyId?: string;
  ranking?: number;
}

export interface GetOpsBotsModelInfoData {
  modelMap?: Record<Int64, GetOpsBotsModelInfoDataModel>;
  showFamilyMap?: Record<Int64, ModelShowFamily>;
  defaultModelId?: Int64;
}

export interface GetOpsBotsModelInfoDataModel {
  modelId?: Int64;
  hotRanking?: number;
  showFamilyId?: Int64;
  hotFlag?: number;
}

export interface GetOpsBotsModelShowFamilyListData {
  rowList?: Array<ModelShowFamily>;
  total?: number;
  modelList?: Array<GetOpsBotsModelShowFamilyModelListRow>;
}

export interface GetOpsBotsModelShowFamilyListReq {}

export interface GetOpsBotsModelShowFamilyListResp {
  code?: number;
  msg?: string;
  data?: GetOpsBotsModelShowFamilyListData;
}

export interface GetOpsBotsModelShowFamilyModelListRow {
  modelId?: string;
  modelName?: string;
  icon?: string;
  iconUrl?: string;
  showFamilyId?: string;
}

export interface GetOpsBotsModelShowFamilyRelatedModelListData {
  rowList?: Array<GetOpsBotsModelShowFamilyRelatedModelListRow>;
  total?: number;
}

export interface GetOpsBotsModelShowFamilyRelatedModelListReq {
  showFamilyId?: string;
}

export interface GetOpsBotsModelShowFamilyRelatedModelListResp {
  code?: number;
  msg?: string;
  data?: GetOpsBotsModelShowFamilyRelatedModelListData;
}

export interface GetOpsBotsModelShowFamilyRelatedModelListRow {
  modelId?: string;
  modelName?: string;
  icon?: string;
  iconUrl?: string;
}

export interface GetRoleListForModelData {
  role_data?: Array<ApplyRoleData>;
  redirect_uri?: string;
}

export interface GetRoleListForModelReq {
  Referer?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface GetRoleListForModelResp {
  code?: number;
  msg?: string;
  data: GetRoleListForModelData;
}

export interface HotModelShowFamily {
  id?: string;
  icon?: string;
  iconUrl?: string;
  name?: string;
  ranking?: number;
}

/** Use api.http_code to annotate http_code, use http_message to annotate the returned message
  */
export interface HttpRequestParams {
  Referer?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface ModelData {
  /** Model ID */
  model_id?: string;
  /** Large model name model_arch */
  model_name?: string;
  /** Classification where the big model is located */
  family?: copilot_common.ModelFamily;
  /** Version corresponding to the large model (currently only applicable to GPT) */
  version?: copilot_common.ModelVersion;
  /** describe */
  desc?: string;
  /** Model capability description */
  capability?: copilot.Capability;
  /** Model capacity constraints */
  quota?: copilot.ModelQuota;
  /** Model timeouts and retries, etc */
  model_config?: copilot.ModelConf;
  prompt_conf?: copilot.PromptConf;
  /** historical compatibility field */
  legacy_fields?: copilot.LegacyFields;
  /** Status 1 In Use 10 Delete */
  status?: copilot_common.ModelStatus;
  /** The name corresponding to the family will be displayed directly after the front end is obtained. */
  family_name?: string;
  show_name?: string;
  icon_url?: string;
  icon?: string;
  /** When fetched through the scene, the sorting is returned */
  ranking?: number;
  /** model parameters */
  parameters?: Array<copilot.ModelParameter>;
  display_properties?: string;
  /** creator information */
  create_user?: UserInfo;
  /** update information */
  update_user?: UserInfo;
  create_at_unix?: Int64;
  update_at_unix?: Int64;
}

export interface ModelMetaTemplateData {
  /** Large model name model_arch */
  model_name?: string;
  family?: copilot_common.ModelFamily;
  version?: copilot_common.ModelVersion;
  desc?: string;
  show_name?: string;
  icon_url?: string;
  capability?: copilot.Capability;
  quota?: copilot.ModelQuota;
  model_config?: copilot.ModelConf;
  prompt_conf?: copilot.PromptConf;
  legacy_fields?: copilot.LegacyFields;
  /** model parameters */
  parameters?: Array<copilot.ModelParameter>;
  display_properties?: string;
  redirect_uri?: string;
}

export interface ModelQueryRequest {
  /** Model ID, pull the full amount without passing it on. */
  ModelIds?: Array<string>;
  Referer?: string;
  Scene?: copilot_common.ModelListScene;
  /** The specified state is not passed. The default is that all states are obtained (including deletion). */
  Status?: Array<copilot_common.ModelStatus>;
  /** Fuzzy matching ModelName */
  ModelName?: string;
  'Ocean-Jwt-Token'?: string;
  Cursor?: Int64;
  Size?: Int64;
}

export interface ModelRuntimeTag {
  functionCall?: boolean;
  image?: boolean;
  video?: boolean;
  audio?: boolean;
  /** Multimodal supported file types, following the MIME standard */
  imageTypes?: Array<string>;
  /** Multimodal supported file types, following the MIME standard */
  videoTypes?: Array<string>;
  /** Multimodal supported file types, following the MIME standard */
  audioTypes?: Array<string>;
  /** continuation ability */
  prefillResp?: boolean;
  /** prefix caching capability */
  prefixCache?: boolean;
  /** Deep Thinking */
  cotDisplay?: boolean;
}

export interface ModelSceneData {
  /** Scene ID */
  scene?: copilot_common.ModelListScene;
  /** Model basic information */
  model_data: ModelData;
  /** display name */
  show_name: string;
  /** icon */
  icon?: string;
  /** Status 1 in use */
  status?: copilot_common.ModelStatus;
  /** Sorting fields, the bigger the ranking, the earlier */
  ranking?: number;
  /** Full path to icon icon */
  icon_url?: string;
  /** creator information */
  create_user?: UserInfo;
  /** Last Updated Person Information */
  update_user?: UserInfo;
  /** creation time */
  create_at_unix?: Int64;
  /** update time */
  update_at_unix?: Int64;
}

export interface ModelShowFamily {
  id?: string;
  icon?: string;
  iconUrl?: string;
  name?: string;
  ranking?: number;
}

export interface OfflineOpBotsModelReq {
  modelId?: string;
  scene?: copilot_common.ModelListScene;
  scheduleTime?: string;
}

export interface OfflineOpBotsModelResp {
  code?: number;
  msg?: string;
}

export interface OnlineOpBotsModelReq {
  modelId?: string;
  scene?: copilot_common.ModelListScene;
  /** sort */
  ranking?: number;
  schedule_time?: string;
}

export interface OnlineOpBotsModelResp {
  code?: number;
  msg?: string;
}

export interface OpBotsModelModelScene {
  scheduleTaskId?: string;
  scheduleTime?: string;
  /** 0-Not on the shelves 1-To be online 2-On the line 3-To be offline 4-Off the line 5-Cancel */
  status?: number;
  scene?: copilot_common.ModelListScene;
  operator?: string;
  operatorAvatarUrl?: string;
  ranking?: number;
}

export interface QueryDeploymentDetailRequest {
  Id?: string;
  Title?: string;
  Operator?: string;
  Status?: DeployStatusEnum;
  PageNum: Int64;
  PageSize: Int64;
}

export interface QueryDeploymentDetailResponse {
  code?: number;
  msg?: string;
  DeploymentDetails?: Array<DeploymentDetail>;
  Total?: Int64;
}

export interface QueryModelEntityData {
  model_entity_list?: Array<model_manage.ModelEntity>;
  total?: Int64;
}

export interface QueryModelEntityReq {
  /** Fuzzy matching ModelName */
  model_name?: string;
  Referer?: string;
  index?: Int64;
  page_size?: Int64;
  'Ocean-Jwt-Token'?: string;
}

export interface QueryModelEntityResp {
  code?: number;
  msg?: string;
  data: QueryModelEntityData;
}

export interface QueryModelMetaByIdReq {
  MetaId: string;
}

export interface QueryModelMetaByIdResp {
  code?: number;
  msg?: string;
  data?: ModelData;
  yaml_data?: string;
}

export interface QueryModelMetaData {
  model_data_list?: Array<ModelData>;
  total?: Int64;
}

export interface QueryModelMetaReq {
  /** Fuzzy matching ModelName */
  model_name?: string;
  Referer?: string;
  index?: Int64;
  page_size?: Int64;
  'Ocean-Jwt-Token'?: string;
}

export interface QueryModelMetaResp {
  code?: number;
  msg?: string;
  data: QueryModelMetaData;
}

export interface RollBackDeploymentReq {
  build_id?: string;
}

export interface RollBackDeploymentResp {
  code?: number;
  msg?: string;
}

export interface RunOpBotsScheduleTaskReq {
  taskId?: string;
}

export interface RunOpBotsScheduleTaskResp {
  code?: number;
  msg?: string;
}

export interface UpdateDeploymentStatusReq {
  BizKey?: string;
  BizType?: BussinessType;
  Status?: DeployStatusEnum;
  DeployId?: Int64;
}

export interface UpdateDeploymentStatusResp {
  code?: number;
  msg?: string;
}

export interface UpdateModelEntityData {
  redirect_uri?: string;
}

export interface UpdateModelEntityReq {
  /** Model ID */
  model_id?: string;
  /** Model name */
  model_name?: string;
  Referer?: string;
  /** model shunting */
  targets?: Array<model_manage.ModelRuleTarget>;
  biz?: number;
  'Ocean-Jwt-Token'?: string;
}

export interface UpdateModelEntityResp {
  code?: number;
  msg?: string;
  data: UpdateModelEntityData;
  Url?: string;
}

export interface UpdateModelMetaData {
  /** ID of the model */
  model_meta_id: Int64;
  redirect_uri?: string;
}

export interface UpdateModelMetaReq {
  /** Model ID */
  model_id?: string;
  /** Model name */
  model_name?: string;
  Referer?: string;
  /** Classification where the big model is located */
  family?: copilot_common.ModelFamily;
  /** Version corresponding to the large model (currently only applicable to GPT) */
  version?: copilot_common.ModelVersion;
  /** Model description, minimum 5 bytes, maximum 2048 */
  desc?: string;
  show_name?: string;
  icon?: string;
  /** Model capability description */
  capability?: copilot.Capability;
  /** Model capacity constraints */
  quota?: copilot.ModelQuota;
  /** Model timeouts and retries, etc */
  model_config?: copilot.ModelConf;
  /** Model template configuration */
  prompt_conf?: copilot.PromptConf;
  /** historical compatibility field */
  legacy_fields?: copilot.LegacyFields;
  /** model parameters */
  parameters?: Array<copilot.ModelParameter>;
  display_properties?: string;
  'Ocean-Jwt-Token'?: string;
}

export interface UpdateModelMetaResp {
  code?: number;
  msg?: string;
  data: UpdateModelMetaData;
}

export interface UpdateModelWithSceneData {
  redirect_uri?: string;
}

export interface UpdateModelWithSceneReq {
  /** Scene ID */
  scene: copilot_common.ModelListScene;
  /** Model ID, Scene ID + Model ID are unique keys */
  model_id: string;
  Referer?: string;
  /** Display name, maximum 128 characters (if you need to support i18n later, expand a Starling field) */
  show_name?: string;
  /** Icon, maximum 256 characters */
  icon?: string;
  /** sort */
  ranking?: number;
  'Ocean-Jwt-Token'?: string;
}

export interface UpdateModelWithSceneResp {
  code?: number;
  msg?: string;
  data: UpdateModelWithSceneData;
}

export interface UpdateOpBotsModelRankingReq {
  modelId?: string;
  ranking?: number;
  scene?: copilot_common.ModelListScene;
}

export interface UpdateOpBotsModelRankingResp {
  code?: number;
  msg?: string;
}

export interface UpdateOpBotsModelReq {
  modelId?: string;
  icon?: string;
  description?: string;
  modelParamList?: Array<model_manage.ModelParameter>;
  modelName?: string;
  paidTags?: Array<string>;
  tokenLimit?: number;
  modelRuntimeTag?: ModelRuntimeTag;
}

export interface UpdateOpBotsModelResp {
  code?: number;
  msg?: string;
}

export interface UpdateOpsBotsDefaultModelReq {
  modelId?: string;
}

export interface UpdateOpsBotsDefaultModelResp {
  code?: number;
  msg?: string;
}

export interface UpdateOpsBotsHotModelInfo {
  modelId?: string;
  ranking?: number;
  hotFlag?: number;
}

export interface UpdateOpsBotsHotModelReq {
  modelList?: Array<UpdateOpsBotsHotModelInfo>;
}

export interface UpdateOpsBotsHotModelResp {
  code?: number;
  msg?: string;
}

export interface UpdateOpsBotsModelShowFamilyReq {
  id?: string;
  icon?: string;
  name?: string;
  ranking?: number;
}

export interface UpdateOpsBotsModelShowFamilyResp {
  code?: number;
  msg?: string;
}

export interface UploadOpsBotsModelAvatarData {
  icon?: string;
  iconUrl?: string;
}

export interface UploadOpsBotsModelAvatarReq {
  filename?: string;
  content?: string;
}

export interface UploadOpsBotsModelAvatarResp {
  code?: number;
  msg?: string;
  data?: UploadOpsBotsModelAvatarData;
}

export interface UserInfo {
  /** user's mailbox prefix */
  user_name?: string;
}
/* eslint-enable */
